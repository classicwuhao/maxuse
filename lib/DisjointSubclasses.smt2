
;this file is automatically generated: Wed Mar 23 15:27:06 GMT 2016

;declarations generated

(declare-fun type_c4d5ca78_e110_4f60_8a4d_d0ae8cc4b07c_B ( Int) Bool )
(declare-fun type_c734703a_fba6_47be_84b9_0f5e1cc93343_A ( Int) Bool )
(declare-fun type_08a4704d_f100_400f_8b72_4ffdc135d0d4_D ( Int) Bool )
(declare-fun container_ ( Int) Int )
(declare-fun Cardinality ( Int) Int )
(declare-fun type_c339b15e_2f13_4422_acfd_de3acfa73372_C ( Int) Bool )
(declare-fun obj_fc1da950_9cdf_45b3_8fe6_dd01953f9c26 ( Int) Int )
(declare-fun aux4 () Int )
(declare-fun aux2 () Int )
(declare-fun aux3 () Int )
(declare-fun aux0 () Int )
(declare-fun aux1 () Int )
(declare-fun weight2 () Int )
(declare-fun weight3 () Int )
(declare-fun weight0 () Int )
(declare-fun weight1 () Int )
(declare-fun weight4 () Int )

;formula(s) generated
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall ((b Int)) (=> (and ( type_c4d5ca78_e110_4f60_8a4d_d0ae8cc4b07c_B b )  ( type_c734703a_fba6_47be_84b9_0f5e1cc93343_A b ) ) (forall ((c Int)) (=> (and ( type_c339b15e_2f13_4422_acfd_de3acfa73372_C c )  ( type_c734703a_fba6_47be_84b9_0f5e1cc93343_A c ) ) (not (= ( obj_fc1da950_9cdf_45b3_8fe6_dd01953f9c26 b )  ( obj_fc1da950_9cdf_45b3_8fe6_dd01953f9c26 c ) ) ))))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (and (=> (= aux0 0) (= weight0 7)) (=> (= aux0 1) (= weight0 0))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (and (>= aux3 0) (<= aux3 1)))
(assert (and (>= aux4 0) (<= aux4 1)))
(assert (or (or (exists ((p Int)) ( type_c734703a_fba6_47be_84b9_0f5e1cc93343_A ( obj_fc1da950_9cdf_45b3_8fe6_dd01953f9c26 p )  ) ) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (and (=> (= aux1 0) (= weight1 10)) (=> (= aux1 1) (= weight1 0))))
(assert (or (or (exists ((p Int)) (and ( type_c4d5ca78_e110_4f60_8a4d_d0ae8cc4b07c_B ( obj_fc1da950_9cdf_45b3_8fe6_dd01953f9c26 p )  )  ( type_c734703a_fba6_47be_84b9_0f5e1cc93343_A ( obj_fc1da950_9cdf_45b3_8fe6_dd01953f9c26 p )  ) )) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (and (=> (= aux2 0) (= weight2 5)) (=> (= aux2 1) (= weight2 0))))
(assert (or (or (exists ((p Int)) (and ( type_c339b15e_2f13_4422_acfd_de3acfa73372_C ( obj_fc1da950_9cdf_45b3_8fe6_dd01953f9c26 p )  )  ( type_c734703a_fba6_47be_84b9_0f5e1cc93343_A ( obj_fc1da950_9cdf_45b3_8fe6_dd01953f9c26 p )  ) )) (and (= aux3 1) true)) (and (= aux3 0) false)))
(assert (and (=> (= aux3 0) (= weight3 6)) (=> (= aux3 1) (= weight3 0))))
(assert (or (or (exists ((p Int)) (and (and (and ( type_08a4704d_f100_400f_8b72_4ffdc135d0d4_D ( obj_fc1da950_9cdf_45b3_8fe6_dd01953f9c26 p )  )  ( type_c734703a_fba6_47be_84b9_0f5e1cc93343_A ( obj_fc1da950_9cdf_45b3_8fe6_dd01953f9c26 p )  ) ) ( type_c4d5ca78_e110_4f60_8a4d_d0ae8cc4b07c_B ( obj_fc1da950_9cdf_45b3_8fe6_dd01953f9c26 p )  ) ) ( type_c339b15e_2f13_4422_acfd_de3acfa73372_C ( obj_fc1da950_9cdf_45b3_8fe6_dd01953f9c26 p )  ) )) (and (= aux4 1) true)) (and (= aux4 0) false)))
(assert (and (=> (= aux4 0) (= weight4 10)) (=> (= aux4 1) (= weight4 0))))
(assert (= (+ (+ (+ (+ weight0 weight1) weight2) weight3) weight4) 31))

(assert (not (and (and (and (and (= weight0 0) (= weight1 10)) (= weight2 5)) (= weight3 6)) (= weight4 10)) ))
