
;this file is automatically generated: Fri Mar 18 16:15:03 GMT 2016

;declarations generated

(declare-fun type_16fc2a37_b863_402d_ba3c_51f20ca4afce_A ( Int) Bool )
(declare-fun type_a667695c_516d_4eb5_8734_5433936463c4_D ( Int) Bool )
(declare-fun obj_9eb51211_f5b8_4ced_bd7b_c268ebf14115 ( Int) Int )
(declare-fun container_ ( Int) Int )
(declare-fun Cardinality ( Int) Int )
(declare-fun aux4 () Int )
(declare-fun type_6645d678_0995_40e2_94cf_d8a1c08874f6_C ( Int) Bool )
(declare-fun aux2 () Int )
(declare-fun aux3 () Int )
(declare-fun aux0 () Int )
(declare-fun aux1 () Int )
(declare-fun weight2 () Int )
(declare-fun weight3 () Int )
(declare-fun weight0 () Int )
(declare-fun weight1 () Int )
(declare-fun weight4 () Int )
(declare-fun type_fa3cff5e_abb8_4941_9ee6_9cf7229b794a_B ( Int) Bool )

;formula(s) generated
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall ((b Int)) (=> (and ( type_fa3cff5e_abb8_4941_9ee6_9cf7229b794a_B b )  ( type_16fc2a37_b863_402d_ba3c_51f20ca4afce_A b ) ) (forall ((c Int)) (=> (and ( type_6645d678_0995_40e2_94cf_d8a1c08874f6_C c )  ( type_16fc2a37_b863_402d_ba3c_51f20ca4afce_A c ) ) (not (= ( obj_9eb51211_f5b8_4ced_bd7b_c268ebf14115 b )  ( obj_9eb51211_f5b8_4ced_bd7b_c268ebf14115 c ) ) ))))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (and (=> (= aux0 0) (= weight0 7)) (=> (= aux0 1) (= weight0 0))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (and (>= aux3 0) (<= aux3 1)))
(assert (and (>= aux4 0) (<= aux4 1)))
(assert (or (or (exists ((p Int)) ( type_16fc2a37_b863_402d_ba3c_51f20ca4afce_A p ) ) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (and (=> (= aux1 0) (= weight1 10)) (=> (= aux1 1) (= weight1 0))))
(assert (or (or (exists ((p Int)) (and ( type_fa3cff5e_abb8_4941_9ee6_9cf7229b794a_B p )  ( type_16fc2a37_b863_402d_ba3c_51f20ca4afce_A p ) )) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (and (=> (= aux2 0) (= weight2 5)) (=> (= aux2 1) (= weight2 0))))
(assert (or (or (exists ((p Int)) (and ( type_6645d678_0995_40e2_94cf_d8a1c08874f6_C p )  ( type_16fc2a37_b863_402d_ba3c_51f20ca4afce_A p ) )) (and (= aux3 1) true)) (and (= aux3 0) false)))
(assert (and (=> (= aux3 0) (= weight3 6)) (=> (= aux3 1) (= weight3 0))))
(assert (or (or (exists ((p Int)) (and (and (and ( type_a667695c_516d_4eb5_8734_5433936463c4_D p )  ( type_16fc2a37_b863_402d_ba3c_51f20ca4afce_A p ) ) ( type_fa3cff5e_abb8_4941_9ee6_9cf7229b794a_B p ) ) ( type_6645d678_0995_40e2_94cf_d8a1c08874f6_C p ) )) (and (= aux4 1) true)) (and (= aux4 0) false)))
(assert (and (=> (= aux4 0) (= weight4 5)) (=> (= aux4 1) (= weight4 0))))
(assert (= (+ (+ (+ (+ weight0 weight1) weight2) weight3) weight4) 28))

(assert (not (and (and (and (and (= weight0 7) (= weight1 10)) (= weight2 5)) (= weight3 6)) (= weight4 0)) ))
