
;this file is automatically generated: Mon Apr 03 10:59:03 IST 2017

;declarations generated

(declare-fun class10_Class10IntAttr3 ( Int) Int )
(declare-fun class10_Class10IntAttr4 ( Int) Int )
(declare-fun type_f6d46d72_d840_4943_8c3f_a60cd53b61ce_Class47 ( Int) Bool )
(declare-fun type_b487ca72_cce1_4e42_b5a0_ac6e39cd33be_Class54 ( Int) Bool )
(declare-fun class39_Class39BoolAttr1 ( Int) Bool )
(declare-fun class39_Class39BoolAttr0 ( Int) Bool )
(declare-fun type_69dda496_d763_45ba_9fbc_667f0b149b10_Class11 ( Int) Bool )
(declare-fun class23_Class23BoolAttr0 ( Int) Bool )
(declare-fun class23_Class23BoolAttr1 ( Int) Bool )
(declare-fun type_d76be500_c00a_467c_b524_ecd896d509db_Class25 ( Int) Bool )
(declare-fun type_81e45b6c_0f30_4734_9277_19a505a78571_Class34 ( Int) Bool )
(declare-fun type_8d2fee4e_d9d4_46dd_b9cd_e57e07fc0f04_Class29 ( Int) Bool )
(declare-fun class11_Class11IntAttr4 ( Int) Int )
(declare-fun oclExcludes ( Int Int) Bool )
(declare-fun class11_Class11IntAttr3 ( Int) Int )
(declare-fun type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 ( Int) Bool )
(declare-fun rel_b0356f59_f5f1_4666_a7db_f713974b7478_Class6_Class18 ( Int Int) Bool )
(declare-fun aux200 () Int )
(declare-fun aux201 () Int )
(declare-fun class14_Class14BoolAttr0 ( Int) Bool )
(declare-fun class14_Class14BoolAttr1 ( Int) Bool )
(declare-fun class8_Class8IntAttr4 ( Int) Int )
(declare-fun class8_Class8IntAttr3 ( Int) Int )
(declare-fun aux208 () Int )
(declare-fun aux209 () Int )
(declare-fun aux206 () Int )
(declare-fun aux207 () Int )
(declare-fun aux204 () Int )
(declare-fun aux205 () Int )
(declare-fun aux202 () Int )
(declare-fun aux203 () Int )
(declare-fun type_085c21cf_5c26_4ee2_b213_395bc6cef7f3_Class26 ( Int) Bool )
(declare-fun type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 ( Int) Bool )
(declare-fun rel_566e53d7_b020_464d_8e81_168dfd038d72_Class7_Class56 ( Int Int) Bool )
(declare-fun k5a8457f2_fd71_4fa6_a284_b5aa550dbacb () Int )
(declare-fun rel_c92da7bd_c5f4_4726_8b0d_1602776191ae_Class18_Class35 ( Int Int) Bool )
(declare-fun type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 ( Int) Bool )
(declare-fun type_2066b13c_6f06_4cf7_a582_75c5e7d18e4e_Class14 ( Int) Bool )
(declare-fun class9_Class9BoolAttr2 ( Int) Bool )
(declare-fun type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 ( Int) Bool )
(declare-fun class9_Class9BoolAttr0 ( Int) Bool )
(declare-fun class9_Class9BoolAttr1 ( Int) Bool )
(declare-fun class12_Class12BoolAttr2 ( Int) Bool )
(declare-fun class12_Class12BoolAttr1 ( Int) Bool )
(declare-fun class12_Class12BoolAttr0 ( Int) Bool )
(declare-fun type_19cf6536_54d7_4161_aee0_814462a77144_Class38 ( Int) Bool )
(declare-fun aux101 () Int )
(declare-fun aux222 () Int )
(declare-fun aux102 () Int )
(declare-fun aux223 () Int )
(declare-fun aux220 () Int )
(declare-fun aux100 () Int )
(declare-fun aux221 () Int )
(declare-fun class17_Class17IntAttr2 ( Int) Int )
(declare-fun class44_Class44IntAttr2 ( Int) Int )
(declare-fun k239b20c5_cf60_4499_8575_6aa8d49e6582 () Int )
(declare-fun class16_Class16IntAttr3 ( Int) Int )
(declare-fun class17_Class17IntAttr3 ( Int) Int )
(declare-fun type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 ( Int) Bool )
(declare-fun class16_Class16IntAttr4 ( Int) Int )
(declare-fun aux109 () Int )
(declare-fun aux107 () Int )
(declare-fun aux108 () Int )
(declare-fun class43_Class43IntAttr4 ( Int) Int )
(declare-fun aux105 () Int )
(declare-fun aux226 () Int )
(declare-fun class43_Class43IntAttr3 ( Int) Int )
(declare-fun aux106 () Int )
(declare-fun aux227 () Int )
(declare-fun type_9bf6cfa1_28e0_41b2_b84c_e5e1a84a0db2_Class3 ( Int) Bool )
(declare-fun class3_Class3IntAttr4 ( Int) Int )
(declare-fun class43_Class43IntAttr2 ( Int) Int )
(declare-fun aux103 () Int )
(declare-fun aux224 () Int )
(declare-fun class3_Class3IntAttr3 ( Int) Int )
(declare-fun aux104 () Int )
(declare-fun aux225 () Int )
(declare-fun aux211 () Int )
(declare-fun aux212 () Int )
(declare-fun aux210 () Int )
(declare-fun Cardinality ( Int) Int )
(declare-fun class18_Class18IntAttr2 ( Int) Int )
(declare-fun class18_Class18IntAttr3 ( Int) Int )
(declare-fun type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 ( Int) Bool )
(declare-fun class46_Class46IntAttr2 ( Int) Int )
(declare-fun class19_Class19IntAttr2 ( Int) Int )
(declare-fun type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 ( Int) Bool )
(declare-fun class14_Class14BoolAttr2 ( Int) Bool )
(declare-fun class52_Class52BoolAttr0 ( Int) Bool )
(declare-fun class19_Class19IntAttr3 ( Int) Int )
(declare-fun class0_Class0IntAttr3 ( Int) Int )
(declare-fun aux219 () Int )
(declare-fun class0_Class0IntAttr4 ( Int) Int )
(declare-fun class45_Class45IntAttr2 ( Int) Int )
(declare-fun aux217 () Int )
(declare-fun k1a7d2c7c9_260d_4445_9662_f084d4400d39 () Int )
(declare-fun aux218 () Int )
(declare-fun type_2ea2084f_4b09_4467_a2f4_39aa485c2be4_Class1 ( Int) Bool )
(declare-fun aux215 () Int )
(declare-fun aux216 () Int )
(declare-fun aux213 () Int )
(declare-fun aux214 () Int )
(declare-fun aux123 () Int )
(declare-fun aux124 () Int )
(declare-fun aux121 () Int )
(declare-fun aux122 () Int )
(declare-fun class13_Class13IntAttr4 ( Int) Int )
(declare-fun class13_Class13IntAttr3 ( Int) Int )
(declare-fun aux120 () Int )
(declare-fun class19_Class19BoolAttr1 ( Int) Bool )
(declare-fun class19_Class19BoolAttr0 ( Int) Bool )
(declare-fun class48_Class48IntAttr2 ( Int) Int )
(declare-fun type_c65c46be_3558_43b5_94ec_6b0287a5326f_Class42 ( Int) Bool )
(declare-fun class47_Class47IntAttr2 ( Int) Int )
(declare-fun type_a359a594_1de4_424e_be85_5e1318b33a72_Class49 ( Int) Bool )
(declare-fun class12_Class12IntAttr4 ( Int) Int )
(declare-fun class12_Class12IntAttr3 ( Int) Int )
(declare-fun class37_Class37BoolAttr0 ( Int) Bool )
(declare-fun aux129 () Int )
(declare-fun class37_Class37BoolAttr1 ( Int) Bool )
(declare-fun aux127 () Int )
(declare-fun type_c57c575d_b1d9_4470_85c0_2b014913ab1d_Class8 ( Int) Bool )
(declare-fun aux128 () Int )
(declare-fun aux125 () Int )
(declare-fun aux126 () Int )
(declare-fun aux112 () Int )
(declare-fun aux113 () Int )
(declare-fun aux110 () Int )
(declare-fun aux111 () Int )
(declare-fun class15_Class15IntAttr3 ( Int) Int )
(declare-fun class15_Class15IntAttr4 ( Int) Int )
(declare-fun type_cde548a2_ce14_48cb_b872_a3ab73a5de8e_Class51 ( Int) Bool )
(declare-fun class14_Class14IntAttr4 ( Int) Int )
(declare-fun type_c0d5d719_335c_4577_b2c2_17584e1d28bb_Class16 ( Int) Bool )
(declare-fun class17_Class17BoolAttr0 ( Int) Bool )
(declare-fun class14_Class14IntAttr3 ( Int) Int )
(declare-fun class17_Class17BoolAttr1 ( Int) Bool )
(declare-fun rel_8d2d26b5_5055_469c_a2ef_0c2f4c1bfeab_Class19_Class55 ( Int Int) Bool )
(declare-fun class54_Class54BoolAttr0 ( Int) Bool )
(declare-fun class49_Class49IntAttr2 ( Int) Int )
(declare-fun ke1cb5479_3465_4e10_a1c0_9f9bba63b434 () Int )
(declare-fun aux118 () Int )
(declare-fun aux119 () Int )
(declare-fun aux116 () Int )
(declare-fun aux117 () Int )
(declare-fun aux114 () Int )
(declare-fun aux115 () Int )
(declare-fun aux145 () Int )
(declare-fun aux146 () Int )
(declare-fun aux143 () Int )
(declare-fun aux144 () Int )
(declare-fun aux141 () Int )
(declare-fun class33_Class33IntAttr0 ( Int) Int )
(declare-fun aux142 () Int )
(declare-fun aux140 () Int )
(declare-fun aux67 () Int )
(declare-fun aux66 () Int )
(declare-fun kd48b463b_db22_41dc_bb75_197e31ae5664 () Int )
(declare-fun aux69 () Int )
(declare-fun aux68 () Int )
(declare-fun aux63 () Int )
(declare-fun aux62 () Int )
(declare-fun aux65 () Int )
(declare-fun aux64 () Int )
(declare-fun aux70 () Int )
(declare-fun aux72 () Int )
(declare-fun aux71 () Int )
(declare-fun class41_Class41BoolAttr1 ( Int) Bool )
(declare-fun class46_Class46BoolAttr0 ( Int) Bool )
(declare-fun class41_Class41BoolAttr0 ( Int) Bool )
(declare-fun class46_Class46BoolAttr1 ( Int) Bool )
(declare-fun aux149 () Int )
(declare-fun aux147 () Int )
(declare-fun class28_Class28IntAttr2 ( Int) Int )
(declare-fun aux148 () Int )
(declare-fun aux134 () Int )
(declare-fun aux135 () Int )
(declare-fun aux132 () Int )
(declare-fun k5b95ea72_0e8f_4617_ac61_18a047f6dc79 () Int )
(declare-fun aux133 () Int )
(declare-fun aux130 () Int )
(declare-fun class35_Class35IntAttr0 ( Int) Int )
(declare-fun aux131 () Int )
(declare-fun aux78 () Int )
(declare-fun aux77 () Int )
(declare-fun class56_Class56BoolAttr0 ( Int) Bool )
(declare-fun aux79 () Int )
(declare-fun aux74 () Int )
(declare-fun aux73 () Int )
(declare-fun aux76 () Int )
(declare-fun aux75 () Int )
(declare-fun aux81 () Int )
(declare-fun aux80 () Int )
(declare-fun aux83 () Int )
(declare-fun aux82 () Int )
(declare-fun rel_a5cc768a_6401_4229_87de_673e66bbc168_Class13_Class7 ( Int Int) Bool )
(declare-fun aux138 () Int )
(declare-fun aux139 () Int )
(declare-fun aux136 () Int )
(declare-fun aux137 () Int )
(declare-fun aux167 () Int )
(declare-fun aux168 () Int )
(declare-fun type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 ( Int) Bool )
(declare-fun aux165 () Int )
(declare-fun aux166 () Int )
(declare-fun aux163 () Int )
(declare-fun aux164 () Int )
(declare-fun aux161 () Int )
(declare-fun aux162 () Int )
(declare-fun aux89 () Int )
(declare-fun aux88 () Int )
(declare-fun aux160 () Int )
(declare-fun aux85 () Int )
(declare-fun aux84 () Int )
(declare-fun aux87 () Int )
(declare-fun aux86 () Int )
(declare-fun aux92 () Int )
(declare-fun aux91 () Int )
(declare-fun aux94 () Int )
(declare-fun aux93 () Int )
(declare-fun aux90 () Int )
(declare-fun class31_Class31IntAttr0 ( Int) Int )
(declare-fun rel_ec206883_1da3_46e9_b989_4110ae83cfbc_Class10_Class51 ( Int Int) Bool )
(declare-fun aux169 () Int )
(declare-fun aux156 () Int )
(declare-fun aux157 () Int )
(declare-fun aux154 () Int )
(declare-fun aux155 () Int )
(declare-fun aux152 () Int )
(declare-fun aux153 () Int )
(declare-fun aux150 () Int )
(declare-fun aux151 () Int )
(declare-fun aux99 () Int )
(declare-fun aux96 () Int )
(declare-fun aux95 () Int )
(declare-fun aux98 () Int )
(declare-fun aux97 () Int )
(declare-fun class40_Class40BoolAttr0 ( Int) Bool )
(declare-fun class40_Class40BoolAttr1 ( Int) Bool )
(declare-fun class41_Class41IntAttr4 ( Int) Int )
(declare-fun class41_Class41IntAttr3 ( Int) Int )
(declare-fun class41_Class41IntAttr2 ( Int) Int )
(declare-fun aux158 () Int )
(declare-fun aux159 () Int )
(declare-fun aux189 () Int )
(declare-fun aux187 () Int )
(declare-fun aux188 () Int )
(declare-fun aux27 () Int )
(declare-fun aux185 () Int )
(declare-fun aux26 () Int )
(declare-fun aux186 () Int )
(declare-fun aux29 () Int )
(declare-fun aux183 () Int )
(declare-fun aux28 () Int )
(declare-fun aux184 () Int )
(declare-fun aux23 () Int )
(declare-fun aux181 () Int )
(declare-fun aux22 () Int )
(declare-fun aux182 () Int )
(declare-fun aux25 () Int )
(declare-fun aux24 () Int )
(declare-fun aux180 () Int )
(declare-fun aux21 () Int )
(declare-fun aux20 () Int )
(declare-fun class4_Class4IntAttr4 ( Int) Int )
(declare-fun class4_Class4IntAttr3 ( Int) Int )
(declare-fun type_79243f18_e1eb_44bf_a068_99e2f0f79055_Class39 ( Int) Bool )
(declare-fun weight9 () Int )
(declare-fun weight8 () Int )
(declare-fun type_17e19828_4b82_4208_892f_70ef1e79ed6d_Class23 ( Int) Bool )
(declare-fun aux178 () Int )
(declare-fun aux179 () Int )
(declare-fun aux176 () Int )
(declare-fun aux177 () Int )
(declare-fun class42_Class42BoolAttr1 ( Int) Bool )
(declare-fun aux38 () Int )
(declare-fun aux174 () Int )
(declare-fun class42_Class42BoolAttr0 ( Int) Bool )
(declare-fun aux37 () Int )
(declare-fun aux175 () Int )
(declare-fun aux172 () Int )
(declare-fun aux39 () Int )
(declare-fun aux173 () Int )
(declare-fun aux34 () Int )
(declare-fun aux170 () Int )
(declare-fun aux33 () Int )
(declare-fun aux171 () Int )
(declare-fun aux36 () Int )
(declare-fun aux35 () Int )
(declare-fun class48_Class48BoolAttr1 ( Int) Bool )
(declare-fun aux30 () Int )
(declare-fun class48_Class48BoolAttr0 ( Int) Bool )
(declare-fun aux32 () Int )
(declare-fun aux31 () Int )
(declare-fun class7_Class7IntAttr3 ( Int) Int )
(declare-fun class7_Class7IntAttr4 ( Int) Int )
(declare-fun rel_b899742e_b558_4fdf_99f8_df20ace3ccec_Class1_Class16 ( Int Int) Bool )
(declare-fun aux1 () Int )
(declare-fun aux0 () Int )
(declare-fun aux3 () Int )
(declare-fun aux2 () Int )
(declare-fun aux49 () Int )
(declare-fun rel_89cc00ef_e2dc_4399_8c97_83c22541dee4_Class17_Class17 ( Int Int) Bool )
(declare-fun aux48 () Int )
(declare-fun type_ca6bb482_b8f1_4dfa_9371_2528e1a78785_Class20 ( Int) Bool )
(declare-fun aux45 () Int )
(declare-fun aux44 () Int )
(declare-fun class47_Class47BoolAttr1 ( Int) Bool )
(declare-fun aux47 () Int )
(declare-fun type_586f09b1_e4a9_4440_8972_322226f6f87a_Class0 ( Int) Bool )
(declare-fun class47_Class47BoolAttr0 ( Int) Bool )
(declare-fun aux46 () Int )
(declare-fun aux41 () Int )
(declare-fun aux40 () Int )
(declare-fun class43_Class43BoolAttr0 ( Int) Bool )
(declare-fun aux43 () Int )
(declare-fun class43_Class43BoolAttr1 ( Int) Bool )
(declare-fun aux42 () Int )
(declare-fun aux50 () Int )
(declare-fun type_a1dc748f_0bc8_4325_9533_bd2b456e6a82_Class50 ( Int) Bool )
(declare-fun type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 ( Int) Bool )
(declare-fun aux9 () Int )
(declare-fun aux8 () Int )
(declare-fun aux5 () Int )
(declare-fun aux4 () Int )
(declare-fun aux7 () Int )
(declare-fun aux6 () Int )
(declare-fun aux198 () Int )
(declare-fun aux199 () Int )
(declare-fun aux196 () Int )
(declare-fun aux59 () Int )
(declare-fun aux197 () Int )
(declare-fun class44_Class44BoolAttr1 ( Int) Bool )
(declare-fun aux194 () Int )
(declare-fun class44_Class44BoolAttr0 ( Int) Bool )
(declare-fun aux195 () Int )
(declare-fun weight7 () Int )
(declare-fun aux56 () Int )
(declare-fun aux192 () Int )
(declare-fun weight6 () Int )
(declare-fun aux55 () Int )
(declare-fun aux193 () Int )
(declare-fun weight5 () Int )
(declare-fun aux58 () Int )
(declare-fun aux190 () Int )
(declare-fun weight4 () Int )
(declare-fun aux57 () Int )
(declare-fun aux191 () Int )
(declare-fun weight3 () Int )
(declare-fun aux52 () Int )
(declare-fun weight2 () Int )
(declare-fun aux51 () Int )
(declare-fun weight1 () Int )
(declare-fun aux54 () Int )
(declare-fun weight0 () Int )
(declare-fun aux53 () Int )
(declare-fun aux61 () Int )
(declare-fun aux60 () Int )
(declare-fun class45_Class45BoolAttr1 ( Int) Bool )
(declare-fun type_e9cedb47_b613_47fd_8556_ef0d6561eaca_Class33 ( Int) Bool )
(declare-fun class45_Class45BoolAttr0 ( Int) Bool )
(declare-fun type_f2782312_f137_43ff_aa37_e35f03a3f4de_Class31 ( Int) Bool )
(declare-fun class56_Class56IntAttr1 ( Int) Int )
(declare-fun weight90 () Int )
(declare-fun type_f0331523_9461_4232_80d2_0746c6ef381b_Class55 ( Int) Bool )
(declare-fun type_ef0869a7_c2f0_46f6_b446_e20eb09a21f2_Class4 ( Int) Bool )
(declare-fun rel_6319e4b0_4e77_41b9_b8ae_f178bffc6db0_Class9_Class9 ( Int Int) Bool )
(declare-fun weight99 () Int )
(declare-fun class55_Class55IntAttr1 ( Int) Int )
(declare-fun type_dd7f8304_856a_40e9_affb_4f7e3669961e_Class37 ( Int) Bool )
(declare-fun class49_Class49BoolAttr0 ( Int) Bool )
(declare-fun class49_Class49BoolAttr1 ( Int) Bool )
(declare-fun weight93 () Int )
(declare-fun class13_Class13BoolAttr2 ( Int) Bool )
(declare-fun weight94 () Int )
(declare-fun class13_Class13BoolAttr1 ( Int) Bool )
(declare-fun weight91 () Int )
(declare-fun class13_Class13BoolAttr0 ( Int) Bool )
(declare-fun weight92 () Int )
(declare-fun weight97 () Int )
(declare-fun weight98 () Int )
(declare-fun rel_43460a88_f424_49a5_9cf5_d6cc506efa02_Class4_Class26 ( Int Int) Bool )
(declare-fun weight95 () Int )
(declare-fun weight96 () Int )
(declare-fun type_d8506e19_c26d_4444_84d2_3314cabdd75f_Class56 ( Int) Bool )
(declare-fun class29_Class29BoolAttr0 ( Int) Bool )
(declare-fun class29_Class29BoolAttr1 ( Int) Bool )
(declare-fun rel_e162d45d_abfb_45ce_8ca2_330bff61c0a6_Class5_Class39 ( Int Int) Bool )
(declare-fun type_199aee0d_b81f_40b9_aa2c_70c6c5f327fc_Class12 ( Int) Bool )
(declare-fun class8_Class8BoolAttr2 ( Int) Bool )
(declare-fun class53_Class53IntAttr1 ( Int) Int )
(declare-fun class8_Class8BoolAttr1 ( Int) Bool )
(declare-fun class8_Class8BoolAttr0 ( Int) Bool )
(declare-fun rel_b2197230_6fd7_4b68_a8f3_d153603fa5b6_Class8_Class0 ( Int Int) Bool )
(declare-fun weight196 () Int )
(declare-fun weight197 () Int )
(declare-fun weight194 () Int )
(declare-fun rel_93ec64d3_c997_4bd1_8e21_4e62c5480d76_Class3_Class24 ( Int Int) Bool )
(declare-fun weight195 () Int )
(declare-fun weight192 () Int )
(declare-fun weight193 () Int )
(declare-fun weight190 () Int )
(declare-fun weight191 () Int )
(declare-fun weight198 () Int )
(declare-fun weight199 () Int )
(declare-fun aux19 () Int )
(declare-fun class51_Class51IntAttr1 ( Int) Int )
(declare-fun aux16 () Int )
(declare-fun aux15 () Int )
(declare-fun aux18 () Int )
(declare-fun aux17 () Int )
(declare-fun aux12 () Int )
(declare-fun obj_63982161_f773_4155_88a1_c5edf64ac2d6 ( Int) Int )
(declare-fun class54_Class54IntAttr1 ( Int) Int )
(declare-fun aux11 () Int )
(declare-fun aux14 () Int )
(declare-fun aux13 () Int )
(declare-fun aux10 () Int )
(declare-fun class52_Class52IntAttr1 ( Int) Int )
(declare-fun oclSelect ( Int Bool) Int )
(declare-fun class1_Class1IntAttr4 ( Int) Int )
(declare-fun class1_Class1IntAttr3 ( Int) Int )
(declare-fun type_3d2d6bde_2b0d_4919_ab0d_2850b4a6a2ce_Class46 ( Int) Bool )
(declare-fun class39_Class39IntAttr3 ( Int) Int )
(declare-fun class55_Class55BoolAttr0 ( Int) Bool )
(declare-fun type_e18e8621_73ee_4763_9bc6_999e1519aae2_Class30 ( Int) Bool )
(declare-fun class39_Class39IntAttr4 ( Int) Int )
(declare-fun class50_Class50BoolAttr0 ( Int) Bool )
(declare-fun class21_Class21IntAttr2 ( Int) Int )
(declare-fun class21_Class21IntAttr3 ( Int) Int )
(declare-fun weight57 () Int )
(declare-fun weight174 () Int )
(declare-fun weight58 () Int )
(declare-fun weight175 () Int )
(declare-fun weight55 () Int )
(declare-fun weight172 () Int )
(declare-fun weight56 () Int )
(declare-fun weight173 () Int )
(declare-fun weight170 () Int )
(declare-fun class39_Class39IntAttr2 ( Int) Int )
(declare-fun weight171 () Int )
(declare-fun weight59 () Int )
(declare-fun weight50 () Int )
(declare-fun weight53 () Int )
(declare-fun weight178 () Int )
(declare-fun weight54 () Int )
(declare-fun weight179 () Int )
(declare-fun class20_Class20IntAttr3 ( Int) Int )
(declare-fun weight51 () Int )
(declare-fun weight176 () Int )
(declare-fun weight52 () Int )
(declare-fun weight177 () Int )
(declare-fun class20_Class20IntAttr2 ( Int) Int )
(declare-fun k1b7a0aa8_ac81_466b_a388_42254a578f08 () Int )
(declare-fun class15_Class15BoolAttr1 ( Int) Bool )
(declare-fun class15_Class15BoolAttr0 ( Int) Bool )
(declare-fun class23_Class23IntAttr2 ( Int) Int )
(declare-fun class23_Class23IntAttr3 ( Int) Int )
(declare-fun class15_Class15BoolAttr2 ( Int) Bool )
(declare-fun weight68 () Int )
(declare-fun weight185 () Int )
(declare-fun weight69 () Int )
(declare-fun weight186 () Int )
(declare-fun weight66 () Int )
(declare-fun weight183 () Int )
(declare-fun weight67 () Int )
(declare-fun weight184 () Int )
(declare-fun weight181 () Int )
(declare-fun weight182 () Int )
(declare-fun weight180 () Int )
(declare-fun weight60 () Int )
(declare-fun class22_Class22IntAttr2 ( Int) Int )
(declare-fun weight61 () Int )
(declare-fun class38_Class38BoolAttr1 ( Int) Bool )
(declare-fun class38_Class38BoolAttr0 ( Int) Bool )
(declare-fun weight64 () Int )
(declare-fun weight189 () Int )
(declare-fun weight65 () Int )
(declare-fun class22_Class22IntAttr3 ( Int) Int )
(declare-fun weight62 () Int )
(declare-fun weight187 () Int )
(declare-fun weight63 () Int )
(declare-fun weight188 () Int )
(declare-fun class9_Class9IntAttr4 ( Int) Int )
(declare-fun class9_Class9IntAttr3 ( Int) Int )
(declare-fun class36_Class36IntAttr0 ( Int) Int )
(declare-fun class25_Class25IntAttr2 ( Int) Int )
(declare-fun type_c654f49b_5c28_4662_b070_99ead3d43d09_Class10 ( Int) Bool )
(declare-fun class24_Class24IntAttr2 ( Int) Int )
(declare-fun weight79 () Int )
(declare-fun weight152 () Int )
(declare-fun weight153 () Int )
(declare-fun weight77 () Int )
(declare-fun weight150 () Int )
(declare-fun weight78 () Int )
(declare-fun weight151 () Int )
(declare-fun class18_Class18BoolAttr1 ( Int) Bool )
(declare-fun class18_Class18BoolAttr0 ( Int) Bool )
(declare-fun weight71 () Int )
(declare-fun weight72 () Int )
(declare-fun weight158 () Int )
(declare-fun weight70 () Int )
(declare-fun weight159 () Int )
(declare-fun weight75 () Int )
(declare-fun weight156 () Int )
(declare-fun weight76 () Int )
(declare-fun weight157 () Int )
(declare-fun weight73 () Int )
(declare-fun weight154 () Int )
(declare-fun class53_Class53BoolAttr0 ( Int) Bool )
(declare-fun weight74 () Int )
(declare-fun weight155 () Int )
(declare-fun class6_Class6IntAttr3 ( Int) Int )
(declare-fun class6_Class6IntAttr4 ( Int) Int )
(declare-fun class38_Class38IntAttr4 ( Int) Int )
(declare-fun class38_Class38IntAttr3 ( Int) Int )
(declare-fun class38_Class38IntAttr2 ( Int) Int )
(declare-fun type_a0221370_3e06_45e6_ad47_f286eb7ca6a4_Class52 ( Int) Bool )
(declare-fun class27_Class27IntAttr2 ( Int) Int )
(declare-fun class37_Class37IntAttr4 ( Int) Int )
(declare-fun weight163 () Int )
(declare-fun class37_Class37IntAttr3 ( Int) Int )
(declare-fun weight164 () Int )
(declare-fun weight88 () Int )
(declare-fun weight161 () Int )
(declare-fun weight89 () Int )
(declare-fun weight162 () Int )
(declare-fun weight160 () Int )
(declare-fun class37_Class37IntAttr2 ( Int) Int )
(declare-fun class26_Class26IntAttr2 ( Int) Int )
(declare-fun weight82 () Int )
(declare-fun type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 ( Int) Bool )
(declare-fun k789a0207_80f1_4517_b605_57481451a185 () Int )
(declare-fun weight83 () Int )
(declare-fun weight80 () Int )
(declare-fun weight169 () Int )
(declare-fun weight81 () Int )
(declare-fun weight86 () Int )
(declare-fun weight167 () Int )
(declare-fun weight87 () Int )
(declare-fun weight168 () Int )
(declare-fun weight84 () Int )
(declare-fun weight165 () Int )
(declare-fun weight85 () Int )
(declare-fun weight166 () Int )
(declare-fun class26_Class26BoolAttr0 ( Int) Bool )
(declare-fun class26_Class26BoolAttr1 ( Int) Bool )
(declare-fun weight129 () Int )
(declare-fun kdd4169d9_dd51_46c7_99fd_3f98c4ab954e () Int )
(declare-fun type_b737a457_cafe_488f_8a24_293a483068df_Class22 ( Int) Bool )
(declare-fun weight13 () Int )
(declare-fun weight130 () Int )
(declare-fun class16_Class16BoolAttr2 ( Int) Bool )
(declare-fun weight14 () Int )
(declare-fun weight131 () Int )
(declare-fun weight11 () Int )
(declare-fun weight12 () Int )
(declare-fun weight17 () Int )
(declare-fun weight18 () Int )
(declare-fun class16_Class16BoolAttr1 ( Int) Bool )
(declare-fun class4_Class4BoolAttr2 ( Int) Bool )
(declare-fun weight15 () Int )
(declare-fun class16_Class16BoolAttr0 ( Int) Bool )
(declare-fun weight16 () Int )
(declare-fun class4_Class4BoolAttr0 ( Int) Bool )
(declare-fun weight138 () Int )
(declare-fun type_d8580d4f_44b3_4b86_8195_f9cbee9d3f86_Class13 ( Int) Bool )
(declare-fun class4_Class4BoolAttr1 ( Int) Bool )
(declare-fun weight139 () Int )
(declare-fun weight136 () Int )
(declare-fun type_f7f499ca_b521_45a2_8ac6_1ce59af748fa_Class6 ( Int) Bool )
(declare-fun weight137 () Int )
(declare-fun weight134 () Int )
(declare-fun weight10 () Int )
(declare-fun weight135 () Int )
(declare-fun weight132 () Int )
(declare-fun weight133 () Int )
(declare-fun type_06d25d7d_dd51_47e7_b0e5_9debb6fb037a_Class41 ( Int) Bool )
(declare-fun class32_Class32IntAttr0 ( Int) Int )
(declare-fun weight19 () Int )
(declare-fun type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( Int) Bool )
(declare-fun class51_Class51BoolAttr0 ( Int) Bool )
(declare-fun Enum0 ( Int) Int )
(declare-fun class29_Class29IntAttr2 ( Int) Int )
(declare-fun Enum1 ( Int) Int )
(declare-fun weight24 () Int )
(declare-fun weight141 () Int )
(declare-fun Enum2 ( Int) Int )
(declare-fun class34_Class34IntAttr0 ( Int) Int )
(declare-fun weight25 () Int )
(declare-fun weight142 () Int )
(declare-fun weight22 () Int )
(declare-fun weight23 () Int )
(declare-fun weight140 () Int )
(declare-fun weight28 () Int )
(declare-fun weight29 () Int )
(declare-fun class5_Class5BoolAttr1 ( Int) Bool )
(declare-fun weight26 () Int )
(declare-fun class5_Class5BoolAttr0 ( Int) Bool )
(declare-fun weight27 () Int )
(declare-fun weight149 () Int )
(declare-fun class5_Class5BoolAttr2 ( Int) Bool )
(declare-fun type_09b1475a_2f34_4090_a83a_fa39e7fe2455_Class32 ( Int) Bool )
(declare-fun weight147 () Int )
(declare-fun weight148 () Int )
(declare-fun weight20 () Int )
(declare-fun weight145 () Int )
(declare-fun weight21 () Int )
(declare-fun weight146 () Int )
(declare-fun weight143 () Int )
(declare-fun weight144 () Int )
(declare-fun class10_Class10BoolAttr2 ( Int) Bool )
(declare-fun type_8c03a4ad_4dc1_452e_88a3_282533302669_Class24 ( Int) Bool )
(declare-fun class30_Class30IntAttr0 ( Int) Int )
(declare-fun type_f470501d_f523_47bc_9ceb_876844a70065_Class2 ( Int) Bool )
(declare-fun weight109 () Int )
(declare-fun weight107 () Int )
(declare-fun weight108 () Int )
(declare-fun class10_Class10BoolAttr1 ( Int) Bool )
(declare-fun class42_Class42IntAttr2 ( Int) Int )
(declare-fun class10_Class10BoolAttr0 ( Int) Bool )
(declare-fun class20_Class20BoolAttr0 ( Int) Bool )
(declare-fun weight35 () Int )
(declare-fun class20_Class20BoolAttr1 ( Int) Bool )
(declare-fun weight36 () Int )
(declare-fun weight33 () Int )
(declare-fun weight34 () Int )
(declare-fun weight39 () Int )
(declare-fun container_ ( Int) Int )
(declare-fun weight37 () Int )
(declare-fun weight38 () Int )
(declare-fun weight116 () Int )
(declare-fun type_3656814c_ce5b_4edc_8252_b0aac894cc02_Class45 ( Int) Bool )
(declare-fun weight117 () Int )
(declare-fun weight114 () Int )
(declare-fun weight115 () Int )
(declare-fun weight31 () Int )
(declare-fun weight112 () Int )
(declare-fun weight32 () Int )
(declare-fun weight113 () Int )
(declare-fun weight110 () Int )
(declare-fun weight30 () Int )
(declare-fun weight111 () Int )
(declare-fun class11_Class11BoolAttr0 ( Int) Bool )
(declare-fun class11_Class11BoolAttr1 ( Int) Bool )
(declare-fun k235f83f4a_2e88_4981_8740_d88434cef50a () Int )
(declare-fun class11_Class11BoolAttr2 ( Int) Bool )
(declare-fun weight118 () Int )
(declare-fun weight119 () Int )
(declare-fun class40_Class40IntAttr3 ( Int) Int )
(declare-fun class40_Class40IntAttr4 ( Int) Int )
(declare-fun class40_Class40IntAttr2 ( Int) Int )
(declare-fun class42_Class42IntAttr4 ( Int) Int )
(declare-fun weight46 () Int )
(declare-fun class42_Class42IntAttr3 ( Int) Int )
(declare-fun weight47 () Int )
(declare-fun weight120 () Int )
(declare-fun weight44 () Int )
(declare-fun weight45 () Int )
(declare-fun class21_Class21BoolAttr1 ( Int) Bool )
(declare-fun class21_Class21BoolAttr0 ( Int) Bool )
(declare-fun k989fead3_d0c8_4285_b7e6_06d07d87c0b6 () Int )
(declare-fun weight48 () Int )
(declare-fun weight49 () Int )
(declare-fun weight127 () Int )
(declare-fun weight128 () Int )
(declare-fun weight125 () Int )
(declare-fun weight126 () Int )
(declare-fun kd3918489_6f66_4287_8203_eaecfc1f143a () Int )
(declare-fun weight42 () Int )
(declare-fun weight123 () Int )
(declare-fun weight43 () Int )
(declare-fun weight124 () Int )
(declare-fun weight40 () Int )
(declare-fun weight121 () Int )
(declare-fun weight41 () Int )
(declare-fun weight122 () Int )
(declare-fun class1_Class1BoolAttr0 ( Int) Bool )
(declare-fun class1_Class1BoolAttr1 ( Int) Bool )
(declare-fun class2_Class2IntAttr4 ( Int) Int )
(declare-fun weight208 () Int )
(declare-fun class2_Class2IntAttr3 ( Int) Int )
(declare-fun weight209 () Int )
(declare-fun type_99a97488_f640_45ac_8054_359f3ed84325_Class19 ( Int) Bool )
(declare-fun weight206 () Int )
(declare-fun weight207 () Int )
(declare-fun class50_Class50IntAttr1 ( Int) Int )
(declare-fun class22_Class22BoolAttr0 ( Int) Bool )
(declare-fun class22_Class22BoolAttr1 ( Int) Bool )
(declare-fun class1_Class1BoolAttr2 ( Int) Bool )
(declare-fun type_d5557194_f1a2_4e7a_9d7d_7ecf3d1e4a38_Class17 ( Int) Bool )
(declare-fun class7_Class7BoolAttr2 ( Int) Bool )
(declare-fun type_89f6e583_5bfd_4a26_b152_7b80a00197b2_Class53 ( Int) Bool )
(declare-fun weight215 () Int )
(declare-fun weight216 () Int )
(declare-fun weight213 () Int )
(declare-fun weight214 () Int )
(declare-fun weight211 () Int )
(declare-fun weight212 () Int )
(declare-fun class25_Class25BoolAttr0 ( Int) Bool )
(declare-fun class7_Class7BoolAttr0 ( Int) Bool )
(declare-fun class25_Class25BoolAttr1 ( Int) Bool )
(declare-fun class7_Class7BoolAttr1 ( Int) Bool )
(declare-fun weight210 () Int )
(declare-fun type_56e26645_2781_43c8_9657_65138723519d_Class48 ( Int) Bool )
(declare-fun class6_Class6BoolAttr1 ( Int) Bool )
(declare-fun class6_Class6BoolAttr0 ( Int) Bool )
(declare-fun weight219 () Int )
(declare-fun weight217 () Int )
(declare-fun k9ab4565e_7675_43ea_899c_3a8ca0b2c9b8 () Int )
(declare-fun weight218 () Int )
(declare-fun class5_Class5IntAttr3 ( Int) Int )
(declare-fun oclIncludes ( Int Int) Bool )
(declare-fun class5_Class5IntAttr4 ( Int) Int )
(declare-fun rel_b0b9d4ea_7e01_42ce_be47_5e6b4a83a80c_Class16_Class50 ( Int Int) Bool )
(declare-fun class6_Class6BoolAttr2 ( Int) Bool )
(declare-fun weight105 () Int )
(declare-fun weight226 () Int )
(declare-fun weight106 () Int )
(declare-fun weight227 () Int )
(declare-fun weight103 () Int )
(declare-fun weight224 () Int )
(declare-fun weight104 () Int )
(declare-fun weight225 () Int )
(declare-fun weight101 () Int )
(declare-fun weight222 () Int )
(declare-fun weight102 () Int )
(declare-fun weight223 () Int )
(declare-fun weight220 () Int )
(declare-fun type_bae101c4_dfc3_4da6_bf65_1e45b1c5a983_Class18 ( Int) Bool )
(declare-fun weight100 () Int )
(declare-fun weight221 () Int )
(declare-fun class24_Class24BoolAttr1 ( Int) Bool )
(declare-fun class24_Class24BoolAttr0 ( Int) Bool )
(declare-fun class28_Class28BoolAttr0 ( Int) Bool )
(declare-fun class28_Class28BoolAttr1 ( Int) Bool )
(declare-fun class0_Class0BoolAttr1 ( Int) Bool )
(declare-fun class0_Class0BoolAttr0 ( Int) Bool )
(declare-fun class0_Class0BoolAttr2 ( Int) Bool )
(declare-fun rel_ebe2d66f_59fc_4785_976e_391359f83c14_Class11_Class28 ( Int Int) Bool )
(declare-fun class3_Class3BoolAttr2 ( Int) Bool )
(declare-fun k7ba3f7ad_d8de_41b7_8394_7d4d820f9ac4 () Int )
(declare-fun class27_Class27BoolAttr1 ( Int) Bool )
(declare-fun class3_Class3BoolAttr1 ( Int) Bool )
(declare-fun ObjAt ( Int Int) Int )
(declare-fun class27_Class27BoolAttr0 ( Int) Bool )
(declare-fun class3_Class3BoolAttr0 ( Int) Bool )
(declare-fun class2_Class2BoolAttr1 ( Int) Bool )
(declare-fun class2_Class2BoolAttr0 ( Int) Bool )
(declare-fun type_83a48113_7855_4ed1_8d9b_d354aa3c8f71_Class40 ( Int) Bool )
(declare-fun weight204 () Int )
(declare-fun weight205 () Int )
(declare-fun weight202 () Int )
(declare-fun weight203 () Int )
(declare-fun weight200 () Int )
(declare-fun weight201 () Int )
(declare-fun class2_Class2BoolAttr2 ( Int) Bool )

;formula(s) generated
(assert (forall ((p Int)) (=> ( type_586f09b1_e4a9_4440_8972_322226f6f87a_Class0 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_2ea2084f_4b09_4467_a2f4_39aa485c2be4_Class1 p )  (and (>= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_c654f49b_5c28_4662_b070_99ead3d43d09_Class10 p )  (and (>= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_69dda496_d763_45ba_9fbc_667f0b149b10_Class11 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_199aee0d_b81f_40b9_aa2c_70c6c5f327fc_Class12 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_d8580d4f_44b3_4b86_8195_f9cbee9d3f86_Class13 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_2066b13c_6f06_4cf7_a582_75c5e7d18e4e_Class14 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_c0d5d719_335c_4577_b2c2_17584e1d28bb_Class16 p )  (and (>= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_d5557194_f1a2_4e7a_9d7d_7ecf3d1e4a38_Class17 p )  (and (>= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_bae101c4_dfc3_4da6_bf65_1e45b1c5a983_Class18 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_99a97488_f640_45ac_8054_359f3ed84325_Class19 p )  (and (>= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_f470501d_f523_47bc_9ceb_876844a70065_Class2 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_ca6bb482_b8f1_4dfa_9371_2528e1a78785_Class20 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 p )  (and (>= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 p )  (and (>= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_17e19828_4b82_4208_892f_70ef1e79ed6d_Class23 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_8c03a4ad_4dc1_452e_88a3_282533302669_Class24 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_d76be500_c00a_467c_b524_ecd896d509db_Class25 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_085c21cf_5c26_4ee2_b213_395bc6cef7f3_Class26 p )  (and (>= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 p )  (and (>= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_8d2fee4e_d9d4_46dd_b9cd_e57e07fc0f04_Class29 p )  (and (>= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_9bf6cfa1_28e0_41b2_b84c_e5e1a84a0db2_Class3 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_ef0869a7_c2f0_46f6_b446_e20eb09a21f2_Class4 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 p )  (and (>= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_3656814c_ce5b_4edc_8252_b0aac894cc02_Class45 p )  (and (>= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_3656814c_ce5b_4edc_8252_b0aac894cc02_Class45 p )  (and (>= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_3d2d6bde_2b0d_4919_ab0d_2850b4a6a2ce_Class46 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_3d2d6bde_2b0d_4919_ab0d_2850b4a6a2ce_Class46 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_f6d46d72_d840_4943_8c3f_a60cd53b61ce_Class47 p )  (and (>= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_f6d46d72_d840_4943_8c3f_a60cd53b61ce_Class47 p )  (and (>= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_56e26645_2781_43c8_9657_65138723519d_Class48 p )  (and (>= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_56e26645_2781_43c8_9657_65138723519d_Class48 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_a359a594_1de4_424e_be85_5e1318b33a72_Class49 p )  (and (>= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_a359a594_1de4_424e_be85_5e1318b33a72_Class49 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 p )  (and (>= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_a1dc748f_0bc8_4325_9533_bd2b456e6a82_Class50 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_cde548a2_ce14_48cb_b872_a3ab73a5de8e_Class51 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_a0221370_3e06_45e6_ad47_f286eb7ca6a4_Class52 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_89f6e583_5bfd_4a26_b152_7b80a00197b2_Class53 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_b487ca72_cce1_4e42_b5a0_ac6e39cd33be_Class54 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_f0331523_9461_4232_80d2_0746c6ef381b_Class55 p )  (and (>= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_d8506e19_c26d_4444_84d2_3314cabdd75f_Class56 p )  (and (>= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_f7f499ca_b521_45a2_8ac6_1ce59af748fa_Class6 p )  (and (>= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 p )  (and (>= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_c57c575d_b1d9_4470_85c0_2b014913ab1d_Class8 p )  (and (>= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 p )  (and (>= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  0) (<= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  3)))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_ec206883_1da3_46e9_b989_4110ae83cfbc_Class10_Class51 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and ( type_c654f49b_5c28_4662_b070_99ead3d43d09_Class10 x )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 x ) ) ( type_cde548a2_ce14_48cb_b872_a3ab73a5de8e_Class51 y ) )) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_ec206883_1da3_46e9_b989_4110ae83cfbc_Class10_Class51 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and ( type_c654f49b_5c28_4662_b070_99ead3d43d09_Class10 x )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 x ) ) ( type_cde548a2_ce14_48cb_b872_a3ab73a5de8e_Class51 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  k9ab4565e_7675_43ea_899c_3a8ca0b2c9b8)) (>= k9ab4565e_7675_43ea_899c_3a8ca0b2c9b8 0))) (and (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  k5b95ea72_0e8f_4617_ac61_18a047f6dc79)) (>= k5b95ea72_0e8f_4617_ac61_18a047f6dc79 0))))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_ec206883_1da3_46e9_b989_4110ae83cfbc_Class10_Class51 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and ( type_c654f49b_5c28_4662_b070_99ead3d43d09_Class10 x )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 x ) ) ( type_cde548a2_ce14_48cb_b872_a3ab73a5de8e_Class51 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  k9ab4565e_7675_43ea_899c_3a8ca0b2c9b8)) (>= k9ab4565e_7675_43ea_899c_3a8ca0b2c9b8 0))) (and (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  k5b95ea72_0e8f_4617_ac61_18a047f6dc79)) (>= k5b95ea72_0e8f_4617_ac61_18a047f6dc79 0))))))
(assert (and (=> (= aux0 0) (= weight0 8)) (=> (= aux0 1) (= weight0 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_ebe2d66f_59fc_4785_976e_391359f83c14_Class11_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_69dda496_d763_45ba_9fbc_667f0b149b10_Class11 x )  (and (and ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 y )  ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 y ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 y ) ))) (>= ( Cardinality ( container_ x )  )  1))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_ebe2d66f_59fc_4785_976e_391359f83c14_Class11_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_69dda496_d763_45ba_9fbc_667f0b149b10_Class11 x )  (and (and ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 y )  ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 y ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 y ) ))) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_ebe2d66f_59fc_4785_976e_391359f83c14_Class11_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_69dda496_d763_45ba_9fbc_667f0b149b10_Class11 x )  (and (and ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 y )  ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 y ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  3))) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  3))))) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_ebe2d66f_59fc_4785_976e_391359f83c14_Class11_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_69dda496_d763_45ba_9fbc_667f0b149b10_Class11 x )  (and (and ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 y )  ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 y ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  3))) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  3))))))
(assert (and (=> (= aux1 0) (= weight1 1)) (=> (= aux1 1) (= weight1 0))))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_a5cc768a_6401_4229_87de_673e66bbc168_Class13_Class7 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_d8580d4f_44b3_4b86_8195_f9cbee9d3f86_Class13 x )  ( type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  0)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_a5cc768a_6401_4229_87de_673e66bbc168_Class13_Class7 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_d8580d4f_44b3_4b86_8195_f9cbee9d3f86_Class13 x )  ( type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  0)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))))))
(assert (and (=> (= aux2 0) (= weight2 2)) (=> (= aux2 1) (= weight2 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_b0b9d4ea_7e01_42ce_be47_5e6b4a83a80c_Class16_Class50 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_c0d5d719_335c_4577_b2c2_17584e1d28bb_Class16 x )  ( type_a1dc748f_0bc8_4325_9533_bd2b456e6a82_Class50 y ) )) (>= ( Cardinality ( container_ x )  )  1))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_b0b9d4ea_7e01_42ce_be47_5e6b4a83a80c_Class16_Class50 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_c0d5d719_335c_4577_b2c2_17584e1d28bb_Class16 x )  ( type_a1dc748f_0bc8_4325_9533_bd2b456e6a82_Class50 y ) )) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux3 0) (<= aux3 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_b0b9d4ea_7e01_42ce_be47_5e6b4a83a80c_Class16_Class50 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_c0d5d719_335c_4577_b2c2_17584e1d28bb_Class16 x )  ( type_a1dc748f_0bc8_4325_9533_bd2b456e6a82_Class50 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))))) (and (= aux3 1) true)) (and (= aux3 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_b0b9d4ea_7e01_42ce_be47_5e6b4a83a80c_Class16_Class50 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_c0d5d719_335c_4577_b2c2_17584e1d28bb_Class16 x )  ( type_a1dc748f_0bc8_4325_9533_bd2b456e6a82_Class50 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))))))
(assert (and (=> (= aux3 0) (= weight3 3)) (=> (= aux3 1) (= weight3 0))))
(assert (and (>= aux4 0) (<= aux4 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_89cc00ef_e2dc_4399_8c97_83c22541dee4_Class17_Class17 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and (and (and (and (and ( type_d5557194_f1a2_4e7a_9d7d_7ecf3d1e4a38_Class17 x )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 x ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 x ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 x ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 x ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 x ) ) (and (and (and (and (and (and ( type_d5557194_f1a2_4e7a_9d7d_7ecf3d1e4a38_Class17 y )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 y ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 y ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 y ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 y ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 y ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  0)) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  4))) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  4))))) (and (= aux4 1) true)) (and (= aux4 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_89cc00ef_e2dc_4399_8c97_83c22541dee4_Class17_Class17 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and (and (and (and (and ( type_d5557194_f1a2_4e7a_9d7d_7ecf3d1e4a38_Class17 x )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 x ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 x ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 x ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 x ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 x ) ) (and (and (and (and (and (and ( type_d5557194_f1a2_4e7a_9d7d_7ecf3d1e4a38_Class17 y )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 y ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 y ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 y ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 y ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 y ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  0)) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  4))) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  4))))))
(assert (and (=> (= aux4 0) (= weight4 4)) (=> (= aux4 1) (= weight4 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_c92da7bd_c5f4_4726_8b0d_1602776191ae_Class18_Class35 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_bae101c4_dfc3_4da6_bf65_1e45b1c5a983_Class18 x )  (and (and (and (and ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 y )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 y ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 y ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 y ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 y ) ))) (>= ( Cardinality ( container_ x )  )  1))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_c92da7bd_c5f4_4726_8b0d_1602776191ae_Class18_Class35 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_bae101c4_dfc3_4da6_bf65_1e45b1c5a983_Class18 x )  (and (and (and (and ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 y )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 y ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 y ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 y ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 y ) ))) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux5 0) (<= aux5 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_c92da7bd_c5f4_4726_8b0d_1602776191ae_Class18_Class35 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_bae101c4_dfc3_4da6_bf65_1e45b1c5a983_Class18 x )  (and (and (and (and ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 y )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 y ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 y ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 y ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  3)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  3))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  3))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  3))))) (and (= aux5 1) true)) (and (= aux5 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_c92da7bd_c5f4_4726_8b0d_1602776191ae_Class18_Class35 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_bae101c4_dfc3_4da6_bf65_1e45b1c5a983_Class18 x )  (and (and (and (and ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 y )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 y ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 y ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 y ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  3)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  3))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  3))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  3))))))
(assert (and (=> (= aux5 0) (= weight5 1)) (=> (= aux5 1) (= weight5 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_8d2d26b5_5055_469c_a2ef_0c2f4c1bfeab_Class19_Class55 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and (and (and (and (and ( type_99a97488_f640_45ac_8054_359f3ed84325_Class19 x )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 x ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 x ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 x ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 x ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 x ) ) ( type_f0331523_9461_4232_80d2_0746c6ef381b_Class55 y ) )) (>= ( Cardinality ( container_ x )  )  1))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_8d2d26b5_5055_469c_a2ef_0c2f4c1bfeab_Class19_Class55 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and (and (and (and (and ( type_99a97488_f640_45ac_8054_359f3ed84325_Class19 x )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 x ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 x ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 x ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 x ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 x ) ) ( type_f0331523_9461_4232_80d2_0746c6ef381b_Class55 y ) )) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux6 0) (<= aux6 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_8d2d26b5_5055_469c_a2ef_0c2f4c1bfeab_Class19_Class55 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and (and (and (and (and ( type_99a97488_f640_45ac_8054_359f3ed84325_Class19 x )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 x ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 x ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 x ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 x ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 x ) ) ( type_f0331523_9461_4232_80d2_0746c6ef381b_Class55 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))))) (and (= aux6 1) true)) (and (= aux6 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_8d2d26b5_5055_469c_a2ef_0c2f4c1bfeab_Class19_Class55 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and (and (and (and (and ( type_99a97488_f640_45ac_8054_359f3ed84325_Class19 x )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 x ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 x ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 x ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 x ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 x ) ) ( type_f0331523_9461_4232_80d2_0746c6ef381b_Class55 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))))))
(assert (and (=> (= aux6 0) (= weight6 5)) (=> (= aux6 1) (= weight6 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_b899742e_b558_4fdf_99f8_df20ace3ccec_Class1_Class16 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_2ea2084f_4b09_4467_a2f4_39aa485c2be4_Class1 x )  ( type_c0d5d719_335c_4577_b2c2_17584e1d28bb_Class16 y ) )) (>= ( Cardinality ( container_ x )  )  1))))
(assert (and (>= aux7 0) (<= aux7 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_b899742e_b558_4fdf_99f8_df20ace3ccec_Class1_Class16 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_2ea2084f_4b09_4467_a2f4_39aa485c2be4_Class1 x )  ( type_c0d5d719_335c_4577_b2c2_17584e1d28bb_Class16 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kd48b463b_db22_41dc_bb75_197e31ae5664)) (>= kd48b463b_db22_41dc_bb75_197e31ae5664 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  4))) (and (= (* ( Cardinality ( container_ y )  )  4) (* ( Cardinality ( container_ x )  )  k239b20c5_cf60_4499_8575_6aa8d49e6582)) (>= k239b20c5_cf60_4499_8575_6aa8d49e6582 0))))) (and (= aux7 1) true)) (and (= aux7 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_b899742e_b558_4fdf_99f8_df20ace3ccec_Class1_Class16 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_2ea2084f_4b09_4467_a2f4_39aa485c2be4_Class1 x )  ( type_c0d5d719_335c_4577_b2c2_17584e1d28bb_Class16 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kd48b463b_db22_41dc_bb75_197e31ae5664)) (>= kd48b463b_db22_41dc_bb75_197e31ae5664 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  4))) (and (= (* ( Cardinality ( container_ y )  )  4) (* ( Cardinality ( container_ x )  )  k239b20c5_cf60_4499_8575_6aa8d49e6582)) (>= k239b20c5_cf60_4499_8575_6aa8d49e6582 0))))))
(assert (and (=> (= aux7 0) (= weight7 12)) (=> (= aux7 1) (= weight7 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_93ec64d3_c997_4bd1_8e21_4e62c5480d76_Class3_Class24 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_9bf6cfa1_28e0_41b2_b84c_e5e1a84a0db2_Class3 x )  ( type_8c03a4ad_4dc1_452e_88a3_282533302669_Class24 y ) )) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux8 0) (<= aux8 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_93ec64d3_c997_4bd1_8e21_4e62c5480d76_Class3_Class24 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_9bf6cfa1_28e0_41b2_b84c_e5e1a84a0db2_Class3 x )  ( type_8c03a4ad_4dc1_452e_88a3_282533302669_Class24 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))) (and (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  k5a8457f2_fd71_4fa6_a284_b5aa550dbacb)) (>= k5a8457f2_fd71_4fa6_a284_b5aa550dbacb 0))) (and (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  k989fead3_d0c8_4285_b7e6_06d07d87c0b6)) (>= k989fead3_d0c8_4285_b7e6_06d07d87c0b6 0))))) (and (= aux8 1) true)) (and (= aux8 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_93ec64d3_c997_4bd1_8e21_4e62c5480d76_Class3_Class24 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_9bf6cfa1_28e0_41b2_b84c_e5e1a84a0db2_Class3 x )  ( type_8c03a4ad_4dc1_452e_88a3_282533302669_Class24 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))) (and (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  k5a8457f2_fd71_4fa6_a284_b5aa550dbacb)) (>= k5a8457f2_fd71_4fa6_a284_b5aa550dbacb 0))) (and (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  k989fead3_d0c8_4285_b7e6_06d07d87c0b6)) (>= k989fead3_d0c8_4285_b7e6_06d07d87c0b6 0))))))
(assert (and (=> (= aux8 0) (= weight8 1)) (=> (= aux8 1) (= weight8 0))))
(assert (and (>= aux9 0) (<= aux9 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_43460a88_f424_49a5_9cf5_d6cc506efa02_Class4_Class26 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and (and (and (and (and ( type_ef0869a7_c2f0_46f6_b446_e20eb09a21f2_Class4 x )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 x ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 x ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 x ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 x ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 x ) ) ( type_085c21cf_5c26_4ee2_b213_395bc6cef7f3_Class26 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  0)) (and (= (* ( Cardinality ( container_ y )  )  0) (* ( Cardinality ( container_ x )  )  kd3918489_6f66_4287_8203_eaecfc1f143a)) (>= kd3918489_6f66_4287_8203_eaecfc1f143a 0))) (and (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  k789a0207_80f1_4517_b605_57481451a185)) (>= k789a0207_80f1_4517_b605_57481451a185 0))) (and (= (* ( Cardinality ( container_ x )  )  k1a7d2c7c9_260d_4445_9662_f084d4400d39) (* ( Cardinality ( container_ y )  )  k235f83f4a_2e88_4981_8740_d88434cef50a)) (and (>= k1a7d2c7c9_260d_4445_9662_f084d4400d39 0) (>= k235f83f4a_2e88_4981_8740_d88434cef50a 0)))))) (and (= aux9 1) true)) (and (= aux9 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_43460a88_f424_49a5_9cf5_d6cc506efa02_Class4_Class26 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and (and (and (and (and ( type_ef0869a7_c2f0_46f6_b446_e20eb09a21f2_Class4 x )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 x ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 x ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 x ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 x ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 x ) ) ( type_085c21cf_5c26_4ee2_b213_395bc6cef7f3_Class26 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  0)) (and (= (* ( Cardinality ( container_ y )  )  0) (* ( Cardinality ( container_ x )  )  kd3918489_6f66_4287_8203_eaecfc1f143a)) (>= kd3918489_6f66_4287_8203_eaecfc1f143a 0))) (and (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  k789a0207_80f1_4517_b605_57481451a185)) (>= k789a0207_80f1_4517_b605_57481451a185 0))) (and (= (* ( Cardinality ( container_ x )  )  k1a7d2c7c9_260d_4445_9662_f084d4400d39) (* ( Cardinality ( container_ y )  )  k235f83f4a_2e88_4981_8740_d88434cef50a)) (and (>= k1a7d2c7c9_260d_4445_9662_f084d4400d39 0) (>= k235f83f4a_2e88_4981_8740_d88434cef50a 0)))))))
(assert (and (=> (= aux9 0) (= weight9 2)) (=> (= aux9 1) (= weight9 0))))
(assert (and (>= aux10 0) (<= aux10 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_e162d45d_abfb_45ce_8ca2_330bff61c0a6_Class5_Class39 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and ( type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 x )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_79243f18_e1eb_44bf_a068_99e2f0f79055_Class39 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  0)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  4))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  4))))) (and (= aux10 1) true)) (and (= aux10 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_e162d45d_abfb_45ce_8ca2_330bff61c0a6_Class5_Class39 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and ( type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 x )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_79243f18_e1eb_44bf_a068_99e2f0f79055_Class39 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  0)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  4))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  4))))))
(assert (and (=> (= aux10 0) (= weight10 1)) (=> (= aux10 1) (= weight10 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_b0356f59_f5f1_4666_a7db_f713974b7478_Class6_Class18 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and (and (and ( type_f7f499ca_b521_45a2_8ac6_1ce59af748fa_Class6 x )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 x ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 x ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 x ) ) ( type_bae101c4_dfc3_4da6_bf65_1e45b1c5a983_Class18 y ) )) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux11 0) (<= aux11 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_b0356f59_f5f1_4666_a7db_f713974b7478_Class6_Class18 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and (and (and ( type_f7f499ca_b521_45a2_8ac6_1ce59af748fa_Class6 x )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 x ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 x ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 x ) ) ( type_bae101c4_dfc3_4da6_bf65_1e45b1c5a983_Class18 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))) (and (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  ke1cb5479_3465_4e10_a1c0_9f9bba63b434)) (>= ke1cb5479_3465_4e10_a1c0_9f9bba63b434 0))) (and (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  k1b7a0aa8_ac81_466b_a388_42254a578f08)) (>= k1b7a0aa8_ac81_466b_a388_42254a578f08 0))))) (and (= aux11 1) true)) (and (= aux11 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_b0356f59_f5f1_4666_a7db_f713974b7478_Class6_Class18 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and (and (and ( type_f7f499ca_b521_45a2_8ac6_1ce59af748fa_Class6 x )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 x ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 x ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 x ) ) ( type_bae101c4_dfc3_4da6_bf65_1e45b1c5a983_Class18 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))) (and (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  ke1cb5479_3465_4e10_a1c0_9f9bba63b434)) (>= ke1cb5479_3465_4e10_a1c0_9f9bba63b434 0))) (and (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  k1b7a0aa8_ac81_466b_a388_42254a578f08)) (>= k1b7a0aa8_ac81_466b_a388_42254a578f08 0))))))
(assert (and (=> (= aux11 0) (= weight11 4)) (=> (= aux11 1) (= weight11 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_566e53d7_b020_464d_8e81_168dfd038d72_Class7_Class56 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 x )  ( type_d8506e19_c26d_4444_84d2_3314cabdd75f_Class56 y ) )) (>= ( Cardinality ( container_ x )  )  1))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_566e53d7_b020_464d_8e81_168dfd038d72_Class7_Class56 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 x )  ( type_d8506e19_c26d_4444_84d2_3314cabdd75f_Class56 y ) )) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux12 0) (<= aux12 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_566e53d7_b020_464d_8e81_168dfd038d72_Class7_Class56 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 x )  ( type_d8506e19_c26d_4444_84d2_3314cabdd75f_Class56 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  2))))) (and (= aux12 1) true)) (and (= aux12 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_566e53d7_b020_464d_8e81_168dfd038d72_Class7_Class56 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 x )  ( type_d8506e19_c26d_4444_84d2_3314cabdd75f_Class56 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  2))))))
(assert (and (=> (= aux12 0) (= weight12 3)) (=> (= aux12 1) (= weight12 0))))
(assert (and (>= aux13 0) (<= aux13 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_b2197230_6fd7_4b68_a8f3_d153603fa5b6_Class8_Class0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_c57c575d_b1d9_4470_85c0_2b014913ab1d_Class8 x )  (and (and (and (and (and (and ( type_586f09b1_e4a9_4440_8972_322226f6f87a_Class0 y )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 y ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 y ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 y ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 y ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 y ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))) (and (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  k7ba3f7ad_d8de_41b7_8394_7d4d820f9ac4)) (>= k7ba3f7ad_d8de_41b7_8394_7d4d820f9ac4 0))) (and (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  kdd4169d9_dd51_46c7_99fd_3f98c4ab954e)) (>= kdd4169d9_dd51_46c7_99fd_3f98c4ab954e 0))))) (and (= aux13 1) true)) (and (= aux13 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_b2197230_6fd7_4b68_a8f3_d153603fa5b6_Class8_Class0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and ( type_c57c575d_b1d9_4470_85c0_2b014913ab1d_Class8 x )  (and (and (and (and (and (and ( type_586f09b1_e4a9_4440_8972_322226f6f87a_Class0 y )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 y ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 y ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 y ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 y ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 y ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))) (and (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  k7ba3f7ad_d8de_41b7_8394_7d4d820f9ac4)) (>= k7ba3f7ad_d8de_41b7_8394_7d4d820f9ac4 0))) (and (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  kdd4169d9_dd51_46c7_99fd_3f98c4ab954e)) (>= kdd4169d9_dd51_46c7_99fd_3f98c4ab954e 0))))))
(assert (and (=> (= aux13 0) (= weight13 6)) (=> (= aux13 1) (= weight13 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_6319e4b0_4e77_41b9_b8ae_f178bffc6db0_Class9_Class9 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 x )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 x ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 x ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 x ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 x ) ) (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 y )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 y ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 y ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 y ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 y ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 y ) ))) (>= ( Cardinality ( container_ x )  )  1))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_6319e4b0_4e77_41b9_b8ae_f178bffc6db0_Class9_Class9 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 x )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 x ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 x ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 x ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 x ) ) (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 y )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 y ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 y ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 y ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 y ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 y ) ))) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux14 0) (<= aux14 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_6319e4b0_4e77_41b9_b8ae_f178bffc6db0_Class9_Class9 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 x )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 x ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 x ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 x ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 x ) ) (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 y )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 y ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 y ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 y ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 y ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))))) (and (= aux14 1) true)) (and (= aux14 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_6319e4b0_4e77_41b9_b8ae_f178bffc6db0_Class9_Class9 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 x )   ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 y )  )  (and (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 x )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 x ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 x ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 x ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 x ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 x ) ) (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 y )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 y ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 y ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 y ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 y ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))))))
(assert (and (=> (= aux14 0) (= weight14 7)) (=> (= aux14 1) (= weight14 0))))
(assert (and (>= aux15 0) (<= aux15 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_586f09b1_e4a9_4440_8972_322226f6f87a_Class0 v )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 v ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) (> ( class0_Class0IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  6))) (and (= aux15 1) true)) (and (= aux15 0) false)))
(assert (and (=> (= aux15 0) (= weight15 4)) (=> (= aux15 1) (= weight15 0))))
(assert (and (>= aux16 0) (<= aux16 1)))
(assert (or (or (forall ((c0_1 Int)(c0_2 Int)) (=> (and (and (and (and (and (and (and ( type_586f09b1_e4a9_4440_8972_322226f6f87a_Class0 c0_1 )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 c0_1 ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c0_1 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c0_1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c0_1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c0_1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c0_1 ) ) (and (and (and (and (and (and ( type_586f09b1_e4a9_4440_8972_322226f6f87a_Class0 c0_2 )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 c0_2 ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c0_2 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c0_2 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c0_2 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c0_2 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c0_2 ) )) (< ( class0_Class0IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c0_1 )  )  ( class0_Class0IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c0_2 )  ) ))) (and (= aux16 1) true)) (and (= aux16 0) false)))
(assert (and (=> (= aux16 0) (= weight16 8)) (=> (= aux16 1) (= weight16 0))))
(assert (and (>= aux17 0) (<= aux17 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_586f09b1_e4a9_4440_8972_322226f6f87a_Class0 v )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 v ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) ( class0_Class0BoolAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) )) (and (= aux17 1) true)) (and (= aux17 0) false)))
(assert (and (=> (= aux17 0) (= weight17 2)) (=> (= aux17 1) (= weight17 0))))
(assert (and (>= aux18 0) (<= aux18 1)))
(assert (or (or (forall ((c0_1 Int)(c0_2 Int)) (=> (and (and (and ( type_c654f49b_5c28_4662_b070_99ead3d43d09_Class10 c0_1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c0_1 ) ) ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 c0_1 ) ) (and (and ( type_c654f49b_5c28_4662_b070_99ead3d43d09_Class10 c0_2 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c0_2 ) ) ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 c0_2 ) )) (<= ( class10_Class10IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c0_1 )  )  ( class10_Class10IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c0_2 )  ) ))) (and (= aux18 1) true)) (and (= aux18 0) false)))
(assert (and (=> (= aux18 0) (= weight18 1)) (=> (= aux18 1) (= weight18 0))))
(assert (and (>= aux19 0) (<= aux19 1)))
(assert (or (or (forall ((c0_1 Int)(c0_2 Int)) (=> (and (and (and ( type_c654f49b_5c28_4662_b070_99ead3d43d09_Class10 c0_1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c0_1 ) ) ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 c0_1 ) ) (and (and ( type_c654f49b_5c28_4662_b070_99ead3d43d09_Class10 c0_2 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c0_2 ) ) ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 c0_2 ) )) (not (= ( class10_Class10IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c0_1 )  )  ( class10_Class10IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c0_2 )  ) ) ))) (and (= aux19 1) true)) (and (= aux19 0) false)))
(assert (and (=> (= aux19 0) (= weight19 1)) (=> (= aux19 1) (= weight19 0))))
(assert (and (>= aux20 0) (<= aux20 1)))
(assert (or (or (forall ((v Int)) (=> (and (and ( type_c654f49b_5c28_4662_b070_99ead3d43d09_Class10 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 v ) ) (or (<= ( class10_Class10IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  10) (or (forall ((v Int)) (=> (and (and ( type_c654f49b_5c28_4662_b070_99ead3d43d09_Class10 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 v ) ) (= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  8))) (forall ((v Int)) (=> (and (and ( type_c654f49b_5c28_4662_b070_99ead3d43d09_Class10 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 v ) ) (<= ( class10_Class10IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  19))))))) (and (= aux20 1) true)) (and (= aux20 0) false)))
(assert (and (=> (= aux20 0) (= weight20 1)) (=> (= aux20 1) (= weight20 0))))
(assert (and (>= aux21 0) (<= aux21 1)))
(assert (or (or (exists ((c1 Int)) (and (and (and ( type_c654f49b_5c28_4662_b070_99ead3d43d09_Class10 c1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 c1 ) ) (not (= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  8) ))) (and (= aux21 1) true)) (and (= aux21 0) false)))
(assert (and (=> (= aux21 0) (= weight21 1)) (=> (= aux21 1) (= weight21 0))))
(assert (and (>= aux22 0) (<= aux22 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and (and (and ( type_c654f49b_5c28_4662_b070_99ead3d43d09_Class10 c1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 c1 ) ) (and (and ( type_c654f49b_5c28_4662_b070_99ead3d43d09_Class10 c2 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c2 ) ) ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 c2 ) )) (forall ((v Int)) (=> (and (and ( type_c654f49b_5c28_4662_b070_99ead3d43d09_Class10 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 v ) ) (> ( class10_Class10IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  ( class10_Class10IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  ) ))))) (and (= aux22 1) true)) (and (= aux22 0) false)))
(assert (and (=> (= aux22 0) (= weight22 1)) (=> (= aux22 1) (= weight22 0))))
(assert (and (>= aux23 0) (<= aux23 1)))
(assert (or (or (forall ((v Int)) (=> ( type_69dda496_d763_45ba_9fbc_667f0b149b10_Class11 v )  (<= ( class11_Class11IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  13))) (and (= aux23 1) true)) (and (= aux23 0) false)))
(assert (and (=> (= aux23 0) (= weight23 2)) (=> (= aux23 1) (= weight23 0))))
(assert (and (>= aux24 0) (<= aux24 1)))
(assert (or (or (or (forall ((v Int)) (=> ( type_69dda496_d763_45ba_9fbc_667f0b149b10_Class11 v )  ( class11_Class11BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) )) (forall ((v Int)) (=> ( type_69dda496_d763_45ba_9fbc_667f0b149b10_Class11 v )  ( class11_Class11BoolAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) ))) (and (= aux24 1) true)) (and (= aux24 0) false)))
(assert (and (=> (= aux24 0) (= weight24 2)) (=> (= aux24 1) (= weight24 0))))
(assert (and (>= aux25 0) (<= aux25 1)))
(assert (or (or (forall ((c1 Int)(c2 Int)) (=> (and ( type_69dda496_d763_45ba_9fbc_667f0b149b10_Class11 c1 )  ( type_69dda496_d763_45ba_9fbc_667f0b149b10_Class11 c2 ) ) (forall ((v Int)) (=> ( type_69dda496_d763_45ba_9fbc_667f0b149b10_Class11 v )  (< ( class11_Class11IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  ( class11_Class11IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  ) ))))) (and (= aux25 1) true)) (and (= aux25 0) false)))
(assert (and (=> (= aux25 0) (= weight25 2)) (=> (= aux25 1) (= weight25 0))))
(assert (and (>= aux26 0) (<= aux26 1)))
(assert (or (or (forall ((v Int)) (=> (and (and ( type_199aee0d_b81f_40b9_aa2c_70c6c5f327fc_Class12 v )  ( type_e9cedb47_b613_47fd_8556_ef0d6561eaca_Class33 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) (> ( class12_Class12IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  15))) (and (= aux26 1) true)) (and (= aux26 0) false)))
(assert (and (=> (= aux26 0) (= weight26 1)) (=> (= aux26 1) (= weight26 0))))
(assert (and (>= aux27 0) (<= aux27 1)))
(assert (or (or (forall ((v Int)) (=> (and (and ( type_199aee0d_b81f_40b9_aa2c_70c6c5f327fc_Class12 v )  ( type_e9cedb47_b613_47fd_8556_ef0d6561eaca_Class33 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) (not ( class12_Class12BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  ))) (and (= aux27 1) true)) (and (= aux27 0) false)))
(assert (and (=> (= aux27 0) (= weight27 1)) (=> (= aux27 1) (= weight27 0))))
(assert (and (>= aux28 0) (<= aux28 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and ( type_199aee0d_b81f_40b9_aa2c_70c6c5f327fc_Class12 c1 )  ( type_e9cedb47_b613_47fd_8556_ef0d6561eaca_Class33 c1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) (not (= ( class12_Class12IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  16) ))) (and (= aux28 1) true)) (and (= aux28 0) false)))
(assert (and (=> (= aux28 0) (= weight28 1)) (=> (= aux28 1) (= weight28 0))))
(assert (and (>= aux29 0) (<= aux29 1)))
(assert (or (or (forall ((v Int)) (=> ( type_d8580d4f_44b3_4b86_8195_f9cbee9d3f86_Class13 v )  (<= ( class13_Class13IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  10))) (and (= aux29 1) true)) (and (= aux29 0) false)))
(assert (and (=> (= aux29 0) (= weight29 4)) (=> (= aux29 1) (= weight29 0))))
(assert (and (>= aux30 0) (<= aux30 1)))
(assert (or (or (and (forall ((v Int)) (=> ( type_d8580d4f_44b3_4b86_8195_f9cbee9d3f86_Class13 v )  ( class13_Class13BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) )) (forall ((v Int)) (=> ( type_d8580d4f_44b3_4b86_8195_f9cbee9d3f86_Class13 v )  ( class13_Class13BoolAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) ))) (and (= aux30 1) true)) (and (= aux30 0) false)))
(assert (and (=> (= aux30 0) (= weight30 4)) (=> (= aux30 1) (= weight30 0))))
(assert (and (>= aux31 0) (<= aux31 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_d8580d4f_44b3_4b86_8195_f9cbee9d3f86_Class13 c1 )  (= ( class13_Class13IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  17))) (and (= aux31 1) true)) (and (= aux31 0) false)))
(assert (and (=> (= aux31 0) (= weight31 4)) (=> (= aux31 1) (= weight31 0))))
(assert (and (>= aux32 0) (<= aux32 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_2066b13c_6f06_4cf7_a582_75c5e7d18e4e_Class14 v )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) (< ( class14_Class14IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  1))) (and (= aux32 1) true)) (and (= aux32 0) false)))
(assert (and (=> (= aux32 0) (= weight32 1)) (=> (= aux32 1) (= weight32 0))))
(assert (and (>= aux33 0) (<= aux33 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_2066b13c_6f06_4cf7_a582_75c5e7d18e4e_Class14 v )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) (not ( class14_Class14BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  ))) (and (= aux33 1) true)) (and (= aux33 0) false)))
(assert (and (=> (= aux33 0) (= weight33 1)) (=> (= aux33 1) (= weight33 0))))
(assert (and (>= aux34 0) (<= aux34 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and (and (and (and (and ( type_2066b13c_6f06_4cf7_a582_75c5e7d18e4e_Class14 c1 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c1 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c1 ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 c1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c1 ) ) (<= ( class14_Class14IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  1))) (and (= aux34 1) true)) (and (= aux34 0) false)))
(assert (and (=> (= aux34 0) (= weight34 1)) (=> (= aux34 1) (= weight34 0))))
(assert (and (>= aux35 0) (<= aux35 1)))
(assert (or (or (forall ((v Int)) (=> ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v )  (< ( class15_Class15IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  12))) (and (= aux35 1) true)) (and (= aux35 0) false)))
(assert (and (=> (= aux35 0) (= weight35 6)) (=> (= aux35 1) (= weight35 0))))
(assert (and (>= aux36 0) (<= aux36 1)))
(assert (or (or (or (forall ((v Int)) (=> ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v )  ( class15_Class15BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) )) (forall ((v Int)) (=> ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v )  ( class15_Class15BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) ))) (and (= aux36 1) true)) (and (= aux36 0) false)))
(assert (and (=> (= aux36 0) (= weight36 6)) (=> (= aux36 1) (= weight36 0))))
(assert (and (>= aux37 0) (<= aux37 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c2 ) ) (and ( class15_Class15BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  ( class15_Class15BoolAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c2 )  ) ))) (and (= aux37 1) true)) (and (= aux37 0) false)))
(assert (and (=> (= aux37 0) (= weight37 6)) (=> (= aux37 1) (= weight37 0))))
(assert (and (>= aux38 0) (<= aux38 1)))
(assert (or (or (forall ((v Int)) (=> ( type_c0d5d719_335c_4577_b2c2_17584e1d28bb_Class16 v )  (not (= ( class16_Class16IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  6) ))) (and (= aux38 1) true)) (and (= aux38 0) false)))
(assert (and (=> (= aux38 0) (= weight38 1)) (=> (= aux38 1) (= weight38 0))))
(assert (and (>= aux39 0) (<= aux39 1)))
(assert (or (or (or (forall ((v Int)) (=> ( type_c0d5d719_335c_4577_b2c2_17584e1d28bb_Class16 v )  ( class16_Class16BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) )) (forall ((v Int)) (=> ( type_c0d5d719_335c_4577_b2c2_17584e1d28bb_Class16 v )  ( class16_Class16BoolAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) ))) (and (= aux39 1) true)) (and (= aux39 0) false)))
(assert (and (=> (= aux39 0) (= weight39 1)) (=> (= aux39 1) (= weight39 0))))
(assert (and (>= aux40 0) (<= aux40 1)))
(assert (or (or (exists ((c1 Int)) (and ( type_c0d5d719_335c_4577_b2c2_17584e1d28bb_Class16 c1 )  (< ( class16_Class16IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  5))) (and (= aux40 1) true)) (and (= aux40 0) false)))
(assert (and (=> (= aux40 0) (= weight40 1)) (=> (= aux40 1) (= weight40 0))))
(assert (and (>= aux41 0) (<= aux41 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_d5557194_f1a2_4e7a_9d7d_7ecf3d1e4a38_Class17 v )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 v ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) (>= ( class17_Class17IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  15))) (and (= aux41 1) true)) (and (= aux41 0) false)))
(assert (and (=> (= aux41 0) (= weight41 19)) (=> (= aux41 1) (= weight41 0))))
(assert (and (>= aux42 0) (<= aux42 1)))
(assert (or (or (forall ((c7_2 Int)(c7_1 Int)) (=> (and (and (and (and (and (and (and ( type_d5557194_f1a2_4e7a_9d7d_7ecf3d1e4a38_Class17 c7_1 )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 c7_1 ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c7_1 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c7_1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c7_1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c7_1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c7_1 ) ) (and (and (and (and (and (and ( type_d5557194_f1a2_4e7a_9d7d_7ecf3d1e4a38_Class17 c7_2 )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 c7_2 ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c7_2 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c7_2 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c7_2 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c7_2 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c7_2 ) )) (<= ( class17_Class17IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c7_1 )  )  ( class17_Class17IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c7_2 )  ) ))) (and (= aux42 1) true)) (and (= aux42 0) false)))
(assert (and (=> (= aux42 0) (= weight42 19)) (=> (= aux42 1) (= weight42 0))))
(assert (and (>= aux43 0) (<= aux43 1)))
(assert (or (or (or (forall ((c7_2 Int)(c7_1 Int)) (=> (and (and (and (and (and (and (and ( type_d5557194_f1a2_4e7a_9d7d_7ecf3d1e4a38_Class17 c7_1 )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 c7_1 ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c7_1 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c7_1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c7_1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c7_1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c7_1 ) ) (and (and (and (and (and (and ( type_d5557194_f1a2_4e7a_9d7d_7ecf3d1e4a38_Class17 c7_2 )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 c7_2 ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c7_2 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c7_2 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c7_2 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c7_2 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c7_2 ) )) (> ( class17_Class17IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c7_1 )  )  ( class17_Class17IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c7_2 )  ) ))) (forall ((v Int)) (=> (and (and (and (and (and (and ( type_d5557194_f1a2_4e7a_9d7d_7ecf3d1e4a38_Class17 v )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 v ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) (and (<= ( class17_Class17IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  13) (and (forall ((v Int)) (=> (and (and (and (and (and (and ( type_d5557194_f1a2_4e7a_9d7d_7ecf3d1e4a38_Class17 v )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 v ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) ( class17_Class17BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) )) (forall ((v Int)) (=> (and (and (and (and (and (and ( type_d5557194_f1a2_4e7a_9d7d_7ecf3d1e4a38_Class17 v )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 v ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) ( class17_Class17BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) ))))))) (and (= aux43 1) true)) (and (= aux43 0) false)))
(assert (and (=> (= aux43 0) (= weight43 19)) (=> (= aux43 1) (= weight43 0))))
(assert (and (>= aux44 0) (<= aux44 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and (and (and (and (and ( type_d5557194_f1a2_4e7a_9d7d_7ecf3d1e4a38_Class17 c1 )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 c1 ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c1 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c1 ) ) (= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  10))) (and (= aux44 1) true)) (and (= aux44 0) false)))
(assert (and (=> (= aux44 0) (= weight44 19)) (=> (= aux44 1) (= weight44 0))))
(assert (and (>= aux45 0) (<= aux45 1)))
(assert (or (or (forall ((v Int)) (=> ( type_bae101c4_dfc3_4da6_bf65_1e45b1c5a983_Class18 v )  (>= ( class18_Class18IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  3))) (and (= aux45 1) true)) (and (= aux45 0) false)))
(assert (and (=> (= aux45 0) (= weight45 1)) (=> (= aux45 1) (= weight45 0))))
(assert (and (>= aux46 0) (<= aux46 1)))
(assert (or (or (forall ((c8_2 Int)(c8_1 Int)) (=> (and ( type_bae101c4_dfc3_4da6_bf65_1e45b1c5a983_Class18 c8_1 )  ( type_bae101c4_dfc3_4da6_bf65_1e45b1c5a983_Class18 c8_2 ) ) (>= ( class18_Class18IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c8_1 )  )  ( class18_Class18IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c8_2 )  ) ))) (and (= aux46 1) true)) (and (= aux46 0) false)))
(assert (and (=> (= aux46 0) (= weight46 1)) (=> (= aux46 1) (= weight46 0))))
(assert (and (>= aux47 0) (<= aux47 1)))
(assert (or (or (forall ((v Int)) (=> ( type_bae101c4_dfc3_4da6_bf65_1e45b1c5a983_Class18 v )  (or (= ( class18_Class18IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  7) (or (forall ((v Int)) (=> ( type_bae101c4_dfc3_4da6_bf65_1e45b1c5a983_Class18 v )  (= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  0))) (forall ((v Int)) (=> ( type_bae101c4_dfc3_4da6_bf65_1e45b1c5a983_Class18 v )  (not ( class18_Class18BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  ))))))) (and (= aux47 1) true)) (and (= aux47 0) false)))
(assert (and (=> (= aux47 0) (= weight47 1)) (=> (= aux47 1) (= weight47 0))))
(assert (and (>= aux48 0) (<= aux48 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_bae101c4_dfc3_4da6_bf65_1e45b1c5a983_Class18 c1 )  ( class18_Class18BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  ) )) (and (= aux48 1) true)) (and (= aux48 0) false)))
(assert (and (=> (= aux48 0) (= weight48 1)) (=> (= aux48 1) (= weight48 0))))
(assert (and (>= aux49 0) (<= aux49 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_99a97488_f640_45ac_8054_359f3ed84325_Class19 v )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) (>= ( class19_Class19IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  7))) (and (= aux49 1) true)) (and (= aux49 0) false)))
(assert (and (=> (= aux49 0) (= weight49 10)) (=> (= aux49 1) (= weight49 0))))
(assert (and (>= aux50 0) (<= aux50 1)))
(assert (or (or (forall ((c9_2 Int)(c9_1 Int)) (=> (and (and (and (and (and (and (and ( type_99a97488_f640_45ac_8054_359f3ed84325_Class19 c9_1 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c9_1 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c9_1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c9_1 ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 c9_1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c9_1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c9_1 ) ) (and (and (and (and (and (and ( type_99a97488_f640_45ac_8054_359f3ed84325_Class19 c9_2 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c9_2 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c9_2 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c9_2 ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 c9_2 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c9_2 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c9_2 ) )) (<= ( class19_Class19IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c9_1 )  )  ( class19_Class19IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c9_2 )  ) ))) (and (= aux50 1) true)) (and (= aux50 0) false)))
(assert (and (=> (= aux50 0) (= weight50 10)) (=> (= aux50 1) (= weight50 0))))
(assert (and (>= aux51 0) (<= aux51 1)))
(assert (or (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_99a97488_f640_45ac_8054_359f3ed84325_Class19 v )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) (>= ( class19_Class19IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  17))) (forall ((v Int)) (=> (and (and (and (and (and (and ( type_99a97488_f640_45ac_8054_359f3ed84325_Class19 v )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) (< ( class19_Class19IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  7)))) (and (= aux51 1) true)) (and (= aux51 0) false)))
(assert (and (=> (= aux51 0) (= weight51 10)) (=> (= aux51 1) (= weight51 0))))
(assert (and (>= aux52 0) (<= aux52 1)))
(assert (or (or (exists ((c1 Int)) (and (and (and (and (and (and (and ( type_99a97488_f640_45ac_8054_359f3ed84325_Class19 c1 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c1 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c1 ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 c1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c1 ) ) (> ( class19_Class19IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  17))) (and (= aux52 1) true)) (and (= aux52 0) false)))
(assert (and (=> (= aux52 0) (= weight52 10)) (=> (= aux52 1) (= weight52 0))))
(assert (and (>= aux53 0) (<= aux53 1)))
(assert (or (or (forall ((v Int)) (=> ( type_2ea2084f_4b09_4467_a2f4_39aa485c2be4_Class1 v )  (not (= ( class1_Class1IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  8) ))) (and (= aux53 1) true)) (and (= aux53 0) false)))
(assert (and (=> (= aux53 0) (= weight53 2)) (=> (= aux53 1) (= weight53 0))))
(assert (and (>= aux54 0) (<= aux54 1)))
(assert (or (or (forall ((c1_2 Int)(c1_1 Int)) (=> (and ( type_2ea2084f_4b09_4467_a2f4_39aa485c2be4_Class1 c1_1 )  ( type_2ea2084f_4b09_4467_a2f4_39aa485c2be4_Class1 c1_2 ) ) (< ( class1_Class1IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1_1 )  )  ( class1_Class1IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1_2 )  ) ))) (and (= aux54 1) true)) (and (= aux54 0) false)))
(assert (and (=> (= aux54 0) (= weight54 2)) (=> (= aux54 1) (= weight54 0))))
(assert (and (>= aux55 0) (<= aux55 1)))
(assert (or (or (and (forall ((v Int)) (=> ( type_2ea2084f_4b09_4467_a2f4_39aa485c2be4_Class1 v )  ( class1_Class1BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) )) (forall ((v Int)) (=> ( type_2ea2084f_4b09_4467_a2f4_39aa485c2be4_Class1 v )  ( class1_Class1BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) ))) (and (= aux55 1) true)) (and (= aux55 0) false)))
(assert (and (=> (= aux55 0) (= weight55 2)) (=> (= aux55 1) (= weight55 0))))
(assert (and (>= aux56 0) (<= aux56 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_ca6bb482_b8f1_4dfa_9371_2528e1a78785_Class20 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) (= ( class20_Class20IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  18))) (and (= aux56 1) true)) (and (= aux56 0) false)))
(assert (and (=> (= aux56 0) (= weight56 1)) (=> (= aux56 1) (= weight56 0))))
(assert (and (>= aux57 0) (<= aux57 1)))
(assert (or (or (forall ((c0_1 Int)(c0_2 Int)) (=> (and (and ( type_ca6bb482_b8f1_4dfa_9371_2528e1a78785_Class20 c0_1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c0_1 ) ) (and ( type_ca6bb482_b8f1_4dfa_9371_2528e1a78785_Class20 c0_2 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c0_2 ) )) (not (= ( class20_Class20IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c0_1 )  )  ( class20_Class20IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c0_2 )  ) ) ))) (and (= aux57 1) true)) (and (= aux57 0) false)))
(assert (and (=> (= aux57 0) (= weight57 1)) (=> (= aux57 1) (= weight57 0))))
(assert (and (>= aux58 0) (<= aux58 1)))
(assert (or (or (or (forall ((v Int)) (=> (and ( type_ca6bb482_b8f1_4dfa_9371_2528e1a78785_Class20 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( class20_Class20BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) )) (forall ((v Int)) (=> (and ( type_ca6bb482_b8f1_4dfa_9371_2528e1a78785_Class20 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( class20_Class20BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) ))) (and (= aux58 1) true)) (and (= aux58 0) false)))
(assert (and (=> (= aux58 0) (= weight58 1)) (=> (= aux58 1) (= weight58 0))))
(assert (and (>= aux59 0) (<= aux59 1)))
(assert (or (or (forall ((c1 Int)) (=> (and ( type_ca6bb482_b8f1_4dfa_9371_2528e1a78785_Class20 c1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( class20_Class20BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  ) )) (and (= aux59 1) true)) (and (= aux59 0) false)))
(assert (and (=> (= aux59 0) (= weight59 1)) (=> (= aux59 1) (= weight59 0))))
(assert (and (>= aux60 0) (<= aux60 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) (< ( class21_Class21IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  19))) (and (= aux60 1) true)) (and (= aux60 0) false)))
(assert (and (=> (= aux60 0) (= weight60 12)) (=> (= aux60 1) (= weight60 0))))
(assert (and (>= aux61 0) (<= aux61 1)))
(assert (or (or (forall ((c1_2 Int)(c1_1 Int)) (=> (and (and ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 c1_1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1_1 ) ) (and ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 c1_2 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1_2 ) )) (< ( class21_Class21IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1_1 )  )  ( class21_Class21IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1_2 )  ) ))) (and (= aux61 1) true)) (and (= aux61 0) false)))
(assert (and (=> (= aux61 0) (= weight61 12)) (=> (= aux61 1) (= weight61 0))))
(assert (and (>= aux62 0) (<= aux62 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) (or (<= ( class21_Class21IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  1) (or (forall ((v Int)) (=> (and ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) (not (= ( class21_Class21IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  19) ))) (forall ((c1_2 Int)(c1_1 Int)) (=> (and (and ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 c1_1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1_1 ) ) (and ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 c1_2 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1_2 ) )) (>= ( class21_Class21IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1_1 )  )  ( class21_Class21IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1_2 )  ) ))))))) (and (= aux62 1) true)) (and (= aux62 0) false)))
(assert (and (=> (= aux62 0) (= weight62 12)) (=> (= aux62 1) (= weight62 0))))
(assert (and (>= aux63 0) (<= aux63 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and (and ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 c1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) (and ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 c2 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c2 ) )) (or ( class21_Class21BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  ( class21_Class21BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c2 )  ) ))) (and (= aux63 1) true)) (and (= aux63 0) false)))
(assert (and (=> (= aux63 0) (= weight63 12)) (=> (= aux63 1) (= weight63 0))))
(assert (and (>= aux64 0) (<= aux64 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 v ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 v ) ) (<= ( class22_Class22IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  1))) (and (= aux64 1) true)) (and (= aux64 0) false)))
(assert (and (=> (= aux64 0) (= weight64 13)) (=> (= aux64 1) (= weight64 0))))
(assert (and (>= aux65 0) (<= aux65 1)))
(assert (or (or (forall ((c2_1 Int)(c2_2 Int)) (=> (and (and (and (and ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 c2_1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c2_1 ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 c2_1 ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c2_1 ) ) (and (and (and ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 c2_2 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c2_2 ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 c2_2 ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c2_2 ) )) (> ( class22_Class22IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c2_1 )  )  ( class22_Class22IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c2_2 )  ) ))) (and (= aux65 1) true)) (and (= aux65 0) false)))
(assert (and (=> (= aux65 0) (= weight65 13)) (=> (= aux65 1) (= weight65 0))))
(assert (and (>= aux66 0) (<= aux66 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 v ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 v ) ) (or ( class22_Class22BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  (and (forall ((v Int)) (=> (and (and (and ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 v ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 v ) ) ( class22_Class22BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) )) (forall ((v Int)) (=> (and (and (and ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 v ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 v ) ) (not (= ( class22_Class22IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  19) ))))))) (and (= aux66 1) true)) (and (= aux66 0) false)))
(assert (and (=> (= aux66 0) (= weight66 13)) (=> (= aux66 1) (= weight66 0))))
(assert (and (>= aux67 0) (<= aux67 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and (and ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 c1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 c1 ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c1 ) ) (not (= ( class22_Class22IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  12) ))) (and (= aux67 1) true)) (and (= aux67 0) false)))
(assert (and (=> (= aux67 0) (= weight67 13)) (=> (= aux67 1) (= weight67 0))))
(assert (and (>= aux68 0) (<= aux68 1)))
(assert (or (or (forall ((v Int)) (=> ( type_17e19828_4b82_4208_892f_70ef1e79ed6d_Class23 v )  (< ( class23_Class23IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  4))) (and (= aux68 1) true)) (and (= aux68 0) false)))
(assert (and (=> (= aux68 0) (= weight68 1)) (=> (= aux68 1) (= weight68 0))))
(assert (and (>= aux69 0) (<= aux69 1)))
(assert (or (or (forall ((c3_2 Int)(c3_1 Int)) (=> (and ( type_17e19828_4b82_4208_892f_70ef1e79ed6d_Class23 c3_1 )  ( type_17e19828_4b82_4208_892f_70ef1e79ed6d_Class23 c3_2 ) ) (not (= ( class23_Class23IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c3_1 )  )  ( class23_Class23IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c3_2 )  ) ) ))) (and (= aux69 1) true)) (and (= aux69 0) false)))
(assert (and (=> (= aux69 0) (= weight69 1)) (=> (= aux69 1) (= weight69 0))))
(assert (and (>= aux70 0) (<= aux70 1)))
(assert (or (or (forall ((v Int)) (=> ( type_17e19828_4b82_4208_892f_70ef1e79ed6d_Class23 v )  (and ( class23_Class23BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  (and (forall ((v Int)) (=> ( type_17e19828_4b82_4208_892f_70ef1e79ed6d_Class23 v )  (not (= ( class23_Class23IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  7) ))) (forall ((v Int)) (=> ( type_17e19828_4b82_4208_892f_70ef1e79ed6d_Class23 v )  ( class23_Class23BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) )))))) (and (= aux70 1) true)) (and (= aux70 0) false)))
(assert (and (=> (= aux70 0) (= weight70 1)) (=> (= aux70 1) (= weight70 0))))
(assert (and (>= aux71 0) (<= aux71 1)))
(assert (or (or (exists ((c1 Int)) (and ( type_17e19828_4b82_4208_892f_70ef1e79ed6d_Class23 c1 )  ( class23_Class23BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  ) )) (and (= aux71 1) true)) (and (= aux71 0) false)))
(assert (and (=> (= aux71 0) (= weight71 1)) (=> (= aux71 1) (= weight71 0))))
(assert (and (>= aux72 0) (<= aux72 1)))
(assert (or (or (forall ((v Int)) (=> ( type_8c03a4ad_4dc1_452e_88a3_282533302669_Class24 v )  (= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  5))) (and (= aux72 1) true)) (and (= aux72 0) false)))
(assert (and (=> (= aux72 0) (= weight72 11)) (=> (= aux72 1) (= weight72 0))))
(assert (and (>= aux73 0) (<= aux73 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and ( type_d76be500_c00a_467c_b524_ecd896d509db_Class25 v )  ( type_199aee0d_b81f_40b9_aa2c_70c6c5f327fc_Class12 v ) ) ( type_e9cedb47_b613_47fd_8556_ef0d6561eaca_Class33 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) (= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  2))) (and (= aux73 1) true)) (and (= aux73 0) false)))
(assert (and (=> (= aux73 0) (= weight73 10)) (=> (= aux73 1) (= weight73 0))))
(assert (and (>= aux74 0) (<= aux74 1)))
(assert (or (or (forall ((v Int)) (=> ( type_085c21cf_5c26_4ee2_b213_395bc6cef7f3_Class26 v )  (not (= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  4) ))) (and (= aux74 1) true)) (and (= aux74 0) false)))
(assert (and (=> (= aux74 0) (= weight74 1)) (=> (= aux74 1) (= weight74 0))))
(assert (and (>= aux75 0) (<= aux75 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) (not (= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  2) ))) (and (= aux75 1) true)) (and (= aux75 0) false)))
(assert (and (=> (= aux75 0) (= weight75 4)) (=> (= aux75 1) (= weight75 0))))
(assert (and (>= aux76 0) (<= aux76 1)))
(assert (or (or (forall ((v Int)) (=> (and (and ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v )  ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) (not (= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  2) ))) (and (= aux76 1) true)) (and (= aux76 0) false)))
(assert (and (=> (= aux76 0) (= weight76 9)) (=> (= aux76 1) (= weight76 0))))
(assert (and (>= aux77 0) (<= aux77 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and ( type_8d2fee4e_d9d4_46dd_b9cd_e57e07fc0f04_Class29 v )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) (not (= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  2) ))) (and (= aux77 1) true)) (and (= aux77 0) false)))
(assert (and (=> (= aux77 0) (= weight77 4)) (=> (= aux77 1) (= weight77 0))))
(assert (and (>= aux78 0) (<= aux78 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_f470501d_f523_47bc_9ceb_876844a70065_Class2 v )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) ( type_b487ca72_cce1_4e42_b5a0_ac6e39cd33be_Class54 v ) ) (> ( class2_Class2IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  6))) (and (= aux78 1) true)) (and (= aux78 0) false)))
(assert (and (=> (= aux78 0) (= weight78 3)) (=> (= aux78 1) (= weight78 0))))
(assert (and (>= aux79 0) (<= aux79 1)))
(assert (or (or (forall ((c2_1 Int)(c2_2 Int)) (=> (and (and (and (and (and (and (and ( type_f470501d_f523_47bc_9ceb_876844a70065_Class2 c2_1 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c2_1 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c2_1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c2_1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c2_1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c2_1 ) ) ( type_b487ca72_cce1_4e42_b5a0_ac6e39cd33be_Class54 c2_1 ) ) (and (and (and (and (and (and ( type_f470501d_f523_47bc_9ceb_876844a70065_Class2 c2_2 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c2_2 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c2_2 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c2_2 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c2_2 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c2_2 ) ) ( type_b487ca72_cce1_4e42_b5a0_ac6e39cd33be_Class54 c2_2 ) )) (< ( class2_Class2IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c2_1 )  )  ( class2_Class2IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c2_2 )  ) ))) (and (= aux79 1) true)) (and (= aux79 0) false)))
(assert (and (=> (= aux79 0) (= weight79 3)) (=> (= aux79 1) (= weight79 0))))
(assert (and (>= aux80 0) (<= aux80 1)))
(assert (or (or (and (forall ((v Int)) (=> (and (and (and (and (and (and ( type_f470501d_f523_47bc_9ceb_876844a70065_Class2 v )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) ( type_b487ca72_cce1_4e42_b5a0_ac6e39cd33be_Class54 v ) ) ( class2_Class2BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) )) (forall ((v Int)) (=> (and (and (and (and (and (and ( type_f470501d_f523_47bc_9ceb_876844a70065_Class2 v )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) ( type_b487ca72_cce1_4e42_b5a0_ac6e39cd33be_Class54 v ) ) ( class2_Class2BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) ))) (and (= aux80 1) true)) (and (= aux80 0) false)))
(assert (and (=> (= aux80 0) (= weight80 3)) (=> (= aux80 1) (= weight80 0))))
(assert (and (>= aux81 0) (<= aux81 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and ( type_e18e8621_73ee_4763_9bc6_999e1519aae2_Class30 c1 )  ( type_e9cedb47_b613_47fd_8556_ef0d6561eaca_Class33 c1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) (not (= ( class30_Class30IntAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  0) ))) (and (= aux81 1) true)) (and (= aux81 0) false)))
(assert (and (=> (= aux81 0) (= weight81 2)) (=> (= aux81 1) (= weight81 0))))
(assert (and (>= aux82 0) (<= aux82 1)))
(assert (or (or (exists ((c1 Int)) (and (and (and (and (and (and (and ( type_f2782312_f137_43ff_aa37_e35f03a3f4de_Class31 c1 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c1 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c1 ) ) ( type_b487ca72_cce1_4e42_b5a0_ac6e39cd33be_Class54 c1 ) ) (= ( class31_Class31IntAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  0))) (and (= aux82 1) true)) (and (= aux82 0) false)))
(assert (and (=> (= aux82 0) (= weight82 4)) (=> (= aux82 1) (= weight82 0))))
(assert (and (>= aux83 0) (<= aux83 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_09b1475a_2f34_4090_a83a_fa39e7fe2455_Class32 c1 )  (<= ( class32_Class32IntAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  10))) (and (= aux83 1) true)) (and (= aux83 0) false)))
(assert (and (=> (= aux83 0) (= weight83 3)) (=> (= aux83 1) (= weight83 0))))
(assert (and (>= aux84 0) (<= aux84 1)))
(assert (or (or (forall ((c1 Int)) (=> (and ( type_e9cedb47_b613_47fd_8556_ef0d6561eaca_Class33 c1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) (>= ( class33_Class33IntAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  18))) (and (= aux84 1) true)) (and (= aux84 0) false)))
(assert (and (=> (= aux84 0) (= weight84 4)) (=> (= aux84 1) (= weight84 0))))
(assert (and (>= aux85 0) (<= aux85 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_81e45b6c_0f30_4734_9277_19a505a78571_Class34 c1 )  (>= ( class34_Class34IntAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  4))) (and (= aux85 1) true)) (and (= aux85 0) false)))
(assert (and (=> (= aux85 0) (= weight85 1)) (=> (= aux85 1) (= weight85 0))))
(assert (and (>= aux86 0) (<= aux86 1)))
(assert (or (or (exists ((c1 Int)) (and (and (and (and (and ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c1 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c1 ) ) (not (= ( class35_Class35IntAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  1) ))) (and (= aux86 1) true)) (and (= aux86 0) false)))
(assert (and (=> (= aux86 0) (= weight86 5)) (=> (= aux86 1) (= weight86 0))))
(assert (and (>= aux87 0) (<= aux87 1)))
(assert (or (or (forall ((c_35 Int)) (=> (and (and (and (and ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c_35 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c_35 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c_35 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c_35 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c_35 ) ) (forall ((c_54 Int)) (=> (and (and (and (and (and ( type_b487ca72_cce1_4e42_b5a0_ac6e39cd33be_Class54 c_54 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c_54 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c_54 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c_54 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c_54 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c_54 ) ) (not (= ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c_35 )  ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c_54 ) ) ))))) (and (= aux87 1) true)) (and (= aux87 0) false)))
(assert (and (=> (= aux87 0) (= weight87 5)) (=> (= aux87 1) (= weight87 0))))
(assert (and (>= aux88 0) (<= aux88 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and (and ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c1 )  ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c1 ) ) (not (= ( class36_Class36IntAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  1) ))) (and (= aux88 1) true)) (and (= aux88 0) false)))
(assert (and (=> (= aux88 0) (= weight88 1)) (=> (= aux88 1) (= weight88 0))))
(assert (and (>= aux89 0) (<= aux89 1)))
(assert (or (or (forall ((c_36 Int)) (=> (and (and (and ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c_36 )  ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c_36 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c_36 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c_36 ) ) (forall ((c_54 Int)) (=> (and (and (and (and (and ( type_b487ca72_cce1_4e42_b5a0_ac6e39cd33be_Class54 c_54 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c_54 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c_54 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c_54 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c_54 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c_54 ) ) (forall ((c_35 Int)) (=> (and (and (and (and ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c_35 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c_35 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c_35 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c_35 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c_35 ) ) (and (not (= ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c_54 )  ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c_35 ) ) ) (not (= ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c_36 )  ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c_54 ) ) )))))))) (and (= aux89 1) true)) (and (= aux89 0) false)))
(assert (and (=> (= aux89 0) (= weight89 1)) (=> (= aux89 1) (= weight89 0))))
(assert (and (>= aux90 0) (<= aux90 1)))
(assert (or (or (forall ((c_36 Int)) (=> (and (and (and ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c_36 )  ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c_36 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c_36 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c_36 ) ) (forall ((c_28 Int)) (=> (and (and ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c_28 )  ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c_28 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c_28 ) ) (not (= ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c_36 )  ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c_28 ) ) ))))) (and (= aux90 1) true)) (and (= aux90 0) false)))
(assert (and (=> (= aux90 0) (= weight90 1)) (=> (= aux90 1) (= weight90 0))))
(assert (and (>= aux91 0) (<= aux91 1)))
(assert (or (or (forall ((c7_2 Int)(c7_1 Int)) (=> (and (and ( type_dd7f8304_856a_40e9_affb_4f7e3669961e_Class37 c7_1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c7_1 ) ) (and ( type_dd7f8304_856a_40e9_affb_4f7e3669961e_Class37 c7_2 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c7_2 ) )) (not (= ( class37_Class37IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c7_1 )  )  ( class37_Class37IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c7_2 )  ) ) ))) (and (= aux91 1) true)) (and (= aux91 0) false)))
(assert (and (=> (= aux91 0) (= weight91 6)) (=> (= aux91 1) (= weight91 0))))
(assert (and (>= aux92 0) (<= aux92 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and (and ( type_dd7f8304_856a_40e9_affb_4f7e3669961e_Class37 c1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) (and ( type_dd7f8304_856a_40e9_affb_4f7e3669961e_Class37 c2 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c2 ) )) (and ( class37_Class37BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  ( class37_Class37BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c2 )  ) ))) (and (= aux92 1) true)) (and (= aux92 0) false)))
(assert (and (=> (= aux92 0) (= weight92 6)) (=> (= aux92 1) (= weight92 0))))
(assert (and (>= aux93 0) (<= aux93 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and (and ( type_dd7f8304_856a_40e9_affb_4f7e3669961e_Class37 c1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) (and ( type_dd7f8304_856a_40e9_affb_4f7e3669961e_Class37 c2 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c2 ) )) (forall ((v Int)) (=> (and ( type_dd7f8304_856a_40e9_affb_4f7e3669961e_Class37 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) (= ( class37_Class37IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  ( class37_Class37IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  ) ))))) (and (= aux93 1) true)) (and (= aux93 0) false)))
(assert (and (=> (= aux93 0) (= weight93 6)) (=> (= aux93 1) (= weight93 0))))
(assert (and (>= aux94 0) (<= aux94 1)))
(assert (or (or (forall ((c8_2 Int)(c8_1 Int)) (=> (and (and (and (and (and ( type_19cf6536_54d7_4161_aee0_814462a77144_Class38 c8_1 )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 c8_1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c8_1 ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 c8_1 ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c8_1 ) ) (and (and (and (and ( type_19cf6536_54d7_4161_aee0_814462a77144_Class38 c8_2 )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 c8_2 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c8_2 ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 c8_2 ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c8_2 ) )) (not (= ( class38_Class38IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c8_1 )  )  ( class38_Class38IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c8_2 )  ) ) ))) (and (= aux94 1) true)) (and (= aux94 0) false)))
(assert (and (=> (= aux94 0) (= weight94 7)) (=> (= aux94 1) (= weight94 0))))
(assert (and (>= aux95 0) (<= aux95 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and (and (and (and (and ( type_19cf6536_54d7_4161_aee0_814462a77144_Class38 c1 )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 c1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 c1 ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c1 ) ) (and (and (and (and ( type_19cf6536_54d7_4161_aee0_814462a77144_Class38 c2 )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 c2 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c2 ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 c2 ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c2 ) )) (or ( class38_Class38BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  ( class38_Class38BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c2 )  ) ))) (and (= aux95 1) true)) (and (= aux95 0) false)))
(assert (and (=> (= aux95 0) (= weight95 7)) (=> (= aux95 1) (= weight95 0))))
(assert (and (>= aux96 0) (<= aux96 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and (and (and (and (and ( type_19cf6536_54d7_4161_aee0_814462a77144_Class38 c1 )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 c1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 c1 ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c1 ) ) (and (and (and (and ( type_19cf6536_54d7_4161_aee0_814462a77144_Class38 c2 )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 c2 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c2 ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 c2 ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c2 ) )) (or ( class38_Class38BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  ( class38_Class38BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c2 )  ) ))) (and (= aux96 1) true)) (and (= aux96 0) false)))
(assert (and (=> (= aux96 0) (= weight96 7)) (=> (= aux96 1) (= weight96 0))))
(assert (and (>= aux97 0) (<= aux97 1)))
(assert (or (or (forall ((c9_2 Int)(c9_1 Int)) (=> (and ( type_79243f18_e1eb_44bf_a068_99e2f0f79055_Class39 c9_1 )  ( type_79243f18_e1eb_44bf_a068_99e2f0f79055_Class39 c9_2 ) ) (< ( class39_Class39IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c9_1 )  )  ( class39_Class39IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c9_2 )  ) ))) (and (= aux97 1) true)) (and (= aux97 0) false)))
(assert (and (=> (= aux97 0) (= weight97 1)) (=> (= aux97 1) (= weight97 0))))
(assert (and (>= aux98 0) (<= aux98 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and ( type_79243f18_e1eb_44bf_a068_99e2f0f79055_Class39 c1 )  ( type_79243f18_e1eb_44bf_a068_99e2f0f79055_Class39 c2 ) ) (forall ((v Int)) (=> ( type_79243f18_e1eb_44bf_a068_99e2f0f79055_Class39 v )  (< ( class39_Class39IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  ( class39_Class39IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  ) ))))) (and (= aux98 1) true)) (and (= aux98 0) false)))
(assert (and (=> (= aux98 0) (= weight98 1)) (=> (= aux98 1) (= weight98 0))))
(assert (and (>= aux99 0) (<= aux99 1)))
(assert (or (or (exists ((c1 Int)) (and ( type_79243f18_e1eb_44bf_a068_99e2f0f79055_Class39 c1 )  (not ( class39_Class39BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  ))) (and (= aux99 1) true)) (and (= aux99 0) false)))
(assert (and (=> (= aux99 0) (= weight99 1)) (=> (= aux99 1) (= weight99 0))))
(assert (and (>= aux100 0) (<= aux100 1)))
(assert (or (or (forall ((v Int)) (=> ( type_9bf6cfa1_28e0_41b2_b84c_e5e1a84a0db2_Class3 v )  (<= ( class3_Class3IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  5))) (and (= aux100 1) true)) (and (= aux100 0) false)))
(assert (and (=> (= aux100 0) (= weight100 4)) (=> (= aux100 1) (= weight100 0))))
(assert (and (>= aux101 0) (<= aux101 1)))
(assert (or (or (forall ((c3_2 Int)(c3_1 Int)) (=> (and ( type_9bf6cfa1_28e0_41b2_b84c_e5e1a84a0db2_Class3 c3_1 )  ( type_9bf6cfa1_28e0_41b2_b84c_e5e1a84a0db2_Class3 c3_2 ) ) (not (= ( class3_Class3IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c3_1 )  )  ( class3_Class3IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c3_2 )  ) ) ))) (and (= aux101 1) true)) (and (= aux101 0) false)))
(assert (and (=> (= aux101 0) (= weight101 4)) (=> (= aux101 1) (= weight101 0))))
(assert (and (>= aux102 0) (<= aux102 1)))
(assert (or (or (forall ((v Int)) (=> ( type_9bf6cfa1_28e0_41b2_b84c_e5e1a84a0db2_Class3 v )  (not ( class3_Class3BoolAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  ))) (and (= aux102 1) true)) (and (= aux102 0) false)))
(assert (and (=> (= aux102 0) (= weight102 4)) (=> (= aux102 1) (= weight102 0))))
(assert (and (>= aux103 0) (<= aux103 1)))
(assert (or (or (forall ((c0_1 Int)(c0_2 Int)) (=> (and ( type_83a48113_7855_4ed1_8d9b_d354aa3c8f71_Class40 c0_1 )  ( type_83a48113_7855_4ed1_8d9b_d354aa3c8f71_Class40 c0_2 ) ) (>= ( class40_Class40IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c0_1 )  )  ( class40_Class40IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c0_2 )  ) ))) (and (= aux103 1) true)) (and (= aux103 0) false)))
(assert (and (=> (= aux103 0) (= weight103 2)) (=> (= aux103 1) (= weight103 0))))
(assert (and (>= aux104 0) (<= aux104 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and ( type_83a48113_7855_4ed1_8d9b_d354aa3c8f71_Class40 c1 )  ( type_83a48113_7855_4ed1_8d9b_d354aa3c8f71_Class40 c2 ) ) (forall ((v Int)) (=> ( type_83a48113_7855_4ed1_8d9b_d354aa3c8f71_Class40 v )  (= ( class40_Class40IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  ( class40_Class40IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  ) ))))) (and (= aux104 1) true)) (and (= aux104 0) false)))
(assert (and (=> (= aux104 0) (= weight104 2)) (=> (= aux104 1) (= weight104 0))))
(assert (and (>= aux105 0) (<= aux105 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and ( type_83a48113_7855_4ed1_8d9b_d354aa3c8f71_Class40 c1 )  ( type_83a48113_7855_4ed1_8d9b_d354aa3c8f71_Class40 c2 ) ) (forall ((v Int)) (=> ( type_83a48113_7855_4ed1_8d9b_d354aa3c8f71_Class40 v )  (>= ( class40_Class40IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  ( class40_Class40IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  ) ))))) (and (= aux105 1) true)) (and (= aux105 0) false)))
(assert (and (=> (= aux105 0) (= weight105 2)) (=> (= aux105 1) (= weight105 0))))
(assert (and (>= aux106 0) (<= aux106 1)))
(assert (or (or (forall ((c1_2 Int)(c1_1 Int)) (=> (and ( type_06d25d7d_dd51_47e7_b0e5_9debb6fb037a_Class41 c1_1 )  ( type_06d25d7d_dd51_47e7_b0e5_9debb6fb037a_Class41 c1_2 ) ) (not (= ( class41_Class41IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1_1 )  )  ( class41_Class41IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1_2 )  ) ) ))) (and (= aux106 1) true)) (and (= aux106 0) false)))
(assert (and (=> (= aux106 0) (= weight106 3)) (=> (= aux106 1) (= weight106 0))))
(assert (and (>= aux107 0) (<= aux107 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and ( type_06d25d7d_dd51_47e7_b0e5_9debb6fb037a_Class41 c1 )  ( type_06d25d7d_dd51_47e7_b0e5_9debb6fb037a_Class41 c2 ) ) (and ( class41_Class41BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  ( class41_Class41BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c2 )  ) ))) (and (= aux107 1) true)) (and (= aux107 0) false)))
(assert (and (=> (= aux107 0) (= weight107 3)) (=> (= aux107 1) (= weight107 0))))
(assert (and (>= aux108 0) (<= aux108 1)))
(assert (or (or (forall ((c1 Int)(c2 Int)) (=> (and ( type_06d25d7d_dd51_47e7_b0e5_9debb6fb037a_Class41 c1 )  ( type_06d25d7d_dd51_47e7_b0e5_9debb6fb037a_Class41 c2 ) ) (or ( class41_Class41BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  ( class41_Class41BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c2 )  ) ))) (and (= aux108 1) true)) (and (= aux108 0) false)))
(assert (and (=> (= aux108 0) (= weight108 3)) (=> (= aux108 1) (= weight108 0))))
(assert (and (>= aux109 0) (<= aux109 1)))
(assert (or (or (forall ((c2_1 Int)(c2_2 Int)) (=> (and ( type_c65c46be_3558_43b5_94ec_6b0287a5326f_Class42 c2_1 )  ( type_c65c46be_3558_43b5_94ec_6b0287a5326f_Class42 c2_2 ) ) (< ( class42_Class42IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c2_1 )  )  ( class42_Class42IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c2_2 )  ) ))) (and (= aux109 1) true)) (and (= aux109 0) false)))
(assert (and (=> (= aux109 0) (= weight109 4)) (=> (= aux109 1) (= weight109 0))))
(assert (and (>= aux110 0) (<= aux110 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and ( type_c65c46be_3558_43b5_94ec_6b0287a5326f_Class42 c1 )  ( type_c65c46be_3558_43b5_94ec_6b0287a5326f_Class42 c2 ) ) (or ( class42_Class42BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  ( class42_Class42BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c2 )  ) ))) (and (= aux110 1) true)) (and (= aux110 0) false)))
(assert (and (=> (= aux110 0) (= weight110 4)) (=> (= aux110 1) (= weight110 0))))
(assert (and (>= aux111 0) (<= aux111 1)))
(assert (or (or (exists ((c1 Int)) (and ( type_c65c46be_3558_43b5_94ec_6b0287a5326f_Class42 c1 )  (< ( class42_Class42IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  3))) (and (= aux111 1) true)) (and (= aux111 0) false)))
(assert (and (=> (= aux111 0) (= weight111 4)) (=> (= aux111 1) (= weight111 0))))
(assert (and (>= aux112 0) (<= aux112 1)))
(assert (or (or (forall ((c3_2 Int)(c3_1 Int)) (=> (and (and ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c3_1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c3_1 ) ) (and ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c3_2 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c3_2 ) )) (= ( class43_Class43IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c3_1 )  )  ( class43_Class43IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c3_2 )  ) ))) (and (= aux112 1) true)) (and (= aux112 0) false)))
(assert (and (=> (= aux112 0) (= weight112 5)) (=> (= aux112 1) (= weight112 0))))
(assert (and (>= aux113 0) (<= aux113 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and (and ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) (and ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c2 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c2 ) )) (or ( class43_Class43BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  ( class43_Class43BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c2 )  ) ))) (and (= aux113 1) true)) (and (= aux113 0) false)))
(assert (and (=> (= aux113 0) (= weight113 5)) (=> (= aux113 1) (= weight113 0))))
(assert (and (>= aux114 0) (<= aux114 1)))
(assert (or (or (forall ((c1 Int)(c2 Int)) (=> (and (and ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) (and ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c2 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c2 ) )) (forall ((v Int)) (=> (and ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) (>= ( class43_Class43IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  ( class43_Class43IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  ) ))))) (and (= aux114 1) true)) (and (= aux114 0) false)))
(assert (and (=> (= aux114 0) (= weight114 5)) (=> (= aux114 1) (= weight114 0))))
(assert (and (>= aux115 0) (<= aux115 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 v )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) (< ( class44_Class44IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  7))) (and (= aux115 1) true)) (and (= aux115 0) false)))
(assert (and (=> (= aux115 0) (= weight115 1)) (=> (= aux115 1) (= weight115 0))))
(assert (and (>= aux116 0) (<= aux116 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and (and (and (and ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 c1 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c1 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c1 ) ) (not (= ( class44_Class44IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  11) ))) (and (= aux116 1) true)) (and (= aux116 0) false)))
(assert (and (=> (= aux116 0) (= weight116 1)) (=> (= aux116 1) (= weight116 0))))
(assert (and (>= aux117 0) (<= aux117 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_3656814c_ce5b_4edc_8252_b0aac894cc02_Class45 v )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) (= ( class45_Class45IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  0))) (and (= aux117 1) true)) (and (= aux117 0) false)))
(assert (and (=> (= aux117 0) (= weight117 2)) (=> (= aux117 1) (= weight117 0))))
(assert (and (>= aux118 0) (<= aux118 1)))
(assert (or (or (exists ((c1 Int)) (and (and (and (and (and (and (and ( type_3656814c_ce5b_4edc_8252_b0aac894cc02_Class45 c1 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c1 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c1 ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 c1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c1 ) ) ( class45_Class45BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  ) )) (and (= aux118 1) true)) (and (= aux118 0) false)))
(assert (and (=> (= aux118 0) (= weight118 2)) (=> (= aux118 1) (= weight118 0))))
(assert (and (>= aux119 0) (<= aux119 1)))
(assert (or (or (forall ((v Int)) (=> (and (and ( type_3d2d6bde_2b0d_4919_ab0d_2850b4a6a2ce_Class46 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 v ) ) (< ( class46_Class46IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  2))) (and (= aux119 1) true)) (and (= aux119 0) false)))
(assert (and (=> (= aux119 0) (= weight119 3)) (=> (= aux119 1) (= weight119 0))))
(assert (and (>= aux120 0) (<= aux120 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and ( type_3d2d6bde_2b0d_4919_ab0d_2850b4a6a2ce_Class46 c1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 c1 ) ) (> ( class46_Class46IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  7))) (and (= aux120 1) true)) (and (= aux120 0) false)))
(assert (and (=> (= aux120 0) (= weight120 3)) (=> (= aux120 1) (= weight120 0))))
(assert (and (>= aux121 0) (<= aux121 1)))
(assert (or (or (forall ((v Int)) (=> ( type_f6d46d72_d840_4943_8c3f_a60cd53b61ce_Class47 v )  (> ( class47_Class47IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  12))) (and (= aux121 1) true)) (and (= aux121 0) false)))
(assert (and (=> (= aux121 0) (= weight121 1)) (=> (= aux121 1) (= weight121 0))))
(assert (and (>= aux122 0) (<= aux122 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_f6d46d72_d840_4943_8c3f_a60cd53b61ce_Class47 c1 )  (not (= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  2) ))) (and (= aux122 1) true)) (and (= aux122 0) false)))
(assert (and (=> (= aux122 0) (= weight122 1)) (=> (= aux122 1) (= weight122 0))))
(assert (and (>= aux123 0) (<= aux123 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_56e26645_2781_43c8_9657_65138723519d_Class48 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) (not (= ( class48_Class48IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  19) ))) (and (= aux123 1) true)) (and (= aux123 0) false)))
(assert (and (=> (= aux123 0) (= weight123 2)) (=> (= aux123 1) (= weight123 0))))
(assert (and (>= aux124 0) (<= aux124 1)))
(assert (or (or (exists ((c1 Int)) (and (and ( type_56e26645_2781_43c8_9657_65138723519d_Class48 c1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) (not (= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  1) ))) (and (= aux124 1) true)) (and (= aux124 0) false)))
(assert (and (=> (= aux124 0) (= weight124 2)) (=> (= aux124 1) (= weight124 0))))
(assert (and (>= aux125 0) (<= aux125 1)))
(assert (or (or (forall ((v Int)) (=> ( type_a359a594_1de4_424e_be85_5e1318b33a72_Class49 v )  (= ( class49_Class49IntAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  15))) (and (= aux125 1) true)) (and (= aux125 0) false)))
(assert (and (=> (= aux125 0) (= weight125 3)) (=> (= aux125 1) (= weight125 0))))
(assert (and (>= aux126 0) (<= aux126 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_a359a594_1de4_424e_be85_5e1318b33a72_Class49 c1 )  (= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  7))) (and (= aux126 1) true)) (and (= aux126 0) false)))
(assert (and (=> (= aux126 0) (= weight126 3)) (=> (= aux126 1) (= weight126 0))))
(assert (and (>= aux127 0) (<= aux127 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_ef0869a7_c2f0_46f6_b446_e20eb09a21f2_Class4 v )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 v ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) (< ( class4_Class4IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  13))) (and (= aux127 1) true)) (and (= aux127 0) false)))
(assert (and (=> (= aux127 0) (= weight127 2)) (=> (= aux127 1) (= weight127 0))))
(assert (and (>= aux128 0) (<= aux128 1)))
(assert (or (or (forall ((c4_2 Int)(c4_1 Int)) (=> (and (and (and (and (and (and (and ( type_ef0869a7_c2f0_46f6_b446_e20eb09a21f2_Class4 c4_1 )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 c4_1 ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c4_1 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c4_1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c4_1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c4_1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c4_1 ) ) (and (and (and (and (and (and ( type_ef0869a7_c2f0_46f6_b446_e20eb09a21f2_Class4 c4_2 )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 c4_2 ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c4_2 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c4_2 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c4_2 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c4_2 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c4_2 ) )) (>= ( class4_Class4IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c4_1 )  )  ( class4_Class4IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c4_2 )  ) ))) (and (= aux128 1) true)) (and (= aux128 0) false)))
(assert (and (=> (= aux128 0) (= weight128 2)) (=> (= aux128 1) (= weight128 0))))
(assert (and (>= aux129 0) (<= aux129 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_ef0869a7_c2f0_46f6_b446_e20eb09a21f2_Class4 v )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 v ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) (not ( class4_Class4BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  ))) (and (= aux129 1) true)) (and (= aux129 0) false)))
(assert (and (=> (= aux129 0) (= weight129 2)) (=> (= aux129 1) (= weight129 0))))
(assert (and (>= aux130 0) (<= aux130 1)))
(assert (or (or (forall ((v Int)) (=> ( type_a1dc748f_0bc8_4325_9533_bd2b456e6a82_Class50 v )  (< ( class50_Class50IntAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  8))) (and (= aux130 1) true)) (and (= aux130 0) false)))
(assert (and (=> (= aux130 0) (= weight130 5)) (=> (= aux130 1) (= weight130 0))))
(assert (and (>= aux131 0) (<= aux131 1)))
(assert (or (or (forall ((v Int)) (=> ( type_a1dc748f_0bc8_4325_9533_bd2b456e6a82_Class50 v )  ( class50_Class50BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) )) (and (= aux131 1) true)) (and (= aux131 0) false)))
(assert (and (=> (= aux131 0) (= weight131 5)) (=> (= aux131 1) (= weight131 0))))
(assert (and (>= aux132 0) (<= aux132 1)))
(assert (or (or (exists ((c1 Int)) (and ( type_a1dc748f_0bc8_4325_9533_bd2b456e6a82_Class50 c1 )  (= ( class50_Class50IntAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  14))) (and (= aux132 1) true)) (and (= aux132 0) false)))
(assert (and (=> (= aux132 0) (= weight132 5)) (=> (= aux132 1) (= weight132 0))))
(assert (and (>= aux133 0) (<= aux133 1)))
(assert (or (or (forall ((v Int)) (=> ( type_cde548a2_ce14_48cb_b872_a3ab73a5de8e_Class51 v )  (< ( class51_Class51IntAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  9))) (and (= aux133 1) true)) (and (= aux133 0) false)))
(assert (and (=> (= aux133 0) (= weight133 4)) (=> (= aux133 1) (= weight133 0))))
(assert (and (>= aux134 0) (<= aux134 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_cde548a2_ce14_48cb_b872_a3ab73a5de8e_Class51 c1 )  (not (= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  2) ))) (and (= aux134 1) true)) (and (= aux134 0) false)))
(assert (and (=> (= aux134 0) (= weight134 4)) (=> (= aux134 1) (= weight134 0))))
(assert (and (>= aux135 0) (<= aux135 1)))
(assert (or (or (forall ((v Int)) (=> ( type_a0221370_3e06_45e6_ad47_f286eb7ca6a4_Class52 v )  (<= ( class52_Class52IntAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  8))) (and (= aux135 1) true)) (and (= aux135 0) false)))
(assert (and (=> (= aux135 0) (= weight135 22)) (=> (= aux135 1) (= weight135 0))))
(assert (and (>= aux136 0) (<= aux136 1)))
(assert (or (or (forall ((v Int)) (=> ( type_a0221370_3e06_45e6_ad47_f286eb7ca6a4_Class52 v )  ( class52_Class52BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) )) (and (= aux136 1) true)) (and (= aux136 0) false)))
(assert (and (=> (= aux136 0) (= weight136 22)) (=> (= aux136 1) (= weight136 0))))
(assert (and (>= aux137 0) (<= aux137 1)))
(assert (or (or (exists ((c1 Int)) (and ( type_a0221370_3e06_45e6_ad47_f286eb7ca6a4_Class52 c1 )  (not (= ( class52_Class52IntAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  7) ))) (and (= aux137 1) true)) (and (= aux137 0) false)))
(assert (and (=> (= aux137 0) (= weight137 22)) (=> (= aux137 1) (= weight137 0))))
(assert (and (>= aux138 0) (<= aux138 1)))
(assert (or (or (forall ((v Int)) (=> ( type_89f6e583_5bfd_4a26_b152_7b80a00197b2_Class53 v )  (not (= ( class53_Class53IntAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  19) ))) (and (= aux138 1) true)) (and (= aux138 0) false)))
(assert (and (=> (= aux138 0) (= weight138 8)) (=> (= aux138 1) (= weight138 0))))
(assert (and (>= aux139 0) (<= aux139 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_89f6e583_5bfd_4a26_b152_7b80a00197b2_Class53 c1 )  (not ( class53_Class53BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  ))) (and (= aux139 1) true)) (and (= aux139 0) false)))
(assert (and (=> (= aux139 0) (= weight139 8)) (=> (= aux139 1) (= weight139 0))))
(assert (and (>= aux140 0) (<= aux140 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and ( type_b487ca72_cce1_4e42_b5a0_ac6e39cd33be_Class54 v )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) (not (= ( class54_Class54IntAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  11) ))) (and (= aux140 1) true)) (and (= aux140 0) false)))
(assert (and (=> (= aux140 0) (= weight140 9)) (=> (= aux140 1) (= weight140 0))))
(assert (and (>= aux141 0) (<= aux141 1)))
(assert (or (or (exists ((c1 Int)) (and (and (and (and (and (and ( type_b487ca72_cce1_4e42_b5a0_ac6e39cd33be_Class54 c1 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c1 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c1 ) ) (<= ( class54_Class54IntAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  5))) (and (= aux141 1) true)) (and (= aux141 0) false)))
(assert (and (=> (= aux141 0) (= weight141 9)) (=> (= aux141 1) (= weight141 0))))
(assert (and (>= aux142 0) (<= aux142 1)))
(assert (or (or (forall ((v Int)) (=> ( type_f0331523_9461_4232_80d2_0746c6ef381b_Class55 v )  (not (= ( class55_Class55IntAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  3) ))) (and (= aux142 1) true)) (and (= aux142 0) false)))
(assert (and (=> (= aux142 0) (= weight142 3)) (=> (= aux142 1) (= weight142 0))))
(assert (and (>= aux143 0) (<= aux143 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_f0331523_9461_4232_80d2_0746c6ef381b_Class55 c1 )  (<= ( class55_Class55IntAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  12))) (and (= aux143 1) true)) (and (= aux143 0) false)))
(assert (and (=> (= aux143 0) (= weight143 3)) (=> (= aux143 1) (= weight143 0))))
(assert (and (>= aux144 0) (<= aux144 1)))
(assert (or (or (forall ((v Int)) (=> ( type_d8506e19_c26d_4444_84d2_3314cabdd75f_Class56 v )  (> ( class56_Class56IntAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  16))) (and (= aux144 1) true)) (and (= aux144 0) false)))
(assert (and (=> (= aux144 0) (= weight144 4)) (=> (= aux144 1) (= weight144 0))))
(assert (and (>= aux145 0) (<= aux145 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_d8506e19_c26d_4444_84d2_3314cabdd75f_Class56 c1 )  (> ( class56_Class56IntAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  1))) (and (= aux145 1) true)) (and (= aux145 0) false)))
(assert (and (=> (= aux145 0) (= weight145 6)) (=> (= aux145 1) (= weight145 0))))
(assert (and (>= aux146 0) (<= aux146 1)))
(assert (or (or (forall ((c5_2 Int)(c5_1 Int)) (=> (and (and ( type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 c5_1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c5_1 ) ) (and ( type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 c5_2 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c5_2 ) )) (> ( class5_Class5IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c5_1 )  )  ( class5_Class5IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c5_2 )  ) ))) (and (= aux146 1) true)) (and (= aux146 0) false)))
(assert (and (=> (= aux146 0) (= weight146 3)) (=> (= aux146 1) (= weight146 0))))
(assert (and (>= aux147 0) (<= aux147 1)))
(assert (or (or (forall ((c5_2 Int)(c5_1 Int)) (=> (and (and ( type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 c5_1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c5_1 ) ) (and ( type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 c5_2 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c5_2 ) )) (> ( class5_Class5IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c5_1 )  )  ( class5_Class5IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c5_2 )  ) ))) (and (= aux147 1) true)) (and (= aux147 0) false)))
(assert (and (=> (= aux147 0) (= weight147 3)) (=> (= aux147 1) (= weight147 0))))
(assert (and (>= aux148 0) (<= aux148 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) (or (>= ( class5_Class5IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  10) (and (forall ((c5_2 Int)(c5_1 Int)) (=> (and (and ( type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 c5_1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c5_1 ) ) (and ( type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 c5_2 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c5_2 ) )) (< ( class5_Class5IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c5_1 )  )  ( class5_Class5IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c5_2 )  ) ))) (forall ((v Int)) (=> (and ( type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 v )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) (< ( class5_Class5IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  18))))))) (and (= aux148 1) true)) (and (= aux148 0) false)))
(assert (and (=> (= aux148 0) (= weight148 3)) (=> (= aux148 1) (= weight148 0))))
(assert (and (>= aux149 0) (<= aux149 1)))
(assert (or (or (exists ((c1 Int)) (and (and ( type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 c1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) (not (= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  1) ))) (and (= aux149 1) true)) (and (= aux149 0) false)))
(assert (and (=> (= aux149 0) (= weight149 3)) (=> (= aux149 1) (= weight149 0))))
(assert (and (>= aux150 0) (<= aux150 1)))
(assert (or (or (forall ((c1 Int)) (=> (and ( type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 c1 )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) (> ( class5_Class5IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  9))) (and (= aux150 1) true)) (and (= aux150 0) false)))
(assert (and (=> (= aux150 0) (= weight150 3)) (=> (= aux150 1) (= weight150 0))))
(assert (and (>= aux151 0) (<= aux151 1)))
(assert (or (or (forall ((c6_1 Int)(c6_2 Int)) (=> (and (and (and (and (and ( type_f7f499ca_b521_45a2_8ac6_1ce59af748fa_Class6 c6_1 )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 c6_1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c6_1 ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 c6_1 ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c6_1 ) ) (and (and (and (and ( type_f7f499ca_b521_45a2_8ac6_1ce59af748fa_Class6 c6_2 )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 c6_2 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c6_2 ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 c6_2 ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c6_2 ) )) (not (= ( class6_Class6IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c6_1 )  )  ( class6_Class6IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c6_2 )  ) ) ))) (and (= aux151 1) true)) (and (= aux151 0) false)))
(assert (and (=> (= aux151 0) (= weight151 8)) (=> (= aux151 1) (= weight151 0))))
(assert (and (>= aux152 0) (<= aux152 1)))
(assert (or (or (forall ((c6_1 Int)(c6_2 Int)) (=> (and (and (and (and (and ( type_f7f499ca_b521_45a2_8ac6_1ce59af748fa_Class6 c6_1 )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 c6_1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c6_1 ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 c6_1 ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c6_1 ) ) (and (and (and (and ( type_f7f499ca_b521_45a2_8ac6_1ce59af748fa_Class6 c6_2 )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 c6_2 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c6_2 ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 c6_2 ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c6_2 ) )) (= ( class6_Class6IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c6_1 )  )  ( class6_Class6IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c6_2 )  ) ))) (and (= aux152 1) true)) (and (= aux152 0) false)))
(assert (and (=> (= aux152 0) (= weight152 8)) (=> (= aux152 1) (= weight152 0))))
(assert (and (>= aux153 0) (<= aux153 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and ( type_f7f499ca_b521_45a2_8ac6_1ce59af748fa_Class6 v )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 v ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 v ) ) (or (< ( class6_Class6IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  5) (and (forall ((v Int)) (=> (and (and (and (and ( type_f7f499ca_b521_45a2_8ac6_1ce59af748fa_Class6 v )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 v ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 v ) ) ( class6_Class6BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) )) (forall ((v Int)) (=> (and (and (and (and ( type_f7f499ca_b521_45a2_8ac6_1ce59af748fa_Class6 v )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 v ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 v ) ) ( class6_Class6BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) )))))) (and (= aux153 1) true)) (and (= aux153 0) false)))
(assert (and (=> (= aux153 0) (= weight153 10)) (=> (= aux153 1) (= weight153 0))))
(assert (and (>= aux154 0) (<= aux154 1)))
(assert (or (or (forall ((c1 Int)(c2 Int)) (=> (and (and (and (and (and ( type_f7f499ca_b521_45a2_8ac6_1ce59af748fa_Class6 c1 )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 c1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 c1 ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c1 ) ) (and (and (and (and ( type_f7f499ca_b521_45a2_8ac6_1ce59af748fa_Class6 c2 )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 c2 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c2 ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 c2 ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c2 ) )) (forall ((v Int)) (=> (and (and (and (and ( type_f7f499ca_b521_45a2_8ac6_1ce59af748fa_Class6 v )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 v ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 v ) ) (< ( class6_Class6IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  ( class6_Class6IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  ) ))))) (and (= aux154 1) true)) (and (= aux154 0) false)))
(assert (and (=> (= aux154 0) (= weight154 8)) (=> (= aux154 1) (= weight154 0))))
(assert (and (>= aux155 0) (<= aux155 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and (and (and ( type_f7f499ca_b521_45a2_8ac6_1ce59af748fa_Class6 c1 )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 c1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 c1 ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 c1 ) ) (= ( Enum1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  7))) (and (= aux155 1) true)) (and (= aux155 0) false)))
(assert (and (=> (= aux155 0) (= weight155 6)) (=> (= aux155 1) (= weight155 0))))
(assert (and (>= aux156 0) (<= aux156 1)))
(assert (or (or (forall ((c7_2 Int)(c7_1 Int)) (=> (and ( type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 c7_1 )  ( type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 c7_2 ) ) (< ( class7_Class7IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c7_1 )  )  ( class7_Class7IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c7_2 )  ) ))) (and (= aux156 1) true)) (and (= aux156 0) false)))
(assert (and (=> (= aux156 0) (= weight156 2)) (=> (= aux156 1) (= weight156 0))))
(assert (and (>= aux157 0) (<= aux157 1)))
(assert (or (or (forall ((c7_2 Int)(c7_1 Int)) (=> (and ( type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 c7_1 )  ( type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 c7_2 ) ) (<= ( class7_Class7IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c7_1 )  )  ( class7_Class7IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c7_2 )  ) ))) (and (= aux157 1) true)) (and (= aux157 0) false)))
(assert (and (=> (= aux157 0) (= weight157 2)) (=> (= aux157 1) (= weight157 0))))
(assert (and (>= aux158 0) (<= aux158 1)))
(assert (or (or (or (forall ((v Int)) (=> ( type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 v )  ( class7_Class7BoolAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  ) )) (forall ((v Int)) (=> ( type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 v )  (= ( class7_Class7IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  11)))) (and (= aux158 1) true)) (and (= aux158 0) false)))
(assert (and (=> (= aux158 0) (= weight158 2)) (=> (= aux158 1) (= weight158 0))))
(assert (and (>= aux159 0) (<= aux159 1)))
(assert (or (or (forall ((c1 Int)(c2 Int)) (=> (and ( type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 c1 )  ( type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 c2 ) ) (or ( class7_Class7BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  ( class7_Class7BoolAttr1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c2 )  ) ))) (and (= aux159 1) true)) (and (= aux159 0) false)))
(assert (and (=> (= aux159 0) (= weight159 2)) (=> (= aux159 1) (= weight159 0))))
(assert (and (>= aux160 0) (<= aux160 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 c1 )  (not (= ( Enum2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  1) ))) (and (= aux160 1) true)) (and (= aux160 0) false)))
(assert (and (=> (= aux160 0) (= weight160 2)) (=> (= aux160 1) (= weight160 0))))
(assert (and (>= aux161 0) (<= aux161 1)))
(assert (or (or (forall ((c8_2 Int)(c8_1 Int)) (=> (and ( type_c57c575d_b1d9_4470_85c0_2b014913ab1d_Class8 c8_1 )  ( type_c57c575d_b1d9_4470_85c0_2b014913ab1d_Class8 c8_2 ) ) (<= ( class8_Class8IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c8_1 )  )  ( class8_Class8IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c8_2 )  ) ))) (and (= aux161 1) true)) (and (= aux161 0) false)))
(assert (and (=> (= aux161 0) (= weight161 1)) (=> (= aux161 1) (= weight161 0))))
(assert (and (>= aux162 0) (<= aux162 1)))
(assert (or (or (forall ((c8_2 Int)(c8_1 Int)) (=> (and ( type_c57c575d_b1d9_4470_85c0_2b014913ab1d_Class8 c8_1 )  ( type_c57c575d_b1d9_4470_85c0_2b014913ab1d_Class8 c8_2 ) ) (> ( class8_Class8IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c8_1 )  )  ( class8_Class8IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c8_2 )  ) ))) (and (= aux162 1) true)) (and (= aux162 0) false)))
(assert (and (=> (= aux162 0) (= weight162 1)) (=> (= aux162 1) (= weight162 0))))
(assert (and (>= aux163 0) (<= aux163 1)))
(assert (or (or (or (forall ((v Int)) (=> ( type_c57c575d_b1d9_4470_85c0_2b014913ab1d_Class8 v )  (<= ( class8_Class8IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  11))) (forall ((v Int)) (=> ( type_c57c575d_b1d9_4470_85c0_2b014913ab1d_Class8 v )  (<= ( class8_Class8IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  0)))) (and (= aux163 1) true)) (and (= aux163 0) false)))
(assert (and (=> (= aux163 0) (= weight163 1)) (=> (= aux163 1) (= weight163 0))))
(assert (and (>= aux164 0) (<= aux164 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and ( type_c57c575d_b1d9_4470_85c0_2b014913ab1d_Class8 c1 )  ( type_c57c575d_b1d9_4470_85c0_2b014913ab1d_Class8 c2 ) ) (or ( class8_Class8BoolAttr0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  ( class8_Class8BoolAttr2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c2 )  ) ))) (and (= aux164 1) true)) (and (= aux164 0) false)))
(assert (and (=> (= aux164 0) (= weight164 1)) (=> (= aux164 1) (= weight164 0))))
(assert (and (>= aux165 0) (<= aux165 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and ( type_c57c575d_b1d9_4470_85c0_2b014913ab1d_Class8 c1 )  ( type_c57c575d_b1d9_4470_85c0_2b014913ab1d_Class8 c2 ) ) (forall ((v Int)) (=> ( type_c57c575d_b1d9_4470_85c0_2b014913ab1d_Class8 v )  (> ( class8_Class8IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  ( class8_Class8IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  ) ))))) (and (= aux165 1) true)) (and (= aux165 0) false)))
(assert (and (=> (= aux165 0) (= weight165 1)) (=> (= aux165 1) (= weight165 0))))
(assert (and (>= aux166 0) (<= aux166 1)))
(assert (or (or (forall ((c9_2 Int)(c9_1 Int)) (=> (and (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 c9_1 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c9_1 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c9_1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c9_1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c9_1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c9_1 ) ) (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 c9_2 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c9_2 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c9_2 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c9_2 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c9_2 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c9_2 ) )) (= ( class9_Class9IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c9_1 )  )  ( class9_Class9IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c9_2 )  ) ))) (and (= aux166 1) true)) (and (= aux166 0) false)))
(assert (and (=> (= aux166 0) (= weight166 3)) (=> (= aux166 1) (= weight166 0))))
(assert (and (>= aux167 0) (<= aux167 1)))
(assert (or (or (forall ((c9_2 Int)(c9_1 Int)) (=> (and (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 c9_1 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c9_1 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c9_1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c9_1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c9_1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c9_1 ) ) (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 c9_2 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c9_2 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c9_2 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c9_2 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c9_2 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c9_2 ) )) (not (= ( class9_Class9IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c9_1 )  )  ( class9_Class9IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c9_2 )  ) ) ))) (and (= aux167 1) true)) (and (= aux167 0) false)))
(assert (and (=> (= aux167 0) (= weight167 3)) (=> (= aux167 1) (= weight167 0))))
(assert (and (>= aux168 0) (<= aux168 1)))
(assert (or (or (or (forall ((v Int)) (=> (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 v )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) (not (= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  2) ))) (forall ((v Int)) (=> (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 v )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) (<= ( class9_Class9IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  6)))) (and (= aux168 1) true)) (and (= aux168 0) false)))
(assert (and (=> (= aux168 0) (= weight168 3)) (=> (= aux168 1) (= weight168 0))))
(assert (and (>= aux169 0) (<= aux169 1)))
(assert (or (or (exists ((c1 Int)) (and (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 c1 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c1 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c1 ) ) (= ( Enum0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  )  1))) (and (= aux169 1) true)) (and (= aux169 0) false)))
(assert (and (=> (= aux169 0) (= weight169 3)) (=> (= aux169 1) (= weight169 0))))
(assert (and (>= aux170 0) (<= aux170 1)))
(assert (or (or (forall ((c1 Int)(c2 Int)) (=> (and (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 c1 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c1 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c1 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c1 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c1 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c1 ) ) (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 c2 )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 c2 ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 c2 ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 c2 ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 c2 ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 c2 ) )) (forall ((v Int)) (=> (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 v )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 v ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 v ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 v ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 v ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 v ) ) (> ( class9_Class9IntAttr4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 v )  )  ( class9_Class9IntAttr3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 c1 )  ) ))))) (and (= aux170 1) true)) (and (= aux170 0) false)))
(assert (and (=> (= aux170 0) (= weight170 3)) (=> (= aux170 1) (= weight170 0))))
(assert (and (>= aux171 0) (<= aux171 1)))
(assert (and (>= aux172 0) (<= aux172 1)))
(assert (and (>= aux173 0) (<= aux173 1)))
(assert (and (>= aux174 0) (<= aux174 1)))
(assert (and (>= aux175 0) (<= aux175 1)))
(assert (and (>= aux176 0) (<= aux176 1)))
(assert (and (>= aux177 0) (<= aux177 1)))
(assert (and (>= aux178 0) (<= aux178 1)))
(assert (and (>= aux179 0) (<= aux179 1)))
(assert (and (>= aux180 0) (<= aux180 1)))
(assert (and (>= aux181 0) (<= aux181 1)))
(assert (and (>= aux182 0) (<= aux182 1)))
(assert (and (>= aux183 0) (<= aux183 1)))
(assert (and (>= aux184 0) (<= aux184 1)))
(assert (and (>= aux185 0) (<= aux185 1)))
(assert (and (>= aux186 0) (<= aux186 1)))
(assert (and (>= aux187 0) (<= aux187 1)))
(assert (and (>= aux188 0) (<= aux188 1)))
(assert (and (>= aux189 0) (<= aux189 1)))
(assert (and (>= aux190 0) (<= aux190 1)))
(assert (and (>= aux191 0) (<= aux191 1)))
(assert (and (>= aux192 0) (<= aux192 1)))
(assert (and (>= aux193 0) (<= aux193 1)))
(assert (and (>= aux194 0) (<= aux194 1)))
(assert (and (>= aux195 0) (<= aux195 1)))
(assert (and (>= aux196 0) (<= aux196 1)))
(assert (and (>= aux197 0) (<= aux197 1)))
(assert (and (>= aux198 0) (<= aux198 1)))
(assert (and (>= aux199 0) (<= aux199 1)))
(assert (and (>= aux200 0) (<= aux200 1)))
(assert (and (>= aux201 0) (<= aux201 1)))
(assert (and (>= aux202 0) (<= aux202 1)))
(assert (and (>= aux203 0) (<= aux203 1)))
(assert (and (>= aux204 0) (<= aux204 1)))
(assert (and (>= aux205 0) (<= aux205 1)))
(assert (and (>= aux206 0) (<= aux206 1)))
(assert (and (>= aux207 0) (<= aux207 1)))
(assert (and (>= aux208 0) (<= aux208 1)))
(assert (and (>= aux209 0) (<= aux209 1)))
(assert (and (>= aux210 0) (<= aux210 1)))
(assert (and (>= aux211 0) (<= aux211 1)))
(assert (and (>= aux212 0) (<= aux212 1)))
(assert (and (>= aux213 0) (<= aux213 1)))
(assert (and (>= aux214 0) (<= aux214 1)))
(assert (and (>= aux215 0) (<= aux215 1)))
(assert (and (>= aux216 0) (<= aux216 1)))
(assert (and (>= aux217 0) (<= aux217 1)))
(assert (and (>= aux218 0) (<= aux218 1)))
(assert (and (>= aux219 0) (<= aux219 1)))
(assert (and (>= aux220 0) (<= aux220 1)))
(assert (and (>= aux221 0) (<= aux221 1)))
(assert (and (>= aux222 0) (<= aux222 1)))
(assert (and (>= aux223 0) (<= aux223 1)))
(assert (and (>= aux224 0) (<= aux224 1)))
(assert (and (>= aux225 0) (<= aux225 1)))
(assert (and (>= aux226 0) (<= aux226 1)))
(assert (and (>= aux227 0) (<= aux227 1)))
(assert (or (or (exists ((p Int)) (and (and (and (and (and (and ( type_586f09b1_e4a9_4440_8972_322226f6f87a_Class0 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux171 1) true)) (and (= aux171 0) false)))
(assert (and (=> (= aux171 0) (= weight171 1)) (=> (= aux171 1) (= weight171 0))))
(assert (or (or (exists ((p Int)) ( type_2ea2084f_4b09_4467_a2f4_39aa485c2be4_Class1 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux172 1) true)) (and (= aux172 0) false)))
(assert (and (=> (= aux172 0) (= weight172 6)) (=> (= aux172 1) (= weight172 0))))
(assert (or (or (exists ((p Int)) (and (and ( type_c654f49b_5c28_4662_b070_99ead3d43d09_Class10 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux173 1) true)) (and (= aux173 0) false)))
(assert (and (=> (= aux173 0) (= weight173 4)) (=> (= aux173 1) (= weight173 0))))
(assert (or (or (exists ((p Int)) ( type_69dda496_d763_45ba_9fbc_667f0b149b10_Class11 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux174 1) true)) (and (= aux174 0) false)))
(assert (and (=> (= aux174 0) (= weight174 5)) (=> (= aux174 1) (= weight174 0))))
(assert (or (or (exists ((p Int)) (and (and ( type_199aee0d_b81f_40b9_aa2c_70c6c5f327fc_Class12 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_e9cedb47_b613_47fd_8556_ef0d6561eaca_Class33 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux175 1) true)) (and (= aux175 0) false)))
(assert (and (=> (= aux175 0) (= weight175 3)) (=> (= aux175 1) (= weight175 0))))
(assert (or (or (exists ((p Int)) ( type_d8580d4f_44b3_4b86_8195_f9cbee9d3f86_Class13 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux176 1) true)) (and (= aux176 0) false)))
(assert (and (=> (= aux176 0) (= weight176 2)) (=> (= aux176 1) (= weight176 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and (and ( type_2066b13c_6f06_4cf7_a582_75c5e7d18e4e_Class14 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux177 1) true)) (and (= aux177 0) false)))
(assert (and (=> (= aux177 0) (= weight177 2)) (=> (= aux177 1) (= weight177 0))))
(assert (or (or (exists ((p Int)) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux178 1) true)) (and (= aux178 0) false)))
(assert (and (=> (= aux178 0) (= weight178 1)) (=> (= aux178 1) (= weight178 0))))
(assert (or (or (exists ((p Int)) ( type_c0d5d719_335c_4577_b2c2_17584e1d28bb_Class16 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux179 1) true)) (and (= aux179 0) false)))
(assert (and (=> (= aux179 0) (= weight179 6)) (=> (= aux179 1) (= weight179 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and (and ( type_d5557194_f1a2_4e7a_9d7d_7ecf3d1e4a38_Class17 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux180 1) true)) (and (= aux180 0) false)))
(assert (and (=> (= aux180 0) (= weight180 2)) (=> (= aux180 1) (= weight180 0))))
(assert (or (or (exists ((p Int)) ( type_bae101c4_dfc3_4da6_bf65_1e45b1c5a983_Class18 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux181 1) true)) (and (= aux181 0) false)))
(assert (and (=> (= aux181 0) (= weight181 1)) (=> (= aux181 1) (= weight181 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and (and ( type_99a97488_f640_45ac_8054_359f3ed84325_Class19 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux182 1) true)) (and (= aux182 0) false)))
(assert (and (=> (= aux182 0) (= weight182 27)) (=> (= aux182 1) (= weight182 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and (and ( type_f470501d_f523_47bc_9ceb_876844a70065_Class2 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_b487ca72_cce1_4e42_b5a0_ac6e39cd33be_Class54 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux183 1) true)) (and (= aux183 0) false)))
(assert (and (=> (= aux183 0) (= weight183 3)) (=> (= aux183 1) (= weight183 0))))
(assert (or (or (exists ((p Int)) (and ( type_ca6bb482_b8f1_4dfa_9371_2528e1a78785_Class20 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux184 1) true)) (and (= aux184 0) false)))
(assert (and (=> (= aux184 0) (= weight184 2)) (=> (= aux184 1) (= weight184 0))))
(assert (or (or (exists ((p Int)) (and ( type_2cc435fa_9d2f_4fa2_b19f_d989dbd40470_Class21 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux185 1) true)) (and (= aux185 0) false)))
(assert (and (=> (= aux185 0) (= weight185 3)) (=> (= aux185 1) (= weight185 0))))
(assert (or (or (exists ((p Int)) (and (and (and ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux186 1) true)) (and (= aux186 0) false)))
(assert (and (=> (= aux186 0) (= weight186 4)) (=> (= aux186 1) (= weight186 0))))
(assert (or (or (exists ((p Int)) ( type_17e19828_4b82_4208_892f_70ef1e79ed6d_Class23 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux187 1) true)) (and (= aux187 0) false)))
(assert (and (=> (= aux187 0) (= weight187 5)) (=> (= aux187 1) (= weight187 0))))
(assert (or (or (exists ((p Int)) ( type_8c03a4ad_4dc1_452e_88a3_282533302669_Class24 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux188 1) true)) (and (= aux188 0) false)))
(assert (and (=> (= aux188 0) (= weight188 2)) (=> (= aux188 1) (= weight188 0))))
(assert (or (or (exists ((p Int)) (and (and (and ( type_d76be500_c00a_467c_b524_ecd896d509db_Class25 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_199aee0d_b81f_40b9_aa2c_70c6c5f327fc_Class12 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_e9cedb47_b613_47fd_8556_ef0d6561eaca_Class33 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux189 1) true)) (and (= aux189 0) false)))
(assert (and (=> (= aux189 0) (= weight189 1)) (=> (= aux189 1) (= weight189 0))))
(assert (or (or (exists ((p Int)) ( type_085c21cf_5c26_4ee2_b213_395bc6cef7f3_Class26 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux190 1) true)) (and (= aux190 0) false)))
(assert (and (=> (= aux190 0) (= weight190 11)) (=> (= aux190 1) (= weight190 0))))
(assert (or (or (exists ((p Int)) (and ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux191 1) true)) (and (= aux191 0) false)))
(assert (and (=> (= aux191 0) (= weight191 12)) (=> (= aux191 1) (= weight191 0))))
(assert (or (or (exists ((p Int)) (and (and ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux192 1) true)) (and (= aux192 0) false)))
(assert (and (=> (= aux192 0) (= weight192 8)) (=> (= aux192 1) (= weight192 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and ( type_8d2fee4e_d9d4_46dd_b9cd_e57e07fc0f04_Class29 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux193 1) true)) (and (= aux193 0) false)))
(assert (and (=> (= aux193 0) (= weight193 6)) (=> (= aux193 1) (= weight193 0))))
(assert (or (or (exists ((p Int)) ( type_9bf6cfa1_28e0_41b2_b84c_e5e1a84a0db2_Class3 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux194 1) true)) (and (= aux194 0) false)))
(assert (and (=> (= aux194 0) (= weight194 4)) (=> (= aux194 1) (= weight194 0))))
(assert (or (or (exists ((p Int)) (and (and ( type_e18e8621_73ee_4763_9bc6_999e1519aae2_Class30 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_e9cedb47_b613_47fd_8556_ef0d6561eaca_Class33 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux195 1) true)) (and (= aux195 0) false)))
(assert (and (=> (= aux195 0) (= weight195 4)) (=> (= aux195 1) (= weight195 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and (and ( type_f2782312_f137_43ff_aa37_e35f03a3f4de_Class31 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_b487ca72_cce1_4e42_b5a0_ac6e39cd33be_Class54 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux196 1) true)) (and (= aux196 0) false)))
(assert (and (=> (= aux196 0) (= weight196 2)) (=> (= aux196 1) (= weight196 0))))
(assert (or (or (exists ((p Int)) ( type_09b1475a_2f34_4090_a83a_fa39e7fe2455_Class32 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux197 1) true)) (and (= aux197 0) false)))
(assert (and (=> (= aux197 0) (= weight197 1)) (=> (= aux197 1) (= weight197 0))))
(assert (or (or (exists ((p Int)) (and ( type_e9cedb47_b613_47fd_8556_ef0d6561eaca_Class33 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux198 1) true)) (and (= aux198 0) false)))
(assert (and (=> (= aux198 0) (= weight198 7)) (=> (= aux198 1) (= weight198 0))))
(assert (or (or (exists ((p Int)) ( type_81e45b6c_0f30_4734_9277_19a505a78571_Class34 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux199 1) true)) (and (= aux199 0) false)))
(assert (and (=> (= aux199 0) (= weight199 1)) (=> (= aux199 1) (= weight199 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux200 1) true)) (and (= aux200 0) false)))
(assert (and (=> (= aux200 0) (= weight200 2)) (=> (= aux200 1) (= weight200 0))))
(assert (or (or (exists ((p Int)) (and (and (and ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux201 1) true)) (and (= aux201 0) false)))
(assert (and (=> (= aux201 0) (= weight201 3)) (=> (= aux201 1) (= weight201 0))))
(assert (or (or (exists ((p Int)) (and ( type_dd7f8304_856a_40e9_affb_4f7e3669961e_Class37 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux202 1) true)) (and (= aux202 0) false)))
(assert (and (=> (= aux202 0) (= weight202 11)) (=> (= aux202 1) (= weight202 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and ( type_19cf6536_54d7_4161_aee0_814462a77144_Class38 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux203 1) true)) (and (= aux203 0) false)))
(assert (and (=> (= aux203 0) (= weight203 2)) (=> (= aux203 1) (= weight203 0))))
(assert (or (or (exists ((p Int)) ( type_79243f18_e1eb_44bf_a068_99e2f0f79055_Class39 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux204 1) true)) (and (= aux204 0) false)))
(assert (and (=> (= aux204 0) (= weight204 3)) (=> (= aux204 1) (= weight204 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and (and ( type_ef0869a7_c2f0_46f6_b446_e20eb09a21f2_Class4 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux205 1) true)) (and (= aux205 0) false)))
(assert (and (=> (= aux205 0) (= weight205 2)) (=> (= aux205 1) (= weight205 0))))
(assert (or (or (exists ((p Int)) ( type_83a48113_7855_4ed1_8d9b_d354aa3c8f71_Class40 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux206 1) true)) (and (= aux206 0) false)))
(assert (and (=> (= aux206 0) (= weight206 1)) (=> (= aux206 1) (= weight206 0))))
(assert (or (or (exists ((p Int)) ( type_06d25d7d_dd51_47e7_b0e5_9debb6fb037a_Class41 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux207 1) true)) (and (= aux207 0) false)))
(assert (and (=> (= aux207 0) (= weight207 2)) (=> (= aux207 1) (= weight207 0))))
(assert (or (or (exists ((p Int)) ( type_c65c46be_3558_43b5_94ec_6b0287a5326f_Class42 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux208 1) true)) (and (= aux208 0) false)))
(assert (and (=> (= aux208 0) (= weight208 3)) (=> (= aux208 1) (= weight208 0))))
(assert (or (or (exists ((p Int)) (and ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux209 1) true)) (and (= aux209 0) false)))
(assert (and (=> (= aux209 0) (= weight209 4)) (=> (= aux209 1) (= weight209 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and ( type_2cbfc683_d8c6_4eef_a4a9_90acf557def6_Class44 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux210 1) true)) (and (= aux210 0) false)))
(assert (and (=> (= aux210 0) (= weight210 5)) (=> (= aux210 1) (= weight210 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and (and ( type_3656814c_ce5b_4edc_8252_b0aac894cc02_Class45 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux211 1) true)) (and (= aux211 0) false)))
(assert (and (=> (= aux211 0) (= weight211 1)) (=> (= aux211 1) (= weight211 0))))
(assert (or (or (exists ((p Int)) (and (and ( type_3d2d6bde_2b0d_4919_ab0d_2850b4a6a2ce_Class46 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux212 1) true)) (and (= aux212 0) false)))
(assert (and (=> (= aux212 0) (= weight212 6)) (=> (= aux212 1) (= weight212 0))))
(assert (or (or (exists ((p Int)) ( type_f6d46d72_d840_4943_8c3f_a60cd53b61ce_Class47 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux213 1) true)) (and (= aux213 0) false)))
(assert (and (=> (= aux213 0) (= weight213 2)) (=> (= aux213 1) (= weight213 0))))
(assert (or (or (exists ((p Int)) (and ( type_56e26645_2781_43c8_9657_65138723519d_Class48 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux214 1) true)) (and (= aux214 0) false)))
(assert (and (=> (= aux214 0) (= weight214 3)) (=> (= aux214 1) (= weight214 0))))
(assert (or (or (exists ((p Int)) ( type_a359a594_1de4_424e_be85_5e1318b33a72_Class49 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux215 1) true)) (and (= aux215 0) false)))
(assert (and (=> (= aux215 0) (= weight215 7)) (=> (= aux215 1) (= weight215 0))))
(assert (or (or (exists ((p Int)) (and ( type_02464298_a320_4bfe_9b75_412cf5975aa3_Class5 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux216 1) true)) (and (= aux216 0) false)))
(assert (and (=> (= aux216 0) (= weight216 2)) (=> (= aux216 1) (= weight216 0))))
(assert (or (or (exists ((p Int)) ( type_a1dc748f_0bc8_4325_9533_bd2b456e6a82_Class50 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux217 1) true)) (and (= aux217 0) false)))
(assert (and (=> (= aux217 0) (= weight217 8)) (=> (= aux217 1) (= weight217 0))))
(assert (or (or (exists ((p Int)) ( type_cde548a2_ce14_48cb_b872_a3ab73a5de8e_Class51 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux218 1) true)) (and (= aux218 0) false)))
(assert (and (=> (= aux218 0) (= weight218 9)) (=> (= aux218 1) (= weight218 0))))
(assert (or (or (exists ((p Int)) ( type_a0221370_3e06_45e6_ad47_f286eb7ca6a4_Class52 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux219 1) true)) (and (= aux219 0) false)))
(assert (and (=> (= aux219 0) (= weight219 11)) (=> (= aux219 1) (= weight219 0))))
(assert (or (or (exists ((p Int)) ( type_89f6e583_5bfd_4a26_b152_7b80a00197b2_Class53 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux220 1) true)) (and (= aux220 0) false)))
(assert (and (=> (= aux220 0) (= weight220 12)) (=> (= aux220 1) (= weight220 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and ( type_b487ca72_cce1_4e42_b5a0_ac6e39cd33be_Class54 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux221 1) true)) (and (= aux221 0) false)))
(assert (and (=> (= aux221 0) (= weight221 4)) (=> (= aux221 1) (= weight221 0))))
(assert (or (or (exists ((p Int)) ( type_f0331523_9461_4232_80d2_0746c6ef381b_Class55 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux222 1) true)) (and (= aux222 0) false)))
(assert (and (=> (= aux222 0) (= weight222 5)) (=> (= aux222 1) (= weight222 0))))
(assert (or (or (exists ((p Int)) ( type_d8506e19_c26d_4444_84d2_3314cabdd75f_Class56 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux223 1) true)) (and (= aux223 0) false)))
(assert (and (=> (= aux223 0) (= weight223 1)) (=> (= aux223 1) (= weight223 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and ( type_f7f499ca_b521_45a2_8ac6_1ce59af748fa_Class6 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_b737a457_cafe_488f_8a24_293a483068df_Class22 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_56e26645_2781_43c8_9657_65138723519d_Class48 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_20ebbbbc_bf1d_469c_9885_210cd022dca8_Class43 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux224 1) true)) (and (= aux224 0) false)))
(assert (and (=> (= aux224 0) (= weight224 4)) (=> (= aux224 1) (= weight224 0))))
(assert (or (or (exists ((p Int)) ( type_137df4b0_086b_44ee_931f_c69ce11db43e_Class7 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux225 1) true)) (and (= aux225 0) false)))
(assert (and (=> (= aux225 0) (= weight225 5)) (=> (= aux225 1) (= weight225 0))))
(assert (or (or (exists ((p Int)) ( type_c57c575d_b1d9_4470_85c0_2b014913ab1d_Class8 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) (and (= aux226 1) true)) (and (= aux226 0) false)))
(assert (and (=> (= aux226 0) (= weight226 6)) (=> (= aux226 1) (= weight226 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and ( type_ead1e4f5_b1c3_49cc_a62f_c5233fcdffb3_Class9 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  )  ( type_eec4fd50_5917_4db0_a6b9_989b1894567d_Class36 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_fb4b2999_7012_47af_873f_d661ef8a28b8_Class35 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_b4e6e5fc_bcf0_438a_b5e2_146a103c3ef3_Class27 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_87806798_ab75_40cc_a0b4_887681681364_Class15 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) ) ( type_78e4a3dc_3857_492b_8451_3cd55171a476_Class28 ( obj_63982161_f773_4155_88a1_c5edf64ac2d6 p )  ) )) (and (= aux227 1) true)) (and (= aux227 0) false)))
(assert (and (=> (= aux227 0) (= weight227 2)) (=> (= aux227 1) (= weight227 0))))
(assertweight0 weight1) weight2) weight3) weight4) weight5) weight6) weight7) weight8) weight9) weight10) weight11) weight12) weight13) weight14) weight15) weight16) weight17) weight18) weight19) weight20) weight21) weight22) weight23) weight24) weight25) weight26) weight27) weight28) weight29) weight30) weight31) weight32) weight33) weight34) weight35) weight36) weight37) weight38) weight39) weight40) weight41) weight42) weight43) weight44) weight45) weight46) weight47) weight48) weight49) weight50) weight51) weight52) weight53) weight54) weight55) weight56) weight57) weight58) weight59) weight60) weight61) weight62) weight63) weight64) weight65) weight66) weight67) weight68) weight69) weight70) weight71) weight72) weight73) weight74) weight75) weight76) weight77) weight78) weight79) weight80) weight81) weight82) weight83) weight84) weight85) weight86) weight87) weight88) weight89) weight90) weight91) weight92) weight93) weight94) weight95) weight96) weight97) weight98) weight99) weight100) weight101) weight102) weight103) weight104) weight105) weight106) weight107) weight108) weight109) weight110) weight111) weight112) weight113) weight114) weight115) weight116) weight117) weight118) weight119) weight120) weight121) weight122) weight123) weight124) weight125) weight126) weight127) weight128) weight129) weight130) weight131) weight132) weight133) weight134) weight135) weight136) weight137) weight138) weight139) weight140) weight141) weight142) weight143) weight144) weight145) weight146) weight147) weight148) weight149) weight150) weight151) weight152) weight153) weight154) weight155) weight156) weight157) weight158) weight159) weight160) weight161) weight162) weight163) weight164) weight165) weight166) weight167) weight168) weight169) weight170) weight171) weight172) weight173) weight174) weight175) weight176) weight177) weight178) weight179) weight180) weight181) weight182) weight183) weight184) weight185) weight186) weight187) weight188) weight189) weight190) weight191) weight192) weight193) weight194) weight195) weight196) weight197) weight198) weight199) weight200) weight201) weight202) weight203) weight204) weight205) weight206) weight207) weight208) weight209) weight210) weight211) weight212) weight213) weight214) weight215) weight216) weight217) weight218) weight219) weight220) weight221) weight222) weight223) weight224) weight225) weight226) weight227) 522))

(assertweight0 weight1) weight2) weight3) weight4) weight5) weight6) weight7) weight8) weight9) weight10) weight11) weight12) weight13) weight14) weight15) weight16) weight17) weight18) weight19) weight20) weight21) weight22) weight23) weight24) weight25) weight26) weight27) weight28) weight29) weight30) weight31) weight32) weight33) weight34) weight35) weight36) weight37) weight38) weight39) weight40) weight41) weight42) weight43) weight44) weight45) weight46) weight47) weight48) weight49) weight50) weight51) weight52) weight53) weight54) weight55) weight56) weight57) weight58) weight59) weight60) weight61) weight62) weight63) weight64) weight65) weight66) weight67) weight68) weight69) weight70) weight71) weight72) weight73) weight74) weight75) weight76) weight77) weight78) weight79) weight80) weight81) weight82) weight83) weight84) weight85) weight86) weight87) weight88) weight89) weight90) weight91) weight92) weight93) weight94) weight95) weight96) weight97) weight98) weight99) weight100) weight101) weight102) weight103) weight104) weight105) weight106) weight107) weight108) weight109) weight110) weight111) weight112) weight113) weight114) weight115) weight116) weight117) weight118) weight119) weight120) weight121) weight122) weight123) weight124) weight125) weight126) weight127) weight128) weight129) weight130) weight131) weight132) weight133) weight134) weight135) weight136) weight137) weight138) weight139) weight140) weight141) weight142) weight143) weight144) weight145) weight146) weight147) weight148) weight149) weight150) weight151) weight152) weight153) weight154) weight155) weight156) weight157) weight158) weight159) weight160) weight161) weight162) weight163) weight164) weight165) weight166) weight167) weight168) weight169) weight170) weight171) weight172) weight173) weight174) weight175) weight176) weight177) weight178) weight179) weight180) weight181) weight182) weight183) weight184) weight185) weight186) weight187) weight188) weight189) weight190) weight191) weight192) weight193) weight194) weight195) weight196) weight197) weight198) weight199) weight200) weight201) weight202) weight203) weight204) weight205) weight206) weight207) weight208) weight209) weight210) weight211) weight212) weight213) weight214) weight215) weight216) weight217) weight218) weight219) weight220) weight221) weight222) weight223) weight224) weight225) weight226) weight227) 522))

(assert (> (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ weight0 weight1) weight2) weight3) weight4) weight5) weight6) weight7) weight8) weight9) weight10) weight11) weight12) weight13) weight14) weight15) weight16) weight17) weight18) weight19) weight20) weight21) weight22) weight23) weight24) weight25) weight26) weight27) weight28) weight29) weight30) weight31) weight32) weight33) weight34) weight35) weight36) weight37) weight38) weight39) weight40) weight41) weight42) weight43) weight44) weight45) weight46) weight47) weight48) weight49) weight50) weight51) weight52) weight53) weight54) weight55) weight56) weight57) weight58) weight59) weight60) weight61) weight62) weight63) weight64) weight65) weight66) weight67) weight68) weight69) weight70) weight71) weight72) weight73) weight74) weight75) weight76) weight77) weight78) weight79) weight80) weight81) weight82) weight83) weight84) weight85) weight86) weight87) weight88) weight89) weight90) weight91) weight92) weight93) weight94) weight95) weight96) weight97) weight98) weight99) weight100) weight101) weight102) weight103) weight104) weight105) weight106) weight107) weight108) weight109) weight110) weight111) weight112) weight113) weight114) weight115) weight116) weight117) weight118) weight119) weight120) weight121) weight122) weight123) weight124) weight125) weight126) weight127) weight128) weight129) weight130) weight131) weight132) weight133) weight134) weight135) weight136) weight137) weight138) weight139) weight140) weight141) weight142) weight143) weight144) weight145) weight146) weight147) weight148) weight149) weight150) weight151) weight152) weight153) weight154) weight155) weight156) weight157) weight158) weight159) weight160) weight161) weight162) weight163) weight164) weight165) weight166) weight167) weight168) weight169) weight170) weight171) weight172) weight173) weight174) weight175) weight176) weight177) weight178) weight179) weight180) weight181) weight182) weight183) weight184) weight185) weight186) weight187) weight188) weight189) weight190) weight191) weight192) weight193) weight194) weight195) weight196) weight197) weight198) weight199) weight200) weight201) weight202) weight203) weight204) weight205) weight206) weight207) weight208) weight209) weight210) weight211) weight212) weight213) weight214) weight215) weight216) weight217) weight218) weight219) weight220) weight221) weight222) weight223) weight224) weight225) weight226) weight227) 522))

(assertweight0 weight1) weight2) weight3) weight4) weight5) weight6) weight7) weight8) weight9) weight10) weight11) weight12) weight13) weight14) weight15) weight16) weight17) weight18) weight19) weight20) weight21) weight22) weight23) weight24) weight25) weight26) weight27) weight28) weight29) weight30) weight31) weight32) weight33) weight34) weight35) weight36) weight37) weight38) weight39) weight40) weight41) weight42) weight43) weight44) weight45) weight46) weight47) weight48) weight49) weight50) weight51) weight52) weight53) weight54) weight55) weight56) weight57) weight58) weight59) weight60) weight61) weight62) weight63) weight64) weight65) weight66) weight67) weight68) weight69) weight70) weight71) weight72) weight73) weight74) weight75) weight76) weight77) weight78) weight79) weight80) weight81) weight82) weight83) weight84) weight85) weight86) weight87) weight88) weight89) weight90) weight91) weight92) weight93) weight94) weight95) weight96) weight97) weight98) weight99) weight100) weight101) weight102) weight103) weight104) weight105) weight106) weight107) weight108) weight109) weight110) weight111) weight112) weight113) weight114) weight115) weight116) weight117) weight118) weight119) weight120) weight121) weight122) weight123) weight124) weight125) weight126) weight127) weight128) weight129) weight130) weight131) weight132) weight133) weight134) weight135) weight136) weight137) weight138) weight139) weight140) weight141) weight142) weight143) weight144) weight145) weight146) weight147) weight148) weight149) weight150) weight151) weight152) weight153) weight154) weight155) weight156) weight157) weight158) weight159) weight160) weight161) weight162) weight163) weight164) weight165) weight166) weight167) weight168) weight169) weight170) weight171) weight172) weight173) weight174) weight175) weight176) weight177) weight178) weight179) weight180) weight181) weight182) weight183) weight184) weight185) weight186) weight187) weight188) weight189) weight190) weight191) weight192) weight193) weight194) weight195) weight196) weight197) weight198) weight199) weight200) weight201) weight202) weight203) weight204) weight205) weight206) weight207) weight208) weight209) weight210) weight211) weight212) weight213) weight214) weight215) weight216) weight217) weight218) weight219) weight220) weight221) weight222) weight223) weight224) weight225) weight226) weight227) 784))

(assertweight0 weight1) weight2) weight3) weight4) weight5) weight6) weight7) weight8) weight9) weight10) weight11) weight12) weight13) weight14) weight15) weight16) weight17) weight18) weight19) weight20) weight21) weight22) weight23) weight24) weight25) weight26) weight27) weight28) weight29) weight30) weight31) weight32) weight33) weight34) weight35) weight36) weight37) weight38) weight39) weight40) weight41) weight42) weight43) weight44) weight45) weight46) weight47) weight48) weight49) weight50) weight51) weight52) weight53) weight54) weight55) weight56) weight57) weight58) weight59) weight60) weight61) weight62) weight63) weight64) weight65) weight66) weight67) weight68) weight69) weight70) weight71) weight72) weight73) weight74) weight75) weight76) weight77) weight78) weight79) weight80) weight81) weight82) weight83) weight84) weight85) weight86) weight87) weight88) weight89) weight90) weight91) weight92) weight93) weight94) weight95) weight96) weight97) weight98) weight99) weight100) weight101) weight102) weight103) weight104) weight105) weight106) weight107) weight108) weight109) weight110) weight111) weight112) weight113) weight114) weight115) weight116) weight117) weight118) weight119) weight120) weight121) weight122) weight123) weight124) weight125) weight126) weight127) weight128) weight129) weight130) weight131) weight132) weight133) weight134) weight135) weight136) weight137) weight138) weight139) weight140) weight141) weight142) weight143) weight144) weight145) weight146) weight147) weight148) weight149) weight150) weight151) weight152) weight153) weight154) weight155) weight156) weight157) weight158) weight159) weight160) weight161) weight162) weight163) weight164) weight165) weight166) weight167) weight168) weight169) weight170) weight171) weight172) weight173) weight174) weight175) weight176) weight177) weight178) weight179) weight180) weight181) weight182) weight183) weight184) weight185) weight186) weight187) weight188) weight189) weight190) weight191) weight192) weight193) weight194) weight195) weight196) weight197) weight198) weight199) weight200) weight201) weight202) weight203) weight204) weight205) weight206) weight207) weight208) weight209) weight210) weight211) weight212) weight213) weight214) weight215) weight216) weight217) weight218) weight219) weight220) weight221) weight222) weight223) weight224) weight225) weight226) weight227) 784))

(assertweight0 weight1) weight2) weight3) weight4) weight5) weight6) weight7) weight8) weight9) weight10) weight11) weight12) weight13) weight14) weight15) weight16) weight17) weight18) weight19) weight20) weight21) weight22) weight23) weight24) weight25) weight26) weight27) weight28) weight29) weight30) weight31) weight32) weight33) weight34) weight35) weight36) weight37) weight38) weight39) weight40) weight41) weight42) weight43) weight44) weight45) weight46) weight47) weight48) weight49) weight50) weight51) weight52) weight53) weight54) weight55) weight56) weight57) weight58) weight59) weight60) weight61) weight62) weight63) weight64) weight65) weight66) weight67) weight68) weight69) weight70) weight71) weight72) weight73) weight74) weight75) weight76) weight77) weight78) weight79) weight80) weight81) weight82) weight83) weight84) weight85) weight86) weight87) weight88) weight89) weight90) weight91) weight92) weight93) weight94) weight95) weight96) weight97) weight98) weight99) weight100) weight101) weight102) weight103) weight104) weight105) weight106) weight107) weight108) weight109) weight110) weight111) weight112) weight113) weight114) weight115) weight116) weight117) weight118) weight119) weight120) weight121) weight122) weight123) weight124) weight125) weight126) weight127) weight128) weight129) weight130) weight131) weight132) weight133) weight134) weight135) weight136) weight137) weight138) weight139) weight140) weight141) weight142) weight143) weight144) weight145) weight146) weight147) weight148) weight149) weight150) weight151) weight152) weight153) weight154) weight155) weight156) weight157) weight158) weight159) weight160) weight161) weight162) weight163) weight164) weight165) weight166) weight167) weight168) weight169) weight170) weight171) weight172) weight173) weight174) weight175) weight176) weight177) weight178) weight179) weight180) weight181) weight182) weight183) weight184) weight185) weight186) weight187) weight188) weight189) weight190) weight191) weight192) weight193) weight194) weight195) weight196) weight197) weight198) weight199) weight200) weight201) weight202) weight203) weight204) weight205) weight206) weight207) weight208) weight209) weight210) weight211) weight212) weight213) weight214) weight215) weight216) weight217) weight218) weight219) weight220) weight221) weight222) weight223) weight224) weight225) weight226) weight227) 915))

(assertweight0 weight1) weight2) weight3) weight4) weight5) weight6) weight7) weight8) weight9) weight10) weight11) weight12) weight13) weight14) weight15) weight16) weight17) weight18) weight19) weight20) weight21) weight22) weight23) weight24) weight25) weight26) weight27) weight28) weight29) weight30) weight31) weight32) weight33) weight34) weight35) weight36) weight37) weight38) weight39) weight40) weight41) weight42) weight43) weight44) weight45) weight46) weight47) weight48) weight49) weight50) weight51) weight52) weight53) weight54) weight55) weight56) weight57) weight58) weight59) weight60) weight61) weight62) weight63) weight64) weight65) weight66) weight67) weight68) weight69) weight70) weight71) weight72) weight73) weight74) weight75) weight76) weight77) weight78) weight79) weight80) weight81) weight82) weight83) weight84) weight85) weight86) weight87) weight88) weight89) weight90) weight91) weight92) weight93) weight94) weight95) weight96) weight97) weight98) weight99) weight100) weight101) weight102) weight103) weight104) weight105) weight106) weight107) weight108) weight109) weight110) weight111) weight112) weight113) weight114) weight115) weight116) weight117) weight118) weight119) weight120) weight121) weight122) weight123) weight124) weight125) weight126) weight127) weight128) weight129) weight130) weight131) weight132) weight133) weight134) weight135) weight136) weight137) weight138) weight139) weight140) weight141) weight142) weight143) weight144) weight145) weight146) weight147) weight148) weight149) weight150) weight151) weight152) weight153) weight154) weight155) weight156) weight157) weight158) weight159) weight160) weight161) weight162) weight163) weight164) weight165) weight166) weight167) weight168) weight169) weight170) weight171) weight172) weight173) weight174) weight175) weight176) weight177) weight178) weight179) weight180) weight181) weight182) weight183) weight184) weight185) weight186) weight187) weight188) weight189) weight190) weight191) weight192) weight193) weight194) weight195) weight196) weight197) weight198) weight199) weight200) weight201) weight202) weight203) weight204) weight205) weight206) weight207) weight208) weight209) weight210) weight211) weight212) weight213) weight214) weight215) weight216) weight217) weight218) weight219) weight220) weight221) weight222) weight223) weight224) weight225) weight226) weight227) 915))

(assertweight0 weight1) weight2) weight3) weight4) weight5) weight6) weight7) weight8) weight9) weight10) weight11) weight12) weight13) weight14) weight15) weight16) weight17) weight18) weight19) weight20) weight21) weight22) weight23) weight24) weight25) weight26) weight27) weight28) weight29) weight30) weight31) weight32) weight33) weight34) weight35) weight36) weight37) weight38) weight39) weight40) weight41) weight42) weight43) weight44) weight45) weight46) weight47) weight48) weight49) weight50) weight51) weight52) weight53) weight54) weight55) weight56) weight57) weight58) weight59) weight60) weight61) weight62) weight63) weight64) weight65) weight66) weight67) weight68) weight69) weight70) weight71) weight72) weight73) weight74) weight75) weight76) weight77) weight78) weight79) weight80) weight81) weight82) weight83) weight84) weight85) weight86) weight87) weight88) weight89) weight90) weight91) weight92) weight93) weight94) weight95) weight96) weight97) weight98) weight99) weight100) weight101) weight102) weight103) weight104) weight105) weight106) weight107) weight108) weight109) weight110) weight111) weight112) weight113) weight114) weight115) weight116) weight117) weight118) weight119) weight120) weight121) weight122) weight123) weight124) weight125) weight126) weight127) weight128) weight129) weight130) weight131) weight132) weight133) weight134) weight135) weight136) weight137) weight138) weight139) weight140) weight141) weight142) weight143) weight144) weight145) weight146) weight147) weight148) weight149) weight150) weight151) weight152) weight153) weight154) weight155) weight156) weight157) weight158) weight159) weight160) weight161) weight162) weight163) weight164) weight165) weight166) weight167) weight168) weight169) weight170) weight171) weight172) weight173) weight174) weight175) weight176) weight177) weight178) weight179) weight180) weight181) weight182) weight183) weight184) weight185) weight186) weight187) weight188) weight189) weight190) weight191) weight192) weight193) weight194) weight195) weight196) weight197) weight198) weight199) weight200) weight201) weight202) weight203) weight204) weight205) weight206) weight207) weight208) weight209) weight210) weight211) weight212) weight213) weight214) weight215) weight216) weight217) weight218) weight219) weight220) weight221) weight222) weight223) weight224) weight225) weight226) weight227) 980))
