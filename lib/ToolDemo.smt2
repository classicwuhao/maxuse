
;this file is automatically generated: Wed May 15 15:40:15 IST 2019

;declarations generated

(declare-fun oclExcludes ( Int Int) Bool)
(declare-fun k2fc93e29_e172_4a5d_9148_f20bd0775cf6 () Int)
(declare-fun module_credit ( Int) Int)
(declare-fun oclSelect ( Int Bool) Int)
(declare-fun person_mature ( Int) Bool)
(declare-fun Cardinality ( Int) Int)
(declare-fun module_year ( Int) Int)
(declare-fun type_184545ff_0ace_44be_9132_8e59a900ad5d_Person ( Int) Bool)
(declare-fun module_code ( Int) Int)
(declare-fun student_year ( Int) Int)
(declare-fun rel_e3ba4450_0c1d_435d_9e0a_444d0cc4bfde_study ( Int Int) Bool)
(declare-fun container_ ( Int) Int)
(declare-fun person_age ( Int) Int)
(declare-fun oclIncludes ( Int Int) Bool)
(declare-fun type_52a873d8_0423_4cdb_8388_ca2d21c6f67a_Student ( Int) Bool)
(declare-fun k4b2e4df2_0e59_4e2b_8c3c_d808dc7598c8 () Int)
(declare-fun aux1 () Int)
(declare-fun aux0 () Int)
(declare-fun module_description ( Int) Int)
(declare-fun aux3 () Int)
(declare-fun aux2 () Int)
(declare-fun aux8 () Int)
(declare-fun aux5 () Int)
(declare-fun aux4 () Int)
(declare-fun aux7 () Int)
(declare-fun aux6 () Int)
(declare-fun type_f4828ca0_bfec_4b86_a3bc_55a84ba64836_Module ( Int) Bool)
(declare-fun student_id ( Int) Int)
(declare-fun weight6 () Int)
(declare-fun weight5 () Int)
(declare-fun weight4 () Int)
(declare-fun weight3 () Int)
(declare-fun ObjAt ( Int Int) Int)
(declare-fun weight2 () Int)
(declare-fun weight1 () Int)
(declare-fun weight0 () Int)
(declare-fun obj_d5bfa695_9855_4f41_9d62_e710da77626d ( Int) Int)

;formula(s) generated
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall (( x Int )( y Int )) (=> (and ( rel_e3ba4450_0c1d_435d_9e0a_444d0cc4bfde_study ( obj_d5bfa695_9855_4f41_9d62_e710da77626d x )   ( obj_d5bfa695_9855_4f41_9d62_e710da77626d y )  )  (and (and ( type_52a873d8_0423_4cdb_8388_ca2d21c6f67a_Student x )  ( type_184545ff_0ace_44be_9132_8e59a900ad5d_Person x ) ) ( type_f4828ca0_bfec_4b86_a3bc_55a84ba64836_Module y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k2fc93e29_e172_4a5d_9148_f20bd0775cf6)) (>= k2fc93e29_e172_4a5d_9148_f20bd0775cf6 0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k4b2e4df2_0e59_4e2b_8c3c_d808dc7598c8)) (>= k4b2e4df2_0e59_4e2b_8c3c_d808dc7598c8 0))))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (forall (( x Int )( y Int )) (=> (and ( rel_e3ba4450_0c1d_435d_9e0a_444d0cc4bfde_study ( obj_d5bfa695_9855_4f41_9d62_e710da77626d x )   ( obj_d5bfa695_9855_4f41_9d62_e710da77626d y )  )  (and (and ( type_52a873d8_0423_4cdb_8388_ca2d21c6f67a_Student x )  ( type_184545ff_0ace_44be_9132_8e59a900ad5d_Person x ) ) ( type_f4828ca0_bfec_4b86_a3bc_55a84ba64836_Module y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k2fc93e29_e172_4a5d_9148_f20bd0775cf6)) (>= k2fc93e29_e172_4a5d_9148_f20bd0775cf6 0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k4b2e4df2_0e59_4e2b_8c3c_d808dc7598c8)) (>= k4b2e4df2_0e59_4e2b_8c3c_d808dc7598c8 0))))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (and (forall (( v Int )) (=> ( type_f4828ca0_bfec_4b86_a3bc_55a84ba64836_Module v )  (>= ( module_year ( obj_d5bfa695_9855_4f41_9d62_e710da77626d v )  )  1))) (forall (( v Int )) (=> ( type_f4828ca0_bfec_4b86_a3bc_55a84ba64836_Module v )  (<= ( module_year ( obj_d5bfa695_9855_4f41_9d62_e710da77626d v )  )  5)))) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (and (forall (( v Int )) (=> ( type_f4828ca0_bfec_4b86_a3bc_55a84ba64836_Module v )  (>= ( module_year ( obj_d5bfa695_9855_4f41_9d62_e710da77626d v )  )  1))) (forall (( v Int )) (=> ( type_f4828ca0_bfec_4b86_a3bc_55a84ba64836_Module v )  (<= ( module_year ( obj_d5bfa695_9855_4f41_9d62_e710da77626d v )  )  5)))))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (forall (( p Int )) (=> ( type_184545ff_0ace_44be_9132_8e59a900ad5d_Person p )  (and (> ( person_age ( obj_d5bfa695_9855_4f41_9d62_e710da77626d p )  )  0) (< ( person_age ( obj_d5bfa695_9855_4f41_9d62_e710da77626d p )  )  18)))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (and (=> (= aux2 0) (= weight0 2)) (=> (= aux2 1) (= weight0 0))))
(assert (and (>= aux3 0) (<= aux3 1)))
(assert (or (or (forall (( v Int )) (=> (and ( type_52a873d8_0423_4cdb_8388_ca2d21c6f67a_Student v )  ( type_184545ff_0ace_44be_9132_8e59a900ad5d_Person v ) ) (> ( person_age ( obj_d5bfa695_9855_4f41_9d62_e710da77626d v )  )  18))) (and (= aux3 1) true)) (and (= aux3 0) false)))
(assert (and (=> (= aux3 0) (= weight1 2)) (=> (= aux3 1) (= weight1 0))))
(assert (and (>= aux4 0) (<= aux4 1)))
(assert (or (or (and (forall (( v Int )) (=> (and ( type_52a873d8_0423_4cdb_8388_ca2d21c6f67a_Student v )  ( type_184545ff_0ace_44be_9132_8e59a900ad5d_Person v ) ) (>= ( student_year ( obj_d5bfa695_9855_4f41_9d62_e710da77626d v )  )  1))) (forall (( v Int )) (=> (and ( type_52a873d8_0423_4cdb_8388_ca2d21c6f67a_Student v )  ( type_184545ff_0ace_44be_9132_8e59a900ad5d_Person v ) ) (<= ( student_year ( obj_d5bfa695_9855_4f41_9d62_e710da77626d v )  )  6)))) (and (= aux4 1) true)) (and (= aux4 0) false)))
(assert (and (=> (= aux4 0) (= weight2 2)) (=> (= aux4 1) (= weight2 0))))
(assert (and (>= aux5 0) (<= aux5 1)))
(assert (or (or (forall (( s1 Int )( s2 Int )) (=> (and (and ( type_52a873d8_0423_4cdb_8388_ca2d21c6f67a_Student s1 )  ( type_184545ff_0ace_44be_9132_8e59a900ad5d_Person s1 ) ) (and ( type_52a873d8_0423_4cdb_8388_ca2d21c6f67a_Student s2 )  ( type_184545ff_0ace_44be_9132_8e59a900ad5d_Person s2 ) )) (=> (not (= ( obj_d5bfa695_9855_4f41_9d62_e710da77626d s1 )  ( obj_d5bfa695_9855_4f41_9d62_e710da77626d s2 ) ) ) (not (= ( student_id ( obj_d5bfa695_9855_4f41_9d62_e710da77626d s1 )  )  ( student_id ( obj_d5bfa695_9855_4f41_9d62_e710da77626d s2 )  ) ) )))) (and (= aux5 1) true)) (and (= aux5 0) false)))
(assert (and (=> (= aux5 0) (= weight3 2)) (=> (= aux5 1) (= weight3 0))))
(assert (and (>= aux6 0) (<= aux6 1)))
(assert (or (or (forall (( s1 Int )) (=> (and ( type_52a873d8_0423_4cdb_8388_ca2d21c6f67a_Student s1 )  ( type_184545ff_0ace_44be_9132_8e59a900ad5d_Person s1 ) ) (forall (( m1 Int )) (=> (and ( type_f4828ca0_bfec_4b86_a3bc_55a84ba64836_Module m1 )  ( rel_e3ba4450_0c1d_435d_9e0a_444d0cc4bfde_study ( obj_d5bfa695_9855_4f41_9d62_e710da77626d s1 )   ( obj_d5bfa695_9855_4f41_9d62_e710da77626d m1 )  ) ) (= ( student_year ( obj_d5bfa695_9855_4f41_9d62_e710da77626d s1 )  )  ( module_year ( obj_d5bfa695_9855_4f41_9d62_e710da77626d m1 )  ) ))))) (and (= aux6 1) true)) (and (= aux6 0) false)))
(assert (and (=> (= aux6 0) (= weight4 2)) (=> (= aux6 1) (= weight4 0))))
(assert (and (>= aux7 0) (<= aux7 1)))
(assert (or (or (and (exists (( s Int )) (and (and ( type_52a873d8_0423_4cdb_8388_ca2d21c6f67a_Student s )  ( type_184545ff_0ace_44be_9132_8e59a900ad5d_Person s ) ) (= ( student_year ( obj_d5bfa695_9855_4f41_9d62_e710da77626d s )  )  6))) (exists (( s Int )) (and (and ( type_52a873d8_0423_4cdb_8388_ca2d21c6f67a_Student s )  ( type_184545ff_0ace_44be_9132_8e59a900ad5d_Person s ) ) (< ( student_year ( obj_d5bfa695_9855_4f41_9d62_e710da77626d s )  )  6)))) (and (= aux7 1) true)) (and (= aux7 0) false)))
(assert (and (=> (= aux7 0) (= weight5 2)) (=> (= aux7 1) (= weight5 0))))
(assert (and (>= aux8 0) (<= aux8 1)))
(assert (or (or (forall (( s Int )) (=> (and ( type_52a873d8_0423_4cdb_8388_ca2d21c6f67a_Student s )  ( type_184545ff_0ace_44be_9132_8e59a900ad5d_Person s ) ) (exists (( v Int )) (and ( type_f4828ca0_bfec_4b86_a3bc_55a84ba64836_Module v )  ( rel_e3ba4450_0c1d_435d_9e0a_444d0cc4bfde_study ( obj_d5bfa695_9855_4f41_9d62_e710da77626d s )   ( obj_d5bfa695_9855_4f41_9d62_e710da77626d v )  ) )))) (and (= aux8 1) true)) (and (= aux8 0) false)))
(assert (and (=> (= aux8 0) (= weight6 2)) (=> (= aux8 1) (= weight6 0))))
(assert (exists (( o Int )) ( type_f4828ca0_bfec_4b86_a3bc_55a84ba64836_Module ( obj_d5bfa695_9855_4f41_9d62_e710da77626d o )  ) ))
(assert (exists (( o Int )) ( type_184545ff_0ace_44be_9132_8e59a900ad5d_Person ( obj_d5bfa695_9855_4f41_9d62_e710da77626d o )  ) ))
(assert (exists (( o Int )) (and ( type_52a873d8_0423_4cdb_8388_ca2d21c6f67a_Student ( obj_d5bfa695_9855_4f41_9d62_e710da77626d o )  )  ( type_184545ff_0ace_44be_9132_8e59a900ad5d_Person ( obj_d5bfa695_9855_4f41_9d62_e710da77626d o )  ) )))
(assert (= (+ (+ (+ (+ (+ (+ weight0 weight1) weight2) weight3) weight4) weight5) weight6) 10))

(assert (not (and (and (and (and (and (and (= weight0 0) (= weight1 2)) (= weight2 2)) (= weight3 2)) (= weight4 0)) (= weight5 2)) (= weight6 2)) ))

(assert (not (and (and (and (and (and (and (= weight0 2) (= weight1 0)) (= weight2 2)) (= weight3 2)) (= weight4 0)) (= weight5 2)) (= weight6 2)) ))

(assert (not (and (and (and (and (and (and (= weight0 2) (= weight1 0)) (= weight2 2)) (= weight3 2)) (= weight4 2)) (= weight5 2)) (= weight6 0)) ))

(assert (not (and (and (and (and (and (and (= weight0 2) (= weight1 0)) (= weight2 2)) (= weight3 2)) (= weight4 2)) (= weight5 0)) (= weight6 2)) ))

(assert (not (and (and (and (and (and (and (= weight0 0) (= weight1 2)) (= weight2 2)) (= weight3 2)) (= weight4 2)) (= weight5 0)) (= weight6 2)) ))

(assert (not (and (and (and (and (and (and (= weight0 0) (= weight1 2)) (= weight2 2)) (= weight3 2)) (= weight4 2)) (= weight5 2)) (= weight6 0)) ))
