
;this file is automatically generated: Wed Apr 19 16:58:41 IST 2017

;declarations generated

(declare-fun type_e70e502c_36b5_41fa_9221_7a14afd07bd7_Student ( Int) Bool )
(declare-fun type_2c51c9b4_81da_43f3_8a10_607f62fe5105_Person ( Int) Bool )
(declare-fun oclExcludes ( Int Int) Bool )
(declare-fun module_credit ( Int) Int )
(declare-fun oclSelect ( Int Bool) Int )
(declare-fun kc179d280_6913_4a9e_8a41_13379fef2e2e () Int )
(declare-fun person_mature ( Int) Bool )
(declare-fun Cardinality ( Int) Int )
(declare-fun rel_5a3112d8_8316_4192_a3da_bb95b712c5e7_study ( Int Int) Bool )
(declare-fun type_06c5e17b_fcba_4836_9a2c_096262222b5b_Module ( Int) Bool )
(declare-fun module_year ( Int) Int )
(declare-fun module_code ( Int) Int )
(declare-fun student_year ( Int) Int )
(declare-fun container_ ( Int) Int )
(declare-fun person_age ( Int) Int )
(declare-fun obj_a1906259_5510_44bb_9e34_594e15b9d5a3 ( Int) Int )
(declare-fun oclIncludes ( Int Int) Bool )
(declare-fun aux1 () Int )
(declare-fun aux0 () Int )
(declare-fun module_description ( Int) Int )
(declare-fun aux3 () Int )
(declare-fun aux2 () Int )
(declare-fun aux8 () Int )
(declare-fun aux5 () Int )
(declare-fun aux4 () Int )
(declare-fun aux7 () Int )
(declare-fun aux6 () Int )
(declare-fun student_id ( Int) Int )
(declare-fun weight6 () Int )
(declare-fun weight5 () Int )
(declare-fun weight4 () Int )
(declare-fun kff53bb00_19cc_411d_8b62_7138d9bbe860 () Int )
(declare-fun weight3 () Int )
(declare-fun ObjAt ( Int Int) Int )
(declare-fun weight2 () Int )
(declare-fun weight1 () Int )
(declare-fun weight0 () Int )

;formula(s) generated
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_5a3112d8_8316_4192_a3da_bb95b712c5e7_study ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 x )   ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 y )  )  (and (and ( type_e70e502c_36b5_41fa_9221_7a14afd07bd7_Student x )  ( type_2c51c9b4_81da_43f3_8a10_607f62fe5105_Person x ) ) ( type_06c5e17b_fcba_4836_9a2c_096262222b5b_Module y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kc179d280_6913_4a9e_8a41_13379fef2e2e)) (>= kc179d280_6913_4a9e_8a41_13379fef2e2e 0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kff53bb00_19cc_411d_8b62_7138d9bbe860)) (>= kff53bb00_19cc_411d_8b62_7138d9bbe860 0))))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_5a3112d8_8316_4192_a3da_bb95b712c5e7_study ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 x )   ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 y )  )  (and (and ( type_e70e502c_36b5_41fa_9221_7a14afd07bd7_Student x )  ( type_2c51c9b4_81da_43f3_8a10_607f62fe5105_Person x ) ) ( type_06c5e17b_fcba_4836_9a2c_096262222b5b_Module y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kc179d280_6913_4a9e_8a41_13379fef2e2e)) (>= kc179d280_6913_4a9e_8a41_13379fef2e2e 0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kff53bb00_19cc_411d_8b62_7138d9bbe860)) (>= kff53bb00_19cc_411d_8b62_7138d9bbe860 0))))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (and (forall ((v Int)) (=> ( type_06c5e17b_fcba_4836_9a2c_096262222b5b_Module v )  (>= ( module_year ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 v )  )  1))) (forall ((v Int)) (=> ( type_06c5e17b_fcba_4836_9a2c_096262222b5b_Module v )  (<= ( module_year ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 v )  )  5)))) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (and (forall ((v Int)) (=> ( type_06c5e17b_fcba_4836_9a2c_096262222b5b_Module v )  (>= ( module_year ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 v )  )  1))) (forall ((v Int)) (=> ( type_06c5e17b_fcba_4836_9a2c_096262222b5b_Module v )  (<= ( module_year ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 v )  )  5)))))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (forall ((p Int)) (=> ( type_2c51c9b4_81da_43f3_8a10_607f62fe5105_Person p )  (and (> ( person_age ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 p )  )  0) (< ( person_age ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 p )  )  18)))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (and (=> (= aux2 0) (= weight0 2)) (=> (= aux2 1) (= weight0 0))))
(assert (and (>= aux3 0) (<= aux3 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_e70e502c_36b5_41fa_9221_7a14afd07bd7_Student v )  ( type_2c51c9b4_81da_43f3_8a10_607f62fe5105_Person v ) ) (> ( person_age ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 v )  )  18))) (and (= aux3 1) true)) (and (= aux3 0) false)))
(assert (and (=> (= aux3 0) (= weight1 3)) (=> (= aux3 1) (= weight1 0))))
(assert (and (>= aux4 0) (<= aux4 1)))
(assert (or (or (and (forall ((v Int)) (=> (and ( type_e70e502c_36b5_41fa_9221_7a14afd07bd7_Student v )  ( type_2c51c9b4_81da_43f3_8a10_607f62fe5105_Person v ) ) (>= ( student_year ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 v )  )  1))) (forall ((v Int)) (=> (and ( type_e70e502c_36b5_41fa_9221_7a14afd07bd7_Student v )  ( type_2c51c9b4_81da_43f3_8a10_607f62fe5105_Person v ) ) (<= ( student_year ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 v )  )  6)))) (and (= aux4 1) true)) (and (= aux4 0) false)))
(assert (and (=> (= aux4 0) (= weight2 4)) (=> (= aux4 1) (= weight2 0))))
(assert (and (>= aux5 0) (<= aux5 1)))
(assert (or (or (forall ((s1 Int)(s2 Int)) (=> (and (and ( type_e70e502c_36b5_41fa_9221_7a14afd07bd7_Student s1 )  ( type_2c51c9b4_81da_43f3_8a10_607f62fe5105_Person s1 ) ) (and ( type_e70e502c_36b5_41fa_9221_7a14afd07bd7_Student s2 )  ( type_2c51c9b4_81da_43f3_8a10_607f62fe5105_Person s2 ) )) (=> (not (= ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 s1 )  ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 s2 ) ) ) (not (= ( student_id ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 s1 )  )  ( student_id ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 s2 )  ) ) )))) (and (= aux5 1) true)) (and (= aux5 0) false)))
(assert (and (=> (= aux5 0) (= weight3 5)) (=> (= aux5 1) (= weight3 0))))
(assert (and (>= aux6 0) (<= aux6 1)))
(assert (or (or (forall ((s1 Int)) (=> (and ( type_e70e502c_36b5_41fa_9221_7a14afd07bd7_Student s1 )  ( type_2c51c9b4_81da_43f3_8a10_607f62fe5105_Person s1 ) ) (forall ((m1 Int)) (=> (and ( type_06c5e17b_fcba_4836_9a2c_096262222b5b_Module m1 )  ( rel_5a3112d8_8316_4192_a3da_bb95b712c5e7_study ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 s1 )   ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 m1 )  ) ) (= ( student_year ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 s1 )  )  ( module_year ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 m1 )  ) ))))) (and (= aux6 1) true)) (and (= aux6 0) false)))
(assert (and (=> (= aux6 0) (= weight4 6)) (=> (= aux6 1) (= weight4 0))))
(assert (and (>= aux7 0) (<= aux7 1)))
(assert (or (or (and (exists ((s Int)) (and (and ( type_e70e502c_36b5_41fa_9221_7a14afd07bd7_Student s )  ( type_2c51c9b4_81da_43f3_8a10_607f62fe5105_Person s ) ) (= ( student_year ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 s )  )  6))) (exists ((s Int)) (and (and ( type_e70e502c_36b5_41fa_9221_7a14afd07bd7_Student s )  ( type_2c51c9b4_81da_43f3_8a10_607f62fe5105_Person s ) ) (< ( student_year ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 s )  )  6)))) (and (= aux7 1) true)) (and (= aux7 0) false)))
(assert (and (=> (= aux7 0) (= weight5 6)) (=> (= aux7 1) (= weight5 0))))
(assert (and (>= aux8 0) (<= aux8 1)))
(assert (or (or (forall ((s Int)) (=> (and ( type_e70e502c_36b5_41fa_9221_7a14afd07bd7_Student s )  ( type_2c51c9b4_81da_43f3_8a10_607f62fe5105_Person s ) ) (exists ((v Int)) (and ( type_06c5e17b_fcba_4836_9a2c_096262222b5b_Module v )  ( rel_5a3112d8_8316_4192_a3da_bb95b712c5e7_study ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 s )   ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 v )  ) )))) (and (= aux8 1) true)) (and (= aux8 0) false)))
(assert (and (=> (= aux8 0) (= weight6 7)) (=> (= aux8 1) (= weight6 0))))
(assert (exists ((o Int)) ( type_06c5e17b_fcba_4836_9a2c_096262222b5b_Module ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 o )  ) ))
(assert (exists ((o Int)) ( type_2c51c9b4_81da_43f3_8a10_607f62fe5105_Person ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 o )  ) ))
(assert (exists ((o Int)) (and ( type_e70e502c_36b5_41fa_9221_7a14afd07bd7_Student ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 o )  )  ( type_2c51c9b4_81da_43f3_8a10_607f62fe5105_Person ( obj_a1906259_5510_44bb_9e34_594e15b9d5a3 o )  ) )))
(assert (= (+ (+ (+ (+ (+ (+ weight0 weight1) weight2) weight3) weight4) weight5) weight6) 25))
(assert (not (and (and (and (and (and (and (= weight0 0) (= weight1 3)) (= weight2 4)) (= weight3 5)) (= weight4 6)) (= weight5 0)) (= weight6 7)) ))
(assert (not (and (and (and (and (and (and (= weight0 0) (= weight1 3)) (= weight2 4)) (= weight3 5)) (= weight4 0)) (= weight5 6)) (= weight6 7)) ))
