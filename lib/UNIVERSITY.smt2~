
;this file is automatically generated: Wed Mar 02 14:36:59 GMT 2016

;declarations generated

(declare-fun obj_fc286dab_1673_4ba4_a00d_ffcffa261fce ( Int) Int )
(declare-fun type_bc0c0579_71bd_408a_9080_b36aae81fd29_Person ( Int) Bool )
(declare-fun type_4ca2c03a_8c0b_43de_92a8_fe61e234c8ba_Student ( Int) Bool )
(declare-fun student_year ( Int) Int )
(declare-fun module_code ( Int) Int )
(declare-fun module_year ( Int) Int )
(declare-fun module_credit ( Int) Int )
(declare-fun type_3cc0fa18_97e6_4b33_8f65_1c50358f88c1_Module ( Int) Bool )
(declare-fun student_id ( Int) Int )
(declare-fun rel_f517408f_2ac7_4e5a_8654_7f3447013403_study ( Int Int) Bool )
(declare-fun aux6 () Int )
(declare-fun aux5 () Int )
(declare-fun aux4 () Int )
(declare-fun person_age ( Int) Int )
(declare-fun aux2 () Int )
(declare-fun aux3 () Int )
(declare-fun aux0 () Int )
(declare-fun aux1 () Int )
(declare-fun person_mature ( Int) Bool )
(declare-fun weight2 () Int )
(declare-fun weight3 () Int )
(declare-fun weight1 () Int )
(declare-fun weight6 () Int )
(declare-fun weight7 () Int )
(declare-fun weight5 () Int )

;formulas generated
(assert (forall ((a Int)(b Int)) (= ( rel_f517408f_2ac7_4e5a_8654_7f3447013403_study a  b )  ( rel_f517408f_2ac7_4e5a_8654_7f3447013403_study b  a ) )))
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (and (forall ((p Int)) (=> ( type_3cc0fa18_97e6_4b33_8f65_1c50358f88c1_Module p )  (>= ( module_year ( obj_fc286dab_1673_4ba4_a00d_ffcffa261fce p )  )  1))) (forall ((p Int)) (=> ( type_3cc0fa18_97e6_4b33_8f65_1c50358f88c1_Module p )  (<= ( module_year ( obj_fc286dab_1673_4ba4_a00d_ffcffa261fce p )  )  5)))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (and (forall ((p Int)) (=> ( type_3cc0fa18_97e6_4b33_8f65_1c50358f88c1_Module p )  (>= ( module_year ( obj_fc286dab_1673_4ba4_a00d_ffcffa261fce p )  )  1))) (forall ((p Int)) (=> ( type_3cc0fa18_97e6_4b33_8f65_1c50358f88c1_Module p )  (<= ( module_year ( obj_fc286dab_1673_4ba4_a00d_ffcffa261fce p )  )  5)))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (forall ((s1 Int)) (=> (and ( type_4ca2c03a_8c0b_43de_92a8_fe61e234c8ba_Student s1 )  ( type_bc0c0579_71bd_408a_9080_b36aae81fd29_Person s1 ) ) (forall ((m1 Int)) (=> (and ( type_3cc0fa18_97e6_4b33_8f65_1c50358f88c1_Module m1 )  ( rel_f517408f_2ac7_4e5a_8654_7f3447013403_study ( obj_fc286dab_1673_4ba4_a00d_ffcffa261fce s1 )   ( obj_fc286dab_1673_4ba4_a00d_ffcffa261fce m1 )  ) ) (= ( student_year ( obj_fc286dab_1673_4ba4_a00d_ffcffa261fce s1 )  )  ( module_year ( obj_fc286dab_1673_4ba4_a00d_ffcffa261fce m1 )  ) ))))) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (and (=> (= aux1 0) (= weight1 10)) (=> (= aux1 1) (= weight1 0))))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (and (exists ((s Int)) (and (and ( type_4ca2c03a_8c0b_43de_92a8_fe61e234c8ba_Student s )  ( type_bc0c0579_71bd_408a_9080_b36aae81fd29_Person s ) ) (= ( student_year ( obj_fc286dab_1673_4ba4_a00d_ffcffa261fce s )  )  6))) (exists ((s Int)) (and (and ( type_4ca2c03a_8c0b_43de_92a8_fe61e234c8ba_Student s )  ( type_bc0c0579_71bd_408a_9080_b36aae81fd29_Person s ) ) (< ( student_year ( obj_fc286dab_1673_4ba4_a00d_ffcffa261fce s )  )  6)))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (and (=> (= aux2 0) (= weight2 13)) (=> (= aux2 1) (= weight2 0))))
(assert (and (>= aux3 0) (<= aux3 1)))
(assert (or (or (forall ((s Int)) (=> (and ( type_4ca2c03a_8c0b_43de_92a8_fe61e234c8ba_Student s )  ( type_bc0c0579_71bd_408a_9080_b36aae81fd29_Person s ) ) (exists ((p Int)) (and ( type_3cc0fa18_97e6_4b33_8f65_1c50358f88c1_Module p )  ( rel_f517408f_2ac7_4e5a_8654_7f3447013403_study ( obj_fc286dab_1673_4ba4_a00d_ffcffa261fce p )   ( obj_fc286dab_1673_4ba4_a00d_ffcffa261fce s )  ) )))) (and (= aux3 1) true)) (and (= aux3 0) false)))
(assert (and (=> (= aux3 0) (= weight3 5)) (=> (= aux3 1) (= weight3 0))))
(assert (and (>= aux4 0) (<= aux4 1)))
(assert (and (>= aux5 0) (<= aux5 1)))
(assert (and (>= aux6 0) (<= aux6 1)))
(assert (or (or (exists ((p Int)) ( type_3cc0fa18_97e6_4b33_8f65_1c50358f88c1_Module p ) ) (and (= aux4 1) true)) (and (= aux4 0) false)))
(assert (and (=> (= aux4 0) (= weight5 5)) (=> (= aux4 1) (= weight5 0))))
(assert (or (or (exists ((p Int)) ( type_bc0c0579_71bd_408a_9080_b36aae81fd29_Person p ) ) (and (= aux5 1) true)) (and (= aux5 0) false)))
(assert (and (=> (= aux5 0) (= weight6 3)) (=> (= aux5 1) (= weight6 0))))
(assert (or (or (exists ((p Int)) (and ( type_4ca2c03a_8c0b_43de_92a8_fe61e234c8ba_Student p )  ( type_bc0c0579_71bd_408a_9080_b36aae81fd29_Person p ) )) (and (= aux6 1) true)) (and (= aux6 0) false)))
(assert (and (=> (= aux6 0) (= weight7 6)) (=> (= aux6 1) (= weight7 0))))
(assert (= (+ (+ (+ (+ (+ (+ aux0 aux1) aux2) aux3) aux4) aux5) aux6) 0))

 ;end of formula 