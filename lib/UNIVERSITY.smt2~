
;this file is automatically generated: Tue Feb 09 14:33:01 GMT 2016

;declarations generated

(declare-fun type_c2d663ed_a792_42a2_a0b5_5dab8e9a1657_Module ( Int) Bool )
(declare-fun Student () Int )
(declare-fun student_year ( Int) Int )
(declare-fun type_a89fe844_39bb_4c7c_8017_c5a508308cc0_Person ( Int) Bool )
(declare-fun obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 ( Int) Int )
(declare-fun type_e6994db4_543c_4539_b664_22355e45bca0_Student ( Int) Bool )
(declare-fun module_code ( Int) Int )
(declare-fun module_year ( Int) Int )
(declare-fun module_credit ( Int) Int )
(declare-fun Module () Int )
(declare-fun student_id ( Int) Int )
(declare-fun person_age ( Int) Int )
(declare-fun aux2 () Int )
(declare-fun aux0 () Int )
(declare-fun Person () Int )
(declare-fun aux1 () Int )
(declare-fun person_mature ( Int) Bool )
(declare-fun weight2 () Int )
(declare-fun weight0 () Int )
(declare-fun weight1 () Int )
(declare-fun rel_3e9fc03f_80fe_47a6_8f0e_4830d2278d95_study ( Int Int) Bool )

;formulas generated
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall ((p Int)) (not (= ( person_age ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 p )  )  0) )) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (and (=> (forall ((p Int)) (not (= ( person_age ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 p )  )  0) )) (= weight0 1)) (=> (not (forall ((p Int)) (not (= ( person_age ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 p )  )  0) )) ) (= weight0 0))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (forall ((p Int)) (not (= ( person_mature ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 p )  )  true) )) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (and (=> (forall ((p Int)) (not (= ( person_mature ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 p )  )  true) )) (= weight1 2)) (=> (not (forall ((p Int)) (not (= ( person_mature ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 p )  )  true) )) ) (= weight1 0))))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (forall ((s2 Int)(s1 Int)) (=> (and (and ( type_e6994db4_543c_4539_b664_22355e45bca0_Student s1 )  ( type_a89fe844_39bb_4c7c_8017_c5a508308cc0_Person s1 ) ) (and ( type_e6994db4_543c_4539_b664_22355e45bca0_Student s2 )  ( type_a89fe844_39bb_4c7c_8017_c5a508308cc0_Person s2 ) )) (=> (not (= ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 s1 )  ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 s2 ) ) ) (not (= ( student_id ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 s1 )  )  ( student_id ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 s2 )  ) ) )))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (and (=> (forall ((s2 Int)(s1 Int)) (=> (and (and ( type_e6994db4_543c_4539_b664_22355e45bca0_Student s1 )  ( type_a89fe844_39bb_4c7c_8017_c5a508308cc0_Person s1 ) ) (and ( type_e6994db4_543c_4539_b664_22355e45bca0_Student s2 )  ( type_a89fe844_39bb_4c7c_8017_c5a508308cc0_Person s2 ) )) (=> (not (= ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 s1 )  ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 s2 ) ) ) (not (= ( student_id ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 s1 )  )  ( student_id ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 s2 )  ) ) )))) (= weight2 3)) (=> (not (forall ((s2 Int)(s1 Int)) (=> (and (and ( type_e6994db4_543c_4539_b664_22355e45bca0_Student s1 )  ( type_a89fe844_39bb_4c7c_8017_c5a508308cc0_Person s1 ) ) (and ( type_e6994db4_543c_4539_b664_22355e45bca0_Student s2 )  ( type_a89fe844_39bb_4c7c_8017_c5a508308cc0_Person s2 ) )) (=> (not (= ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 s1 )  ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 s2 ) ) ) (not (= ( student_id ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 s1 )  )  ( student_id ( obj_c26f5015_b837_4cbe_87ef_296a260a3ae9 s2 )  ) ) )))) ) (= weight2 0))))

 ;end of formula 
