
;this file is automatically generated: Mon Jul 29 09:57:26 IST 2019

;declarations generated

(declare-fun k22004518_7341_4cde_8e39_1260669a7f60 () Int)
(declare-fun type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person ( Int) Bool)
(declare-fun oclExcludes ( Int Int) Bool)
(declare-fun rel_8c7d78bc_baa5_464a_bfe8_ab01aa9b2256_study ( Int Int) Bool)
(declare-fun aux15 () Int)
(declare-fun aux12 () Int)
(declare-fun aux11 () Int)
(declare-fun aux14 () Int)
(declare-fun aux13 () Int)
(declare-fun module_credit ( Int) Int)
(declare-fun aux10 () Int)
(declare-fun oclSelect ( Int Bool) Int)
(declare-fun person_mature ( Int) Bool)
(declare-fun Cardinality ( Int) Int)
(declare-fun rel_196f90f4_5e27_4ce2_a070_3b86a79f971c_teach ( Int Int) Bool)
(declare-fun k52e0a1b8_b597_436e_9633_761303ea9dcc () Int)
(declare-fun module_year ( Int) Int)
(declare-fun weight13 () Int)
(declare-fun rel_4fe77f7d_5e73_476e_87d8_8ceb2f5e6af2_manage ( Int Int) Bool)
(declare-fun weight14 () Int)
(declare-fun weight11 () Int)
(declare-fun weight12 () Int)
(declare-fun weight15 () Int)
(declare-fun weight10 () Int)
(declare-fun module_code ( Int) Int)
(declare-fun student_year ( Int) Int)
(declare-fun obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b ( Int) Int)
(declare-fun ked67ad66_5ec9_401d_802c_664daddd08e8 () Int)
(declare-fun container_ ( Int) Int)
(declare-fun type_141f338d_f134_469a_97eb_e9f8c0a9711c_Department ( Int) Bool)
(declare-fun person_age ( Int) Int)
(declare-fun type_35ec194f_8464_49e8_ab22_5e0a7fb91037_University ( Int) Bool)
(declare-fun k2635edc7_334a_42cc_a13a_f3d20665581f () Int)
(declare-fun weight9 () Int)
(declare-fun weight8 () Int)
(declare-fun oclIncludes ( Int Int) Bool)
(declare-fun aux1 () Int)
(declare-fun aux0 () Int)
(declare-fun module_description ( Int) Int)
(declare-fun aux3 () Int)
(declare-fun aux2 () Int)
(declare-fun type_c8800592_e274_4091_ae91_f4423711be92_Module ( Int) Bool)
(declare-fun k4f64a7ea_3c06_423a_8768_a763f69d0436 () Int)
(declare-fun type_271f218c_1426_49c5_8fc1_9626303d9fc9_Student ( Int) Bool)
(declare-fun aux9 () Int)
(declare-fun aux8 () Int)
(declare-fun aux5 () Int)
(declare-fun aux4 () Int)
(declare-fun aux7 () Int)
(declare-fun aux6 () Int)
(declare-fun weight7 () Int)
(declare-fun student_id ( Int) Int)
(declare-fun weight6 () Int)
(declare-fun weight5 () Int)
(declare-fun weight4 () Int)
(declare-fun weight3 () Int)
(declare-fun ObjAt ( Int Int) Int)
(declare-fun weight2 () Int)
(declare-fun weight1 () Int)
(declare-fun weight0 () Int)
(declare-fun k1884cdf7_f852_4c3b_a24f_ec9b5f715c11 () Int)

;formula(s) generated
(assert (exists ((x Int)(y Int)) (and (and ( rel_4fe77f7d_5e73_476e_87d8_8ceb2f5e6af2_manage ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b x )   ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b y )  )  (and ( type_35ec194f_8464_49e8_ab22_5e0a7fb91037_University x )  ( type_141f338d_f134_469a_97eb_e9f8c0a9711c_Department y ) )) (>= ( Cardinality ( container_ x )  )  1))))
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_4fe77f7d_5e73_476e_87d8_8ceb2f5e6af2_manage ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b x )   ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b y )  )  (and ( type_35ec194f_8464_49e8_ab22_5e0a7fb91037_University x )  ( type_141f338d_f134_469a_97eb_e9f8c0a9711c_Department y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k22004518_7341_4cde_8e39_1260669a7f60)) (>= k22004518_7341_4cde_8e39_1260669a7f60 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  ked67ad66_5ec9_401d_802c_664daddd08e8)) (>= ked67ad66_5ec9_401d_802c_664daddd08e8 0))))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_4fe77f7d_5e73_476e_87d8_8ceb2f5e6af2_manage ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b x )   ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b y )  )  (and ( type_35ec194f_8464_49e8_ab22_5e0a7fb91037_University x )  ( type_141f338d_f134_469a_97eb_e9f8c0a9711c_Department y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k22004518_7341_4cde_8e39_1260669a7f60)) (>= k22004518_7341_4cde_8e39_1260669a7f60 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  ked67ad66_5ec9_401d_802c_664daddd08e8)) (>= ked67ad66_5ec9_401d_802c_664daddd08e8 0))))))
(assert (and (=> (= aux0 0) (= weight0 1)) (=> (= aux0 1) (= weight0 0))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_8c7d78bc_baa5_464a_bfe8_ab01aa9b2256_study ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b x )   ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b y )  )  (and (and ( type_271f218c_1426_49c5_8fc1_9626303d9fc9_Student x )  ( type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person x ) ) ( type_c8800592_e274_4091_ae91_f4423711be92_Module y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k1884cdf7_f852_4c3b_a24f_ec9b5f715c11)) (>= k1884cdf7_f852_4c3b_a24f_ec9b5f715c11 0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k4f64a7ea_3c06_423a_8768_a763f69d0436)) (>= k4f64a7ea_3c06_423a_8768_a763f69d0436 0))))) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_8c7d78bc_baa5_464a_bfe8_ab01aa9b2256_study ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b x )   ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b y )  )  (and (and ( type_271f218c_1426_49c5_8fc1_9626303d9fc9_Student x )  ( type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person x ) ) ( type_c8800592_e274_4091_ae91_f4423711be92_Module y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k1884cdf7_f852_4c3b_a24f_ec9b5f715c11)) (>= k1884cdf7_f852_4c3b_a24f_ec9b5f715c11 0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k4f64a7ea_3c06_423a_8768_a763f69d0436)) (>= k4f64a7ea_3c06_423a_8768_a763f69d0436 0))))))
(assert (and (=> (= aux1 0) (= weight1 1)) (=> (= aux1 1) (= weight1 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_196f90f4_5e27_4ce2_a070_3b86a79f971c_teach ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b x )   ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b y )  )  (and ( type_141f338d_f134_469a_97eb_e9f8c0a9711c_Department x )  (and ( type_271f218c_1426_49c5_8fc1_9626303d9fc9_Student y )  ( type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person y ) ))) (>= ( Cardinality ( container_ x )  )  1))))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_196f90f4_5e27_4ce2_a070_3b86a79f971c_teach ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b x )   ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b y )  )  (and ( type_141f338d_f134_469a_97eb_e9f8c0a9711c_Department x )  (and ( type_271f218c_1426_49c5_8fc1_9626303d9fc9_Student y )  ( type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k2635edc7_334a_42cc_a13a_f3d20665581f)) (>= k2635edc7_334a_42cc_a13a_f3d20665581f 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k52e0a1b8_b597_436e_9633_761303ea9dcc)) (>= k52e0a1b8_b597_436e_9633_761303ea9dcc 0))))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_196f90f4_5e27_4ce2_a070_3b86a79f971c_teach ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b x )   ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b y )  )  (and ( type_141f338d_f134_469a_97eb_e9f8c0a9711c_Department x )  (and ( type_271f218c_1426_49c5_8fc1_9626303d9fc9_Student y )  ( type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k2635edc7_334a_42cc_a13a_f3d20665581f)) (>= k2635edc7_334a_42cc_a13a_f3d20665581f 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k52e0a1b8_b597_436e_9633_761303ea9dcc)) (>= k52e0a1b8_b597_436e_9633_761303ea9dcc 0))))))
(assert (and (=> (= aux2 0) (= weight2 1)) (=> (= aux2 1) (= weight2 0))))
(assert (and (>= aux3 0) (<= aux3 1)))
(assert (or (or (and (forall ((v Int)) (=> ( type_c8800592_e274_4091_ae91_f4423711be92_Module v )  (>= ( module_year ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b v )  )  1))) (forall ((v Int)) (=> ( type_c8800592_e274_4091_ae91_f4423711be92_Module v )  (<= ( module_year ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b v )  )  5)))) (and (= aux3 1) true)) (and (= aux3 0) false)))
(assert (and (=> (= aux3 0) (= weight3 1)) (=> (= aux3 1) (= weight3 0))))
(assert (and (>= aux4 0) (<= aux4 1)))
(assert (or (or (forall ((p Int)) (=> ( type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person p )  (and (> ( person_age ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b p )  )  0) (< ( person_age ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b p )  )  18)))) (and (= aux4 1) true)) (and (= aux4 0) false)))
(assert (and (=> (= aux4 0) (= weight4 1)) (=> (= aux4 1) (= weight4 0))))
(assert (and (>= aux5 0) (<= aux5 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_271f218c_1426_49c5_8fc1_9626303d9fc9_Student v )  ( type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person v ) ) (> ( person_age ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b v )  )  18))) (and (= aux5 1) true)) (and (= aux5 0) false)))
(assert (and (=> (= aux5 0) (= weight5 1)) (=> (= aux5 1) (= weight5 0))))
(assert (and (>= aux6 0) (<= aux6 1)))
(assert (or (or (and (forall ((v Int)) (=> (and ( type_271f218c_1426_49c5_8fc1_9626303d9fc9_Student v )  ( type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person v ) ) (>= ( student_year ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b v )  )  1))) (forall ((v Int)) (=> (and ( type_271f218c_1426_49c5_8fc1_9626303d9fc9_Student v )  ( type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person v ) ) (<= ( student_year ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b v )  )  6)))) (and (= aux6 1) true)) (and (= aux6 0) false)))
(assert (and (=> (= aux6 0) (= weight6 1)) (=> (= aux6 1) (= weight6 0))))
(assert (and (>= aux7 0) (<= aux7 1)))
(assert (or (or (forall ((s1 Int)(s2 Int)) (=> (and (and ( type_271f218c_1426_49c5_8fc1_9626303d9fc9_Student s1 )  ( type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person s1 ) ) (and ( type_271f218c_1426_49c5_8fc1_9626303d9fc9_Student s2 )  ( type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person s2 ) )) (=> (not (= ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b s1 )  ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b s2 ) ) ) (not (= ( student_id ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b s1 )  )  ( student_id ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b s2 )  ) ) )))) (and (= aux7 1) true)) (and (= aux7 0) false)))
(assert (and (=> (= aux7 0) (= weight7 1)) (=> (= aux7 1) (= weight7 0))))
(assert (and (>= aux8 0) (<= aux8 1)))
(assert (or (or (forall ((s1 Int)) (=> (and ( type_271f218c_1426_49c5_8fc1_9626303d9fc9_Student s1 )  ( type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person s1 ) ) (forall ((m1 Int)) (=> (and ( type_c8800592_e274_4091_ae91_f4423711be92_Module m1 )  ( rel_8c7d78bc_baa5_464a_bfe8_ab01aa9b2256_study ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b s1 )   ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b m1 )  ) ) (= ( student_year ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b s1 )  )  ( module_year ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b m1 )  ) ))))) (and (= aux8 1) true)) (and (= aux8 0) false)))
(assert (and (=> (= aux8 0) (= weight8 1)) (=> (= aux8 1) (= weight8 0))))
(assert (and (>= aux9 0) (<= aux9 1)))
(assert (or (or (and (exists ((s Int)) (and (and ( type_271f218c_1426_49c5_8fc1_9626303d9fc9_Student s )  ( type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person s ) ) (= ( student_year ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b s )  )  6))) (exists ((s Int)) (and (and ( type_271f218c_1426_49c5_8fc1_9626303d9fc9_Student s )  ( type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person s ) ) (< ( student_year ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b s )  )  6)))) (and (= aux9 1) true)) (and (= aux9 0) false)))
(assert (and (=> (= aux9 0) (= weight9 1)) (=> (= aux9 1) (= weight9 0))))
(assert (and (>= aux10 0) (<= aux10 1)))
(assert (or (or (forall ((s Int)) (=> (and ( type_271f218c_1426_49c5_8fc1_9626303d9fc9_Student s )  ( type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person s ) ) (exists ((v Int)) (and ( type_c8800592_e274_4091_ae91_f4423711be92_Module v )  ( rel_8c7d78bc_baa5_464a_bfe8_ab01aa9b2256_study ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b s )   ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b v )  ) )))) (and (= aux10 1) true)) (and (= aux10 0) false)))
(assert (and (=> (= aux10 0) (= weight10 1)) (=> (= aux10 1) (= weight10 0))))
(assert (and (>= aux11 0) (<= aux11 1)))
(assert (and (>= aux12 0) (<= aux12 1)))
(assert (and (>= aux13 0) (<= aux13 1)))
(assert (and (>= aux14 0) (<= aux14 1)))
(assert (and (>= aux15 0) (<= aux15 1)))
(assert (or (or (exists ((p Int)) ( type_141f338d_f134_469a_97eb_e9f8c0a9711c_Department ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b p )  ) ) (and (= aux11 1) true)) (and (= aux11 0) false)))
(assert (and (=> (= aux11 0) (= weight11 1)) (=> (= aux11 1) (= weight11 0))))
(assert (or (or (exists ((p Int)) ( type_c8800592_e274_4091_ae91_f4423711be92_Module ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b p )  ) ) (and (= aux12 1) true)) (and (= aux12 0) false)))
(assert (and (=> (= aux12 0) (= weight12 1)) (=> (= aux12 1) (= weight12 0))))
(assert (or (or (exists ((p Int)) ( type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b p )  ) ) (and (= aux13 1) true)) (and (= aux13 0) false)))
(assert (and (=> (= aux13 0) (= weight13 1)) (=> (= aux13 1) (= weight13 0))))
(assert (or (or (exists ((p Int)) (and ( type_271f218c_1426_49c5_8fc1_9626303d9fc9_Student ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b p )  )  ( type_f659a7c5_34de_4aa9_894a_e5cd44064f6b_Person ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b p )  ) )) (and (= aux14 1) true)) (and (= aux14 0) false)))
(assert (and (=> (= aux14 0) (= weight14 1)) (=> (= aux14 1) (= weight14 0))))
(assert (or (or (exists ((p Int)) ( type_35ec194f_8464_49e8_ab22_5e0a7fb91037_University ( obj_3181d7ff_e865_4e3c_8dbc_c202d70a275b p )  ) ) (and (= aux15 1) true)) (and (= aux15 0) false)))
(assert (and (=> (= aux15 0) (= weight15 1)) (=> (= aux15 1) (= weight15 0))))
(assert (= (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ weight0 weight1) weight2) weight3) weight4) weight5) weight6) weight7) weight8) weight9) weight10) weight11) weight12) weight13) weight14) weight15) 14))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 0)) (= weight4 0)) (= weight5 1)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 1)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 1)) (= weight5 0)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 0)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 0)) (= weight5 1)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 0)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 0)) (= weight4 1)) (= weight5 0)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 1)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 1)) (= weight5 0)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 1)) (= weight10 0)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 1)) (= weight5 0)) (= weight6 1)) (= weight7 1)) (= weight8 0)) (= weight9 1)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 0)) (= weight5 1)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 1)) (= weight10 0)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 0)) (= weight5 1)) (= weight6 1)) (= weight7 1)) (= weight8 0)) (= weight9 1)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))
