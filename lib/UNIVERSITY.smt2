
;this file is automatically generated: Mon Feb 15 17:33:11 GMT 2016

;declarations generated

(declare-fun obj_177c4c64_9d5c_4b98_b93b_8a7b6dd6f918 ( Int) Int )
(declare-fun Student () Int )
(declare-fun student_year ( Int) Int )
(declare-fun type_a4140f11_ae67_44a8_8b2d_fb1876da25bf_Student ( Int) Bool )
(declare-fun module_code ( Int) Int )
(declare-fun module_year ( Int) Int )
(declare-fun module_credit ( Int) Int )
(declare-fun Module () Int )
(declare-fun student_id ( Int) Int )
(declare-fun person_age ( Int) Int )
(declare-fun aux2 () Int )
(declare-fun aux3 () Int )
(declare-fun aux0 () Int )
(declare-fun Person () Int )
(declare-fun aux1 () Int )
(declare-fun person_mature ( Int) Bool )
(declare-fun type_becac985_1bd9_484f_9e55_18cae06d8e5c_Person ( Int) Bool )
(declare-fun type_3b0e9823_6ad1_4d56_ac66_fe37ce8fe386_Module ( Int) Bool )
(declare-fun weight2 () Int )
(declare-fun weight3 () Int )
(declare-fun weight0 () Int )
(declare-fun weight1 () Int )
(declare-fun rel_86a282b2_cf06_4af1_9ec8_7af97d098633_study ( Int Int) Bool )

;formulas generated
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall ((p Int)) (not (= ( person_age ( obj_177c4c64_9d5c_4b98_b93b_8a7b6dd6f918 p )  )  0) )) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (and (=> (forall ((p Int)) (not (= ( person_age ( obj_177c4c64_9d5c_4b98_b93b_8a7b6dd6f918 p )  )  0) )) (= weight0 1)) (=> (not (forall ((p Int)) (not (= ( person_age ( obj_177c4c64_9d5c_4b98_b93b_8a7b6dd6f918 p )  )  0) )) ) (= weight0 0))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (forall ((p Int)) (not (= ( person_mature ( obj_177c4c64_9d5c_4b98_b93b_8a7b6dd6f918 p )  )  true) )) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (and (=> (forall ((p Int)) (not (= ( person_mature ( obj_177c4c64_9d5c_4b98_b93b_8a7b6dd6f918 p )  )  true) )) (= weight1 2)) (=> (not (forall ((p Int)) (not (= ( person_mature ( obj_177c4c64_9d5c_4b98_b93b_8a7b6dd6f918 p )  )  true) )) ) (= weight1 0))))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (forall ((p Int)) (=> ( type_becac985_1bd9_484f_9e55_18cae06d8e5c_Person p )  (> ( person_age ( obj_177c4c64_9d5c_4b98_b93b_8a7b6dd6f918 p )  )  18))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (and (=> (forall ((p Int)) (=> ( type_becac985_1bd9_484f_9e55_18cae06d8e5c_Person p )  (> ( person_age ( obj_177c4c64_9d5c_4b98_b93b_8a7b6dd6f918 p )  )  18))) (= weight2 3)) (=> (not (forall ((p Int)) (=> ( type_becac985_1bd9_484f_9e55_18cae06d8e5c_Person p )  (> ( person_age ( obj_177c4c64_9d5c_4b98_b93b_8a7b6dd6f918 p )  )  18))) ) (= weight2 0))))
(assert (and (>= aux3 0) (<= aux3 1)))
(assert (or (or (forall ((p Int)) (=> (and ( type_a4140f11_ae67_44a8_8b2d_fb1876da25bf_Student p )  ( type_becac985_1bd9_484f_9e55_18cae06d8e5c_Person p ) ) (< ( person_age ( obj_177c4c64_9d5c_4b98_b93b_8a7b6dd6f918 p )  )  (not 1 )))) (and (= aux3 1) true)) (and (= aux3 0) false)))
(assert (and (=> (forall ((p Int)) (=> (and ( type_a4140f11_ae67_44a8_8b2d_fb1876da25bf_Student p )  ( type_becac985_1bd9_484f_9e55_18cae06d8e5c_Person p ) ) (< ( person_age ( obj_177c4c64_9d5c_4b98_b93b_8a7b6dd6f918 p )  )  (not 1 )))) (= weight3 4)) (=> (not (forall ((p Int)) (=> (and ( type_a4140f11_ae67_44a8_8b2d_fb1876da25bf_Student p )  ( type_becac985_1bd9_484f_9e55_18cae06d8e5c_Person p ) ) (< ( person_age ( obj_177c4c64_9d5c_4b98_b93b_8a7b6dd6f918 p )  )  (not 1 )))) ) (= weight3 0))))

 ;end of formula 