
;this file is automatically generated: Mon Jul 29 14:43:36 IST 2019

;declarations generated

(declare-fun type_bbfe2c6f_e487_4cd4_9305_d66b484d7af2_Student ( Int) Bool)
(declare-fun rel_e84e13be_e965_4264_b140_fecce28fc0fb_teach ( Int Int) Bool)
(declare-fun oclExcludes ( Int Int) Bool)
(declare-fun k4590d0bd_08df_4852_839e_c63fff84353d () Int)
(declare-fun aux15 () Int)
(declare-fun aux12 () Int)
(declare-fun aux11 () Int)
(declare-fun aux14 () Int)
(declare-fun aux13 () Int)
(declare-fun module_credit ( Int) Int)
(declare-fun aux10 () Int)
(declare-fun oclSelect ( Int Bool) Int)
(declare-fun k921f62aa_7596_42f4_9e3f_4b8e7699fef3 () Int)
(declare-fun k1e3c8a8d_51ca_4aed_90bf_185df60ee2aa () Int)
(declare-fun person_mature ( Int) Bool)
(declare-fun Cardinality ( Int) Int)
(declare-fun type_c097a7a7_aa76_4605_9155_dcd06980160e_Person ( Int) Bool)
(declare-fun module_year ( Int) Int)
(declare-fun weight13 () Int)
(declare-fun weight14 () Int)
(declare-fun weight11 () Int)
(declare-fun weight12 () Int)
(declare-fun weight15 () Int)
(declare-fun weight10 () Int)
(declare-fun module_code ( Int) Int)
(declare-fun student_year ( Int) Int)
(declare-fun obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 ( Int) Int)
(declare-fun rel_ae4dde3f_be5c_489f_a709_7a4dc8acfa0b_study ( Int Int) Bool)
(declare-fun kd9648f2c_6a7e_4fcc_82f0_0f31b31157fc () Int)
(declare-fun container_ ( Int) Int)
(declare-fun rel_a7515ed4_2a25_4749_ac5e_49f5305c504b_manage ( Int Int) Bool)
(declare-fun type_0aa6eafe_0176_4919_b59d_aeb47de9f13a_Department ( Int) Bool)
(declare-fun person_age ( Int) Int)
(declare-fun kbd24717e_d4dd_47af_a47c_78354b38e8e4 () Int)
(declare-fun weight9 () Int)
(declare-fun weight8 () Int)
(declare-fun oclIncludes ( Int Int) Bool)
(declare-fun type_837e766d_5986_41c6_80e8_0b64551b85b0_Module ( Int) Bool)
(declare-fun type_c4349201_d4fe_445d_9ac6_465fd6e40b85_University ( Int) Bool)
(declare-fun aux1 () Int)
(declare-fun aux0 () Int)
(declare-fun module_description ( Int) Int)
(declare-fun aux3 () Int)
(declare-fun aux2 () Int)
(declare-fun k22e9b417_828f_4936_8fb0_3d60b76a5f53 () Int)
(declare-fun aux9 () Int)
(declare-fun aux8 () Int)
(declare-fun aux5 () Int)
(declare-fun aux4 () Int)
(declare-fun aux7 () Int)
(declare-fun aux6 () Int)
(declare-fun weight7 () Int)
(declare-fun student_id ( Int) Int)
(declare-fun weight6 () Int)
(declare-fun weight5 () Int)
(declare-fun weight4 () Int)
(declare-fun weight3 () Int)
(declare-fun ObjAt ( Int Int) Int)
(declare-fun weight2 () Int)
(declare-fun weight1 () Int)
(declare-fun weight0 () Int)

;formula(s) generated
(assert (exists ((x Int)(y Int)) (and (and ( rel_a7515ed4_2a25_4749_ac5e_49f5305c504b_manage ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 x )   ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 y )  )  (and ( type_c4349201_d4fe_445d_9ac6_465fd6e40b85_University x )  ( type_0aa6eafe_0176_4919_b59d_aeb47de9f13a_Department y ) )) (>= ( Cardinality ( container_ x )  )  1))))
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_a7515ed4_2a25_4749_ac5e_49f5305c504b_manage ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 x )   ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 y )  )  (and ( type_c4349201_d4fe_445d_9ac6_465fd6e40b85_University x )  ( type_0aa6eafe_0176_4919_b59d_aeb47de9f13a_Department y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k4590d0bd_08df_4852_839e_c63fff84353d)) (>= k4590d0bd_08df_4852_839e_c63fff84353d 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k22e9b417_828f_4936_8fb0_3d60b76a5f53)) (>= k22e9b417_828f_4936_8fb0_3d60b76a5f53 0))))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_a7515ed4_2a25_4749_ac5e_49f5305c504b_manage ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 x )   ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 y )  )  (and ( type_c4349201_d4fe_445d_9ac6_465fd6e40b85_University x )  ( type_0aa6eafe_0176_4919_b59d_aeb47de9f13a_Department y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k4590d0bd_08df_4852_839e_c63fff84353d)) (>= k4590d0bd_08df_4852_839e_c63fff84353d 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k22e9b417_828f_4936_8fb0_3d60b76a5f53)) (>= k22e9b417_828f_4936_8fb0_3d60b76a5f53 0))))))
(assert (and (=> (= aux0 0) (= weight0 1)) (=> (= aux0 1) (= weight0 0))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_ae4dde3f_be5c_489f_a709_7a4dc8acfa0b_study ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 x )   ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 y )  )  (and (and ( type_bbfe2c6f_e487_4cd4_9305_d66b484d7af2_Student x )  ( type_c097a7a7_aa76_4605_9155_dcd06980160e_Person x ) ) ( type_837e766d_5986_41c6_80e8_0b64551b85b0_Module y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k921f62aa_7596_42f4_9e3f_4b8e7699fef3)) (>= k921f62aa_7596_42f4_9e3f_4b8e7699fef3 0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kd9648f2c_6a7e_4fcc_82f0_0f31b31157fc)) (>= kd9648f2c_6a7e_4fcc_82f0_0f31b31157fc 0))))) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_ae4dde3f_be5c_489f_a709_7a4dc8acfa0b_study ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 x )   ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 y )  )  (and (and ( type_bbfe2c6f_e487_4cd4_9305_d66b484d7af2_Student x )  ( type_c097a7a7_aa76_4605_9155_dcd06980160e_Person x ) ) ( type_837e766d_5986_41c6_80e8_0b64551b85b0_Module y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k921f62aa_7596_42f4_9e3f_4b8e7699fef3)) (>= k921f62aa_7596_42f4_9e3f_4b8e7699fef3 0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kd9648f2c_6a7e_4fcc_82f0_0f31b31157fc)) (>= kd9648f2c_6a7e_4fcc_82f0_0f31b31157fc 0))))))
(assert (and (=> (= aux1 0) (= weight1 1)) (=> (= aux1 1) (= weight1 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_e84e13be_e965_4264_b140_fecce28fc0fb_teach ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 x )   ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 y )  )  (and ( type_0aa6eafe_0176_4919_b59d_aeb47de9f13a_Department x )  (and ( type_bbfe2c6f_e487_4cd4_9305_d66b484d7af2_Student y )  ( type_c097a7a7_aa76_4605_9155_dcd06980160e_Person y ) ))) (>= ( Cardinality ( container_ x )  )  1))))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_e84e13be_e965_4264_b140_fecce28fc0fb_teach ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 x )   ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 y )  )  (and ( type_0aa6eafe_0176_4919_b59d_aeb47de9f13a_Department x )  (and ( type_bbfe2c6f_e487_4cd4_9305_d66b484d7af2_Student y )  ( type_c097a7a7_aa76_4605_9155_dcd06980160e_Person y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k1e3c8a8d_51ca_4aed_90bf_185df60ee2aa)) (>= k1e3c8a8d_51ca_4aed_90bf_185df60ee2aa 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kbd24717e_d4dd_47af_a47c_78354b38e8e4)) (>= kbd24717e_d4dd_47af_a47c_78354b38e8e4 0))))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_e84e13be_e965_4264_b140_fecce28fc0fb_teach ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 x )   ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 y )  )  (and ( type_0aa6eafe_0176_4919_b59d_aeb47de9f13a_Department x )  (and ( type_bbfe2c6f_e487_4cd4_9305_d66b484d7af2_Student y )  ( type_c097a7a7_aa76_4605_9155_dcd06980160e_Person y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k1e3c8a8d_51ca_4aed_90bf_185df60ee2aa)) (>= k1e3c8a8d_51ca_4aed_90bf_185df60ee2aa 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kbd24717e_d4dd_47af_a47c_78354b38e8e4)) (>= kbd24717e_d4dd_47af_a47c_78354b38e8e4 0))))))
(assert (and (=> (= aux2 0) (= weight2 1)) (=> (= aux2 1) (= weight2 0))))
(assert (and (>= aux3 0) (<= aux3 1)))
(assert (or (or (and (forall ((v Int)) (=> ( type_837e766d_5986_41c6_80e8_0b64551b85b0_Module v )  (>= ( module_year ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 v )  )  1))) (forall ((v Int)) (=> ( type_837e766d_5986_41c6_80e8_0b64551b85b0_Module v )  (<= ( module_year ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 v )  )  5)))) (and (= aux3 1) true)) (and (= aux3 0) false)))
(assert (and (=> (= aux3 0) (= weight3 1)) (=> (= aux3 1) (= weight3 0))))
(assert (and (>= aux4 0) (<= aux4 1)))
(assert (or (or (forall ((p Int)) (=> ( type_c097a7a7_aa76_4605_9155_dcd06980160e_Person p )  (and (> ( person_age ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 p )  )  0) (< ( person_age ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 p )  )  18)))) (and (= aux4 1) true)) (and (= aux4 0) false)))
(assert (and (=> (= aux4 0) (= weight4 1)) (=> (= aux4 1) (= weight4 0))))
(assert (and (>= aux5 0) (<= aux5 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_bbfe2c6f_e487_4cd4_9305_d66b484d7af2_Student v )  ( type_c097a7a7_aa76_4605_9155_dcd06980160e_Person v ) ) (> ( person_age ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 v )  )  18))) (and (= aux5 1) true)) (and (= aux5 0) false)))
(assert (and (=> (= aux5 0) (= weight5 1)) (=> (= aux5 1) (= weight5 0))))
(assert (and (>= aux6 0) (<= aux6 1)))
(assert (or (or (and (forall ((v Int)) (=> (and ( type_bbfe2c6f_e487_4cd4_9305_d66b484d7af2_Student v )  ( type_c097a7a7_aa76_4605_9155_dcd06980160e_Person v ) ) (>= ( student_year ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 v )  )  1))) (forall ((v Int)) (=> (and ( type_bbfe2c6f_e487_4cd4_9305_d66b484d7af2_Student v )  ( type_c097a7a7_aa76_4605_9155_dcd06980160e_Person v ) ) (<= ( student_year ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 v )  )  6)))) (and (= aux6 1) true)) (and (= aux6 0) false)))
(assert (and (=> (= aux6 0) (= weight6 1)) (=> (= aux6 1) (= weight6 0))))
(assert (and (>= aux7 0) (<= aux7 1)))
(assert (or (or (forall ((s1 Int)(s2 Int)) (=> (and (and ( type_bbfe2c6f_e487_4cd4_9305_d66b484d7af2_Student s1 )  ( type_c097a7a7_aa76_4605_9155_dcd06980160e_Person s1 ) ) (and ( type_bbfe2c6f_e487_4cd4_9305_d66b484d7af2_Student s2 )  ( type_c097a7a7_aa76_4605_9155_dcd06980160e_Person s2 ) )) (=> (not (= ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 s1 )  ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 s2 ) ) ) (not (= ( student_id ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 s1 )  )  ( student_id ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 s2 )  ) ) )))) (and (= aux7 1) true)) (and (= aux7 0) false)))
(assert (and (=> (= aux7 0) (= weight7 1)) (=> (= aux7 1) (= weight7 0))))
(assert (and (>= aux8 0) (<= aux8 1)))
(assert (or (or (forall ((s1 Int)) (=> (and ( type_bbfe2c6f_e487_4cd4_9305_d66b484d7af2_Student s1 )  ( type_c097a7a7_aa76_4605_9155_dcd06980160e_Person s1 ) ) (forall ((m1 Int)) (=> (and ( type_837e766d_5986_41c6_80e8_0b64551b85b0_Module m1 )  ( rel_ae4dde3f_be5c_489f_a709_7a4dc8acfa0b_study ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 s1 )   ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 m1 )  ) ) (= ( student_year ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 s1 )  )  ( module_year ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 m1 )  ) ))))) (and (= aux8 1) true)) (and (= aux8 0) false)))
(assert (and (=> (= aux8 0) (= weight8 1)) (=> (= aux8 1) (= weight8 0))))
(assert (and (>= aux9 0) (<= aux9 1)))
(assert (or (or (and (exists ((s Int)) (and (and ( type_bbfe2c6f_e487_4cd4_9305_d66b484d7af2_Student s )  ( type_c097a7a7_aa76_4605_9155_dcd06980160e_Person s ) ) (= ( student_year ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 s )  )  6))) (exists ((s Int)) (and (and ( type_bbfe2c6f_e487_4cd4_9305_d66b484d7af2_Student s )  ( type_c097a7a7_aa76_4605_9155_dcd06980160e_Person s ) ) (< ( student_year ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 s )  )  6)))) (and (= aux9 1) true)) (and (= aux9 0) false)))
(assert (and (=> (= aux9 0) (= weight9 1)) (=> (= aux9 1) (= weight9 0))))
(assert (and (>= aux10 0) (<= aux10 1)))
(assert (or (or (forall ((s Int)) (=> (and ( type_bbfe2c6f_e487_4cd4_9305_d66b484d7af2_Student s )  ( type_c097a7a7_aa76_4605_9155_dcd06980160e_Person s ) ) (exists ((v Int)) (and ( type_837e766d_5986_41c6_80e8_0b64551b85b0_Module v )  ( rel_ae4dde3f_be5c_489f_a709_7a4dc8acfa0b_study ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 s )   ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 v )  ) )))) (and (= aux10 1) true)) (and (= aux10 0) false)))
(assert (and (=> (= aux10 0) (= weight10 1)) (=> (= aux10 1) (= weight10 0))))
(assert (and (>= aux11 0) (<= aux11 1)))
(assert (and (>= aux12 0) (<= aux12 1)))
(assert (and (>= aux13 0) (<= aux13 1)))
(assert (and (>= aux14 0) (<= aux14 1)))
(assert (and (>= aux15 0) (<= aux15 1)))
(assert (or (or (exists ((p Int)) ( type_0aa6eafe_0176_4919_b59d_aeb47de9f13a_Department ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 p )  ) ) (and (= aux11 1) true)) (and (= aux11 0) false)))
(assert (and (=> (= aux11 0) (= weight11 1)) (=> (= aux11 1) (= weight11 0))))
(assert (or (or (exists ((p Int)) ( type_837e766d_5986_41c6_80e8_0b64551b85b0_Module ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 p )  ) ) (and (= aux12 1) true)) (and (= aux12 0) false)))
(assert (and (=> (= aux12 0) (= weight12 1)) (=> (= aux12 1) (= weight12 0))))
(assert (or (or (exists ((p Int)) ( type_c097a7a7_aa76_4605_9155_dcd06980160e_Person ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 p )  ) ) (and (= aux13 1) true)) (and (= aux13 0) false)))
(assert (and (=> (= aux13 0) (= weight13 1)) (=> (= aux13 1) (= weight13 0))))
(assert (or (or (exists ((p Int)) (and ( type_bbfe2c6f_e487_4cd4_9305_d66b484d7af2_Student ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 p )  )  ( type_c097a7a7_aa76_4605_9155_dcd06980160e_Person ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 p )  ) )) (and (= aux14 1) true)) (and (= aux14 0) false)))
(assert (and (=> (= aux14 0) (= weight14 1)) (=> (= aux14 1) (= weight14 0))))
(assert (or (or (exists ((p Int)) ( type_c4349201_d4fe_445d_9ac6_465fd6e40b85_University ( obj_242d558e_e647_4ad8_9ec1_bc3935aaf9d9 p )  ) ) (and (= aux15 1) true)) (and (= aux15 0) false)))
(assert (and (=> (= aux15 0) (= weight15 1)) (=> (= aux15 1) (= weight15 0))))
(assert (= (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ weight0 weight1) weight2) weight3) weight4) weight5) weight6) weight7) weight8) weight9) weight10) weight11) weight12) weight13) weight14) weight15) 14))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 0)) (= weight4 0)) (= weight5 1)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 1)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 1)) (= weight5 0)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 0)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 0)) (= weight5 1)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 0)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 0)) (= weight4 1)) (= weight5 0)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 1)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 1)) (= weight5 0)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 1)) (= weight10 0)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 1)) (= weight5 0)) (= weight6 1)) (= weight7 1)) (= weight8 0)) (= weight9 1)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 0)) (= weight5 1)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 1)) (= weight10 0)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 0)) (= weight5 1)) (= weight6 1)) (= weight7 1)) (= weight8 0)) (= weight9 1)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))
