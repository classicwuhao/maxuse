
;this file is automatically generated: Fri Feb 26 15:11:34 GMT 2016

;declarations generated

(declare-fun student_year ( Int) Int )
(declare-fun type_920f3e31_bc83_4388_a035_7285abc81399_Student ( Int) Bool )
(declare-fun type_d386889d_5277_4c37_842c_a24f2c885c00_Module ( Int) Bool )
(declare-fun obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 ( Int) Int )
(declare-fun module_code ( Int) Int )
(declare-fun module_year ( Int) Int )
(declare-fun module_credit ( Int) Int )
(declare-fun student_id ( Int) Int )
(declare-fun aux7 () Int )
(declare-fun aux6 () Int )
(declare-fun aux5 () Int )
(declare-fun aux4 () Int )
(declare-fun aux8 () Int )
(declare-fun rel_a0f405e5_11c9_450f_aae1_6463fafe8889_study ( Int Int) Bool )
(declare-fun person_age ( Int) Int )
(declare-fun aux2 () Int )
(declare-fun aux3 () Int )
(declare-fun aux0 () Int )
(declare-fun aux1 () Int )
(declare-fun person_mature ( Int) Bool )
(declare-fun type_2f5cea85_281f_4548_b3f8_8710f3e02bed_Person ( Int) Bool )

;formulas generated
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (and (forall ((p Int)) (=> ( type_d386889d_5277_4c37_842c_a24f2c885c00_Module p )  (>= ( module_year ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 p )  )  1))) (forall ((p Int)) (=> ( type_d386889d_5277_4c37_842c_a24f2c885c00_Module p )  (<= ( module_year ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 p )  )  5)))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (forall ((p Int)) (=> ( type_2f5cea85_281f_4548_b3f8_8710f3e02bed_Person p )  (< ( person_age ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 p )  )  18))) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (forall ((p Int)) (=> ( type_2f5cea85_281f_4548_b3f8_8710f3e02bed_Person p )  (not (= ( person_mature ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 p )  )  true) ))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (and (>= aux3 0) (<= aux3 1)))
(assert (or (or (forall ((p Int)) (=> (and ( type_920f3e31_bc83_4388_a035_7285abc81399_Student p )  ( type_2f5cea85_281f_4548_b3f8_8710f3e02bed_Person p ) ) (>= ( person_age ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 p )  )  18))) (and (= aux3 1) true)) (and (= aux3 0) false)))
(assert (and (>= aux4 0) (<= aux4 1)))
(assert (or (or (and (forall ((p Int)) (=> (and ( type_920f3e31_bc83_4388_a035_7285abc81399_Student p )  ( type_2f5cea85_281f_4548_b3f8_8710f3e02bed_Person p ) ) (>= ( student_year ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 p )  )  1))) (forall ((p Int)) (=> (and ( type_920f3e31_bc83_4388_a035_7285abc81399_Student p )  ( type_2f5cea85_281f_4548_b3f8_8710f3e02bed_Person p ) ) (<= ( student_year ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 p )  )  6)))) (and (= aux4 1) true)) (and (= aux4 0) false)))
(assert (and (>= aux5 0) (<= aux5 1)))
(assert (or (or (forall ((s2 Int)(s1 Int)) (=> (and (and ( type_920f3e31_bc83_4388_a035_7285abc81399_Student s1 )  ( type_2f5cea85_281f_4548_b3f8_8710f3e02bed_Person s1 ) ) (and ( type_920f3e31_bc83_4388_a035_7285abc81399_Student s2 )  ( type_2f5cea85_281f_4548_b3f8_8710f3e02bed_Person s2 ) )) (=> (not (= ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 s1 )  ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 s2 ) ) ) (not (= ( student_id ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 s1 )  )  ( student_id ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 s2 )  ) ) )))) (and (= aux5 1) true)) (and (= aux5 0) false)))
(assert (and (>= aux6 0) (<= aux6 1)))
(assert (or (or (forall ((s1 Int)) (=> (and ( type_920f3e31_bc83_4388_a035_7285abc81399_Student s1 )  ( type_2f5cea85_281f_4548_b3f8_8710f3e02bed_Person s1 ) ) (forall ((m1 Int)) (=> (and ( type_d386889d_5277_4c37_842c_a24f2c885c00_Module m1 )  ( rel_a0f405e5_11c9_450f_aae1_6463fafe8889_study ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 s1 )   ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 m1 )  ) ) (= ( student_year ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 s1 )  )  ( module_year ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 m1 )  ) ))))) (and (= aux6 1) true)) (and (= aux6 0) false)))
(assert (and (>= aux7 0) (<= aux7 1)))
(assert (or (or (and (exists ((s Int)) (=> (and ( type_920f3e31_bc83_4388_a035_7285abc81399_Student s )  ( type_2f5cea85_281f_4548_b3f8_8710f3e02bed_Person s ) ) (= ( student_year ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 s )  )  6))) (exists ((s Int)) (=> (and ( type_920f3e31_bc83_4388_a035_7285abc81399_Student s )  ( type_2f5cea85_281f_4548_b3f8_8710f3e02bed_Person s ) ) (< ( student_year ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 s )  )  6)))) (and (= aux7 1) true)) (and (= aux7 0) false)))
(assert (and (>= aux8 0) (<= aux8 1)))
(assert (or (or (forall ((s Int)) (=> (and ( type_920f3e31_bc83_4388_a035_7285abc81399_Student s )  ( type_2f5cea85_281f_4548_b3f8_8710f3e02bed_Person s ) ) (exists ((p Int)) (and ( type_d386889d_5277_4c37_842c_a24f2c885c00_Module p )  ( rel_a0f405e5_11c9_450f_aae1_6463fafe8889_study ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 p )   ( obj_8bde9025_8fd9_46a0_85fb_e0df178fa2f6 s )  ) )))) (and (= aux8 1) true)) (and (= aux8 0) false)))
(assert (exists ((p Int)) ( type_d386889d_5277_4c37_842c_a24f2c885c00_Module p ) ))
(assert (exists ((p Int)) ( type_2f5cea85_281f_4548_b3f8_8710f3e02bed_Person p ) ))
(assert (exists ((p Int)) (and ( type_920f3e31_bc83_4388_a035_7285abc81399_Student p )  ( type_2f5cea85_281f_4548_b3f8_8710f3e02bed_Person p ) )))
(assert (= (+ (+ (+ (+ (+ (+ (+ (+ aux0 aux1) aux2) aux3) aux4) aux5) aux6) aux7) aux8) 0))

 ;end of formula 