
;this file is automatically generated: Fri Jul 26 18:26:42 IST 2019

;declarations generated

(declare-fun k72bfc24b_f710_480a_8ee8_177f978b7fd0 () Int)
(declare-fun oclExcludes ( Int Int) Bool)
(declare-fun aux15 () Int)
(declare-fun aux12 () Int)
(declare-fun aux11 () Int)
(declare-fun aux14 () Int)
(declare-fun aux13 () Int)
(declare-fun module_credit ( Int) Int)
(declare-fun aux10 () Int)
(declare-fun oclSelect ( Int Bool) Int)
(declare-fun type_5f98569a_4f43_4ceb_8f17_6411e4f35053_Student ( Int) Bool)
(declare-fun rel_785a3acf_ac02_437f_9f24_87a7f18924b7_study ( Int Int) Bool)
(declare-fun person_mature ( Int) Bool)
(declare-fun Cardinality ( Int) Int)
(declare-fun module_year ( Int) Int)
(declare-fun type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person ( Int) Bool)
(declare-fun weight13 () Int)
(declare-fun weight14 () Int)
(declare-fun weight11 () Int)
(declare-fun weight12 () Int)
(declare-fun weight15 () Int)
(declare-fun type_115b4529_fa93_463d_ba78_f12ebc6b9ae1_Module ( Int) Bool)
(declare-fun rel_2afff9a1_99d9_4f69_ab60_828d7b4f9b14_manage ( Int Int) Bool)
(declare-fun weight10 () Int)
(declare-fun module_code ( Int) Int)
(declare-fun student_year ( Int) Int)
(declare-fun k0c7d4aa4_cd15_476a_a106_d2581abf3358 () Int)
(declare-fun k2fdea993_a34e_4776_9f09_39cebdf4dbe8 () Int)
(declare-fun container_ ( Int) Int)
(declare-fun obj_615d6819_caca_4a44_8303_655d0967613c ( Int) Int)
(declare-fun person_age ( Int) Int)
(declare-fun ka5c1e225_a457_4297_9bf4_551e0ac00a44 () Int)
(declare-fun k014b1275_66b1_4da6_a3a9_898f67ea36b0 () Int)
(declare-fun weight9 () Int)
(declare-fun weight8 () Int)
(declare-fun oclIncludes ( Int Int) Bool)
(declare-fun aux1 () Int)
(declare-fun aux0 () Int)
(declare-fun module_description ( Int) Int)
(declare-fun aux3 () Int)
(declare-fun aux2 () Int)
(declare-fun rel_d2de27b2_3646_4a12_96a2_c31368b67daf_teach ( Int Int) Bool)
(declare-fun type_fa332170_354a_44e9_b61c_1e97fa1e8b3d_Department ( Int) Bool)
(declare-fun aux9 () Int)
(declare-fun aux8 () Int)
(declare-fun type_c3ac46d2_1996_4333_a5f5_70fc75d015ef_University ( Int) Bool)
(declare-fun aux5 () Int)
(declare-fun aux4 () Int)
(declare-fun aux7 () Int)
(declare-fun aux6 () Int)
(declare-fun kaa167ad6_9941_42ee_bb91_291cf28be0bc () Int)
(declare-fun weight7 () Int)
(declare-fun student_id ( Int) Int)
(declare-fun weight6 () Int)
(declare-fun weight5 () Int)
(declare-fun weight4 () Int)
(declare-fun weight3 () Int)
(declare-fun ObjAt ( Int Int) Int)
(declare-fun weight2 () Int)
(declare-fun weight1 () Int)
(declare-fun weight0 () Int)

;formula(s) generated
(assert (exists ((x Int)(y Int)) (and (and ( rel_2afff9a1_99d9_4f69_ab60_828d7b4f9b14_manage ( obj_615d6819_caca_4a44_8303_655d0967613c x )   ( obj_615d6819_caca_4a44_8303_655d0967613c y )  )  (and ( type_c3ac46d2_1996_4333_a5f5_70fc75d015ef_University x )  ( type_fa332170_354a_44e9_b61c_1e97fa1e8b3d_Department y ) )) (>= ( Cardinality ( container_ x )  )  1))))
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_2afff9a1_99d9_4f69_ab60_828d7b4f9b14_manage ( obj_615d6819_caca_4a44_8303_655d0967613c x )   ( obj_615d6819_caca_4a44_8303_655d0967613c y )  )  (and ( type_c3ac46d2_1996_4333_a5f5_70fc75d015ef_University x )  ( type_fa332170_354a_44e9_b61c_1e97fa1e8b3d_Department y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  ka5c1e225_a457_4297_9bf4_551e0ac00a44)) (>= ka5c1e225_a457_4297_9bf4_551e0ac00a44 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k2fdea993_a34e_4776_9f09_39cebdf4dbe8)) (>= k2fdea993_a34e_4776_9f09_39cebdf4dbe8 0))))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_2afff9a1_99d9_4f69_ab60_828d7b4f9b14_manage ( obj_615d6819_caca_4a44_8303_655d0967613c x )   ( obj_615d6819_caca_4a44_8303_655d0967613c y )  )  (and ( type_c3ac46d2_1996_4333_a5f5_70fc75d015ef_University x )  ( type_fa332170_354a_44e9_b61c_1e97fa1e8b3d_Department y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  ka5c1e225_a457_4297_9bf4_551e0ac00a44)) (>= ka5c1e225_a457_4297_9bf4_551e0ac00a44 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k2fdea993_a34e_4776_9f09_39cebdf4dbe8)) (>= k2fdea993_a34e_4776_9f09_39cebdf4dbe8 0))))))
(assert (and (=> (= aux0 0) (= weight0 1)) (=> (= aux0 1) (= weight0 0))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_785a3acf_ac02_437f_9f24_87a7f18924b7_study ( obj_615d6819_caca_4a44_8303_655d0967613c x )   ( obj_615d6819_caca_4a44_8303_655d0967613c y )  )  (and (and ( type_5f98569a_4f43_4ceb_8f17_6411e4f35053_Student x )  ( type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person x ) ) ( type_115b4529_fa93_463d_ba78_f12ebc6b9ae1_Module y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k72bfc24b_f710_480a_8ee8_177f978b7fd0)) (>= k72bfc24b_f710_480a_8ee8_177f978b7fd0 0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kaa167ad6_9941_42ee_bb91_291cf28be0bc)) (>= kaa167ad6_9941_42ee_bb91_291cf28be0bc 0))))) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_785a3acf_ac02_437f_9f24_87a7f18924b7_study ( obj_615d6819_caca_4a44_8303_655d0967613c x )   ( obj_615d6819_caca_4a44_8303_655d0967613c y )  )  (and (and ( type_5f98569a_4f43_4ceb_8f17_6411e4f35053_Student x )  ( type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person x ) ) ( type_115b4529_fa93_463d_ba78_f12ebc6b9ae1_Module y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k72bfc24b_f710_480a_8ee8_177f978b7fd0)) (>= k72bfc24b_f710_480a_8ee8_177f978b7fd0 0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kaa167ad6_9941_42ee_bb91_291cf28be0bc)) (>= kaa167ad6_9941_42ee_bb91_291cf28be0bc 0))))))
(assert (and (=> (= aux1 0) (= weight1 1)) (=> (= aux1 1) (= weight1 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_d2de27b2_3646_4a12_96a2_c31368b67daf_teach ( obj_615d6819_caca_4a44_8303_655d0967613c x )   ( obj_615d6819_caca_4a44_8303_655d0967613c y )  )  (and ( type_fa332170_354a_44e9_b61c_1e97fa1e8b3d_Department x )  (and ( type_5f98569a_4f43_4ceb_8f17_6411e4f35053_Student y )  ( type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person y ) ))) (>= ( Cardinality ( container_ x )  )  1))))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_d2de27b2_3646_4a12_96a2_c31368b67daf_teach ( obj_615d6819_caca_4a44_8303_655d0967613c x )   ( obj_615d6819_caca_4a44_8303_655d0967613c y )  )  (and ( type_fa332170_354a_44e9_b61c_1e97fa1e8b3d_Department x )  (and ( type_5f98569a_4f43_4ceb_8f17_6411e4f35053_Student y )  ( type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k014b1275_66b1_4da6_a3a9_898f67ea36b0)) (>= k014b1275_66b1_4da6_a3a9_898f67ea36b0 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k0c7d4aa4_cd15_476a_a106_d2581abf3358)) (>= k0c7d4aa4_cd15_476a_a106_d2581abf3358 0))))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_d2de27b2_3646_4a12_96a2_c31368b67daf_teach ( obj_615d6819_caca_4a44_8303_655d0967613c x )   ( obj_615d6819_caca_4a44_8303_655d0967613c y )  )  (and ( type_fa332170_354a_44e9_b61c_1e97fa1e8b3d_Department x )  (and ( type_5f98569a_4f43_4ceb_8f17_6411e4f35053_Student y )  ( type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k014b1275_66b1_4da6_a3a9_898f67ea36b0)) (>= k014b1275_66b1_4da6_a3a9_898f67ea36b0 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k0c7d4aa4_cd15_476a_a106_d2581abf3358)) (>= k0c7d4aa4_cd15_476a_a106_d2581abf3358 0))))))
(assert (and (=> (= aux2 0) (= weight2 1)) (=> (= aux2 1) (= weight2 0))))
(assert (and (>= aux3 0) (<= aux3 1)))
(assert (or (or (and (forall ((v Int)) (=> ( type_115b4529_fa93_463d_ba78_f12ebc6b9ae1_Module v )  (>= ( module_year ( obj_615d6819_caca_4a44_8303_655d0967613c v )  )  1))) (forall ((v Int)) (=> ( type_115b4529_fa93_463d_ba78_f12ebc6b9ae1_Module v )  (<= ( module_year ( obj_615d6819_caca_4a44_8303_655d0967613c v )  )  5)))) (and (= aux3 1) true)) (and (= aux3 0) false)))
(assert (and (=> (= aux3 0) (= weight3 1)) (=> (= aux3 1) (= weight3 0))))
(assert (and (>= aux4 0) (<= aux4 1)))
(assert (or (or (forall ((p Int)) (=> ( type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person p )  (and (> ( person_age ( obj_615d6819_caca_4a44_8303_655d0967613c p )  )  0) (< ( person_age ( obj_615d6819_caca_4a44_8303_655d0967613c p )  )  18)))) (and (= aux4 1) true)) (and (= aux4 0) false)))
(assert (and (=> (= aux4 0) (= weight4 1)) (=> (= aux4 1) (= weight4 0))))
(assert (and (>= aux5 0) (<= aux5 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_5f98569a_4f43_4ceb_8f17_6411e4f35053_Student v )  ( type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person v ) ) (> ( person_age ( obj_615d6819_caca_4a44_8303_655d0967613c v )  )  18))) (and (= aux5 1) true)) (and (= aux5 0) false)))
(assert (and (=> (= aux5 0) (= weight5 1)) (=> (= aux5 1) (= weight5 0))))
(assert (and (>= aux6 0) (<= aux6 1)))
(assert (or (or (and (forall ((v Int)) (=> (and ( type_5f98569a_4f43_4ceb_8f17_6411e4f35053_Student v )  ( type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person v ) ) (>= ( student_year ( obj_615d6819_caca_4a44_8303_655d0967613c v )  )  1))) (forall ((v Int)) (=> (and ( type_5f98569a_4f43_4ceb_8f17_6411e4f35053_Student v )  ( type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person v ) ) (<= ( student_year ( obj_615d6819_caca_4a44_8303_655d0967613c v )  )  6)))) (and (= aux6 1) true)) (and (= aux6 0) false)))
(assert (and (=> (= aux6 0) (= weight6 1)) (=> (= aux6 1) (= weight6 0))))
(assert (and (>= aux7 0) (<= aux7 1)))
(assert (or (or (forall ((s1 Int)(s2 Int)) (=> (and (and ( type_5f98569a_4f43_4ceb_8f17_6411e4f35053_Student s1 )  ( type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person s1 ) ) (and ( type_5f98569a_4f43_4ceb_8f17_6411e4f35053_Student s2 )  ( type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person s2 ) )) (=> (not (= ( obj_615d6819_caca_4a44_8303_655d0967613c s1 )  ( obj_615d6819_caca_4a44_8303_655d0967613c s2 ) ) ) (not (= ( student_id ( obj_615d6819_caca_4a44_8303_655d0967613c s1 )  )  ( student_id ( obj_615d6819_caca_4a44_8303_655d0967613c s2 )  ) ) )))) (and (= aux7 1) true)) (and (= aux7 0) false)))
(assert (and (=> (= aux7 0) (= weight7 1)) (=> (= aux7 1) (= weight7 0))))
(assert (and (>= aux8 0) (<= aux8 1)))
(assert (or (or (forall ((s1 Int)) (=> (and ( type_5f98569a_4f43_4ceb_8f17_6411e4f35053_Student s1 )  ( type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person s1 ) ) (forall ((m1 Int)) (=> (and ( type_115b4529_fa93_463d_ba78_f12ebc6b9ae1_Module m1 )  ( rel_785a3acf_ac02_437f_9f24_87a7f18924b7_study ( obj_615d6819_caca_4a44_8303_655d0967613c s1 )   ( obj_615d6819_caca_4a44_8303_655d0967613c m1 )  ) ) (= ( student_year ( obj_615d6819_caca_4a44_8303_655d0967613c s1 )  )  ( module_year ( obj_615d6819_caca_4a44_8303_655d0967613c m1 )  ) ))))) (and (= aux8 1) true)) (and (= aux8 0) false)))
(assert (and (=> (= aux8 0) (= weight8 1)) (=> (= aux8 1) (= weight8 0))))
(assert (and (>= aux9 0) (<= aux9 1)))
(assert (or (or (and (exists ((s Int)) (and (and ( type_5f98569a_4f43_4ceb_8f17_6411e4f35053_Student s )  ( type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person s ) ) (= ( student_year ( obj_615d6819_caca_4a44_8303_655d0967613c s )  )  6))) (exists ((s Int)) (and (and ( type_5f98569a_4f43_4ceb_8f17_6411e4f35053_Student s )  ( type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person s ) ) (< ( student_year ( obj_615d6819_caca_4a44_8303_655d0967613c s )  )  6)))) (and (= aux9 1) true)) (and (= aux9 0) false)))
(assert (and (=> (= aux9 0) (= weight9 1)) (=> (= aux9 1) (= weight9 0))))
(assert (and (>= aux10 0) (<= aux10 1)))
(assert (or (or (forall ((s Int)) (=> (and ( type_5f98569a_4f43_4ceb_8f17_6411e4f35053_Student s )  ( type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person s ) ) (exists ((v Int)) (and ( type_115b4529_fa93_463d_ba78_f12ebc6b9ae1_Module v )  ( rel_785a3acf_ac02_437f_9f24_87a7f18924b7_study ( obj_615d6819_caca_4a44_8303_655d0967613c s )   ( obj_615d6819_caca_4a44_8303_655d0967613c v )  ) )))) (and (= aux10 1) true)) (and (= aux10 0) false)))
(assert (and (=> (= aux10 0) (= weight10 1)) (=> (= aux10 1) (= weight10 0))))
(assert (and (>= aux11 0) (<= aux11 1)))
(assert (and (>= aux12 0) (<= aux12 1)))
(assert (and (>= aux13 0) (<= aux13 1)))
(assert (and (>= aux14 0) (<= aux14 1)))
(assert (and (>= aux15 0) (<= aux15 1)))
(assert (or (or (exists ((p Int)) ( type_fa332170_354a_44e9_b61c_1e97fa1e8b3d_Department ( obj_615d6819_caca_4a44_8303_655d0967613c p )  ) ) (and (= aux11 1) true)) (and (= aux11 0) false)))
(assert (and (=> (= aux11 0) (= weight11 1)) (=> (= aux11 1) (= weight11 0))))
(assert (or (or (exists ((p Int)) ( type_115b4529_fa93_463d_ba78_f12ebc6b9ae1_Module ( obj_615d6819_caca_4a44_8303_655d0967613c p )  ) ) (and (= aux12 1) true)) (and (= aux12 0) false)))
(assert (and (=> (= aux12 0) (= weight12 1)) (=> (= aux12 1) (= weight12 0))))
(assert (or (or (exists ((p Int)) ( type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person ( obj_615d6819_caca_4a44_8303_655d0967613c p )  ) ) (and (= aux13 1) true)) (and (= aux13 0) false)))
(assert (and (=> (= aux13 0) (= weight13 1)) (=> (= aux13 1) (= weight13 0))))
(assert (or (or (exists ((p Int)) (and ( type_5f98569a_4f43_4ceb_8f17_6411e4f35053_Student ( obj_615d6819_caca_4a44_8303_655d0967613c p )  )  ( type_6a80a80e_80da_4f14_9227_ca9a4c7a2d14_Person ( obj_615d6819_caca_4a44_8303_655d0967613c p )  ) )) (and (= aux14 1) true)) (and (= aux14 0) false)))
(assert (and (=> (= aux14 0) (= weight14 1)) (=> (= aux14 1) (= weight14 0))))
(assert (or (or (exists ((p Int)) ( type_c3ac46d2_1996_4333_a5f5_70fc75d015ef_University ( obj_615d6819_caca_4a44_8303_655d0967613c p )  ) ) (and (= aux15 1) true)) (and (= aux15 0) false)))
(assert (and (=> (= aux15 0) (= weight15 1)) (=> (= aux15 1) (= weight15 0))))
(assert (= (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ weight0 weight1) weight2) weight3) weight4) weight5) weight6) weight7) weight8) weight9) weight10) weight11) weight12) weight13) weight14) weight15) 14))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 0)) (= weight4 0)) (= weight5 1)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 1)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 1)) (= weight5 0)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 0)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 0)) (= weight5 1)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 0)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 0)) (= weight4 1)) (= weight5 0)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 1)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 1)) (= weight5 0)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 1)) (= weight10 0)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 1)) (= weight5 0)) (= weight6 1)) (= weight7 1)) (= weight8 0)) (= weight9 1)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 0)) (= weight5 1)) (= weight6 1)) (= weight7 1)) (= weight8 1)) (= weight9 1)) (= weight10 0)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 1)) (= weight3 1)) (= weight4 0)) (= weight5 1)) (= weight6 1)) (= weight7 1)) (= weight8 0)) (= weight9 1)) (= weight10 1)) (= weight11 1)) (= weight12 1)) (= weight13 1)) (= weight14 1)) (= weight15 1)) ))
