
;this file is automatically generated: Wed Aug 31 18:04:04 IST 2016

;declarations generated

(declare-fun type_36ddd47f_7cf3_4930_9f8b_520ddbace5cf_Student ( Int) Bool )
(declare-fun oclExcludes ( Int Int) Bool )
(declare-fun module_credit ( Int) Int )
(declare-fun oclSelect ( Int Bool) Int )
(declare-fun rel_5ef24551_862e_4803_beae_ba926d77b056_study ( Int Int) Bool )
(declare-fun person_mature ( Int) Bool )
(declare-fun Cardinality ( Int) Int )
(declare-fun k45e06b1a_0f9b_45ec_b6c9_91ac1a680f99 () Int )
(declare-fun type_a528effd_7f06_4d70_a8e1_f4f051f43862_Module ( Int) Bool )
(declare-fun obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e ( Int) Int )
(declare-fun module_year ( Int) Int )
(declare-fun module_code ( Int) Int )
(declare-fun student_year ( Int) Int )
(declare-fun type_8d885979_9040_4e22_a852_37294c8cae8c_Person ( Int) Bool )
(declare-fun container_ ( Int) Int )
(declare-fun person_age ( Int) Int )
(declare-fun k12abc5f4_bc5b_4098_9972_8119d64d8a0f () Int )
(declare-fun oclIncludes ( Int Int) Bool )
(declare-fun aux1 () Int )
(declare-fun aux0 () Int )
(declare-fun module_description ( Int) Int )
(declare-fun aux3 () Int )
(declare-fun aux2 () Int )
(declare-fun aux8 () Int )
(declare-fun aux5 () Int )
(declare-fun aux4 () Int )
(declare-fun aux7 () Int )
(declare-fun aux6 () Int )
(declare-fun weight7 () Int )
(declare-fun student_id ( Int) Int )
(declare-fun weight6 () Int )
(declare-fun weight5 () Int )
(declare-fun weight4 () Int )
(declare-fun weight3 () Int )
(declare-fun ObjAt ( Int Int) Int )
(declare-fun weight2 () Int )
(declare-fun weight1 () Int )
(declare-fun weight0 () Int )

;formula(s) generated
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_5ef24551_862e_4803_beae_ba926d77b056_study ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e x )   ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e y )  )  (and (and ( type_36ddd47f_7cf3_4930_9f8b_520ddbace5cf_Student x )  ( type_8d885979_9040_4e22_a852_37294c8cae8c_Person x ) ) ( type_a528effd_7f06_4d70_a8e1_f4f051f43862_Module y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k12abc5f4_bc5b_4098_9972_8119d64d8a0f)) (>= k12abc5f4_bc5b_4098_9972_8119d64d8a0f 0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k45e06b1a_0f9b_45ec_b6c9_91ac1a680f99)) (>= k45e06b1a_0f9b_45ec_b6c9_91ac1a680f99 0))))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_5ef24551_862e_4803_beae_ba926d77b056_study ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e x )   ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e y )  )  (and (and ( type_36ddd47f_7cf3_4930_9f8b_520ddbace5cf_Student x )  ( type_8d885979_9040_4e22_a852_37294c8cae8c_Person x ) ) ( type_a528effd_7f06_4d70_a8e1_f4f051f43862_Module y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k12abc5f4_bc5b_4098_9972_8119d64d8a0f)) (>= k12abc5f4_bc5b_4098_9972_8119d64d8a0f 0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k45e06b1a_0f9b_45ec_b6c9_91ac1a680f99)) (>= k45e06b1a_0f9b_45ec_b6c9_91ac1a680f99 0))))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (and (forall ((v Int)) (=> ( type_a528effd_7f06_4d70_a8e1_f4f051f43862_Module v )  (>= ( module_year ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e v )  )  1))) (forall ((v Int)) (=> ( type_a528effd_7f06_4d70_a8e1_f4f051f43862_Module v )  (<= ( module_year ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e v )  )  5)))) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (and (=> (= aux1 0) (= weight0 1)) (=> (= aux1 1) (= weight0 0))))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (forall ((p Int)) (=> ( type_8d885979_9040_4e22_a852_37294c8cae8c_Person p )  (and (> ( person_age ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e p )  )  0) (< ( person_age ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e p )  )  18)))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (and (=> (= aux2 0) (= weight1 1)) (=> (= aux2 1) (= weight1 0))))
(assert (and (>= aux3 0) (<= aux3 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_36ddd47f_7cf3_4930_9f8b_520ddbace5cf_Student v )  ( type_8d885979_9040_4e22_a852_37294c8cae8c_Person v ) ) (> ( person_age ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e v )  )  18))) (and (= aux3 1) true)) (and (= aux3 0) false)))
(assert (and (=> (= aux3 0) (= weight2 1)) (=> (= aux3 1) (= weight2 0))))
(assert (and (>= aux4 0) (<= aux4 1)))
(assert (or (or (and (forall ((v Int)) (=> (and ( type_36ddd47f_7cf3_4930_9f8b_520ddbace5cf_Student v )  ( type_8d885979_9040_4e22_a852_37294c8cae8c_Person v ) ) (>= ( student_year ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e v )  )  1))) (forall ((v Int)) (=> (and ( type_36ddd47f_7cf3_4930_9f8b_520ddbace5cf_Student v )  ( type_8d885979_9040_4e22_a852_37294c8cae8c_Person v ) ) (<= ( student_year ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e v )  )  6)))) (and (= aux4 1) true)) (and (= aux4 0) false)))
(assert (and (=> (= aux4 0) (= weight3 1)) (=> (= aux4 1) (= weight3 0))))
(assert (and (>= aux5 0) (<= aux5 1)))
(assert (or (or (forall ((s1 Int)(s2 Int)) (=> (and (and ( type_36ddd47f_7cf3_4930_9f8b_520ddbace5cf_Student s1 )  ( type_8d885979_9040_4e22_a852_37294c8cae8c_Person s1 ) ) (and ( type_36ddd47f_7cf3_4930_9f8b_520ddbace5cf_Student s2 )  ( type_8d885979_9040_4e22_a852_37294c8cae8c_Person s2 ) )) (=> (not (= ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e s1 )  ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e s2 ) ) ) (not (= ( student_id ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e s1 )  )  ( student_id ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e s2 )  ) ) )))) (and (= aux5 1) true)) (and (= aux5 0) false)))
(assert (and (=> (= aux5 0) (= weight4 1)) (=> (= aux5 1) (= weight4 0))))
(assert (and (>= aux6 0) (<= aux6 1)))
(assert (or (or (forall ((s1 Int)) (=> (and ( type_36ddd47f_7cf3_4930_9f8b_520ddbace5cf_Student s1 )  ( type_8d885979_9040_4e22_a852_37294c8cae8c_Person s1 ) ) (forall ((m1 Int)) (=> (and ( type_a528effd_7f06_4d70_a8e1_f4f051f43862_Module m1 )  ( rel_5ef24551_862e_4803_beae_ba926d77b056_study ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e s1 )   ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e m1 )  ) ) (= ( student_year ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e s1 )  )  ( module_year ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e m1 )  ) ))))) (and (= aux6 1) true)) (and (= aux6 0) false)))
(assert (and (=> (= aux6 0) (= weight5 1)) (=> (= aux6 1) (= weight5 0))))
(assert (and (>= aux7 0) (<= aux7 1)))
(assert (or (or (and (exists ((s Int)) (and (and ( type_36ddd47f_7cf3_4930_9f8b_520ddbace5cf_Student s )  ( type_8d885979_9040_4e22_a852_37294c8cae8c_Person s ) ) (= ( student_year ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e s )  )  6))) (exists ((s Int)) (and (and ( type_36ddd47f_7cf3_4930_9f8b_520ddbace5cf_Student s )  ( type_8d885979_9040_4e22_a852_37294c8cae8c_Person s ) ) (< ( student_year ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e s )  )  6)))) (and (= aux7 1) true)) (and (= aux7 0) false)))
(assert (and (=> (= aux7 0) (= weight6 1)) (=> (= aux7 1) (= weight6 0))))
(assert (and (>= aux8 0) (<= aux8 1)))
(assert (or (or (forall ((s Int)) (=> (and ( type_36ddd47f_7cf3_4930_9f8b_520ddbace5cf_Student s )  ( type_8d885979_9040_4e22_a852_37294c8cae8c_Person s ) ) (exists ((v Int)) (and ( type_a528effd_7f06_4d70_a8e1_f4f051f43862_Module v )  ( rel_5ef24551_862e_4803_beae_ba926d77b056_study ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e s )   ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e v )  ) )))) (and (= aux8 1) true)) (and (= aux8 0) false)))
(assert (and (=> (= aux8 0) (= weight7 1)) (=> (= aux8 1) (= weight7 0))))
(assert (exists ((o Int)) ( type_a528effd_7f06_4d70_a8e1_f4f051f43862_Module ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e o )  ) ))
(assert (exists ((o Int)) ( type_8d885979_9040_4e22_a852_37294c8cae8c_Person ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e o )  ) ))
(assert (exists ((o Int)) (and ( type_36ddd47f_7cf3_4930_9f8b_520ddbace5cf_Student ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e o )  )  ( type_8d885979_9040_4e22_a852_37294c8cae8c_Person ( obj_ab8131f1_fd50_4cce_bce6_b8a8a9ee950e o )  ) )))
(assert (= (+ (+ (+ (+ (+ (+ (+ weight0 weight1) weight2) weight3) weight4) weight5) weight6) weight7) 6))
(assert (not (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 0)) (= weight3 1)) (= weight4 1)) (= weight5 0)) (= weight6 1)) (= weight7 1)) ))
(assert (not (and (and (and (and (and (and (and (= weight0 1) (= weight1 0)) (= weight2 1)) (= weight3 1)) (= weight4 1)) (= weight5 0)) (= weight6 1)) (= weight7 1)) ))
(assert (not (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 0)) (= weight3 1)) (= weight4 1)) (= weight5 1)) (= weight6 1)) (= weight7 0)) ))
(assert (not (and (and (and (and (and (and (and (= weight0 0) (= weight1 1)) (= weight2 0)) (= weight3 1)) (= weight4 1)) (= weight5 1)) (= weight6 1)) (= weight7 1)) ))
(assert (not (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 0)) (= weight3 1)) (= weight4 1)) (= weight5 1)) (= weight6 0)) (= weight7 1)) ))
(assert (not (and (and (and (and (and (and (and (= weight0 1) (= weight1 0)) (= weight2 1)) (= weight3 1)) (= weight4 1)) (= weight5 1)) (= weight6 1)) (= weight7 0)) ))
(assert (not (and (and (and (and (and (and (and (= weight0 0) (= weight1 0)) (= weight2 1)) (= weight3 1)) (= weight4 1)) (= weight5 1)) (= weight6 1)) (= weight7 1)) ))
(assert (not (and (and (and (and (and (and (and (= weight0 1) (= weight1 0)) (= weight2 1)) (= weight3 1)) (= weight4 1)) (= weight5 1)) (= weight6 0)) (= weight7 1)) ))
