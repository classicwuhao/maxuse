
;this file is automatically generated: Sat Jun 22 11:04:23 CST 2019

;declarations generated

(declare-fun type_bb877bd5_7c3e_4639_a23c_1aaa61dcc070_Student ( Int) Bool)
(declare-fun oclExcludes ( Int Int) Bool)
(declare-fun k08832b41_f164_4eb7_834b_be89ad471885 () Int)
(declare-fun aux11 () Int)
(declare-fun module_credit ( Int) Int)
(declare-fun aux10 () Int)
(declare-fun oclSelect ( Int Bool) Int)
(declare-fun person_mature ( Int) Bool)
(declare-fun Cardinality ( Int) Int)
(declare-fun type_07b05ea2_7d0c_420a_a0bf_61c379de2a5f_Person ( Int) Bool)
(declare-fun type_b89c744d_4764_4249_b5a9_577465523fea_Module ( Int) Bool)
(declare-fun module_year ( Int) Int)
(declare-fun weight11 () Int)
(declare-fun weight10 () Int)
(declare-fun module_code ( Int) Int)
(declare-fun student_year ( Int) Int)
(declare-fun container_ ( Int) Int)
(declare-fun kf679c85e_5461_4086_b546_075b78b57733 () Int)
(declare-fun person_age ( Int) Int)
(declare-fun weight9 () Int)
(declare-fun weight8 () Int)
(declare-fun rel_4d40c904_ce33_47b2_ae20_7a00c8812c13_study ( Int Int) Bool)
(declare-fun oclIncludes ( Int Int) Bool)
(declare-fun person_name ( Int) Int)
(declare-fun obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b ( Int) Int)
(declare-fun aux1 () Int)
(declare-fun aux0 () Int)
(declare-fun module_description ( Int) Int)
(declare-fun aux3 () Int)
(declare-fun aux2 () Int)
(declare-fun aux9 () Int)
(declare-fun aux8 () Int)
(declare-fun aux5 () Int)
(declare-fun aux4 () Int)
(declare-fun aux7 () Int)
(declare-fun aux6 () Int)
(declare-fun weight7 () Int)
(declare-fun student_id ( Int) Int)
(declare-fun weight6 () Int)
(declare-fun weight5 () Int)
(declare-fun weight4 () Int)
(declare-fun weight3 () Int)
(declare-fun ObjAt ( Int Int) Int)
(declare-fun weight2 () Int)
(declare-fun weight1 () Int)
(declare-fun weight0 () Int)

;formula(s) generated
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_4d40c904_ce33_47b2_ae20_7a00c8812c13_study ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b x )   ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b y )  )  (and (and ( type_bb877bd5_7c3e_4639_a23c_1aaa61dcc070_Student x )  ( type_07b05ea2_7d0c_420a_a0bf_61c379de2a5f_Person x ) ) ( type_b89c744d_4764_4249_b5a9_577465523fea_Module y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kf679c85e_5461_4086_b546_075b78b57733)) (>= kf679c85e_5461_4086_b546_075b78b57733 0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k08832b41_f164_4eb7_834b_be89ad471885)) (>= k08832b41_f164_4eb7_834b_be89ad471885 0))))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_4d40c904_ce33_47b2_ae20_7a00c8812c13_study ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b x )   ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b y )  )  (and (and ( type_bb877bd5_7c3e_4639_a23c_1aaa61dcc070_Student x )  ( type_07b05ea2_7d0c_420a_a0bf_61c379de2a5f_Person x ) ) ( type_b89c744d_4764_4249_b5a9_577465523fea_Module y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kf679c85e_5461_4086_b546_075b78b57733)) (>= kf679c85e_5461_4086_b546_075b78b57733 0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k08832b41_f164_4eb7_834b_be89ad471885)) (>= k08832b41_f164_4eb7_834b_be89ad471885 0))))))
(assert (and (=> (= aux0 0) (= weight0 3)) (=> (= aux0 1) (= weight0 0))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (and (forall ((v Int)) (=> ( type_b89c744d_4764_4249_b5a9_577465523fea_Module v )  (>= ( module_year ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b v )  )  1))) (forall ((v Int)) (=> ( type_b89c744d_4764_4249_b5a9_577465523fea_Module v )  (<= ( module_year ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b v )  )  5)))) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (and (=> (= aux1 0) (= weight1 9)) (=> (= aux1 1) (= weight1 0))))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (forall ((p Int)) (=> ( type_07b05ea2_7d0c_420a_a0bf_61c379de2a5f_Person p )  (and (> ( person_age ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b p )  )  0) (< ( person_age ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b p )  )  18)))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (and (=> (= aux2 0) (= weight2 11)) (=> (= aux2 1) (= weight2 0))))
(assert (and (>= aux3 0) (<= aux3 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_bb877bd5_7c3e_4639_a23c_1aaa61dcc070_Student v )  ( type_07b05ea2_7d0c_420a_a0bf_61c379de2a5f_Person v ) ) (> ( person_age ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b v )  )  18))) (and (= aux3 1) true)) (and (= aux3 0) false)))
(assert (and (=> (= aux3 0) (= weight3 4)) (=> (= aux3 1) (= weight3 0))))
(assert (and (>= aux4 0) (<= aux4 1)))
(assert (or (or (and (forall ((v Int)) (=> (and ( type_bb877bd5_7c3e_4639_a23c_1aaa61dcc070_Student v )  ( type_07b05ea2_7d0c_420a_a0bf_61c379de2a5f_Person v ) ) (>= ( student_year ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b v )  )  1))) (forall ((v Int)) (=> (and ( type_bb877bd5_7c3e_4639_a23c_1aaa61dcc070_Student v )  ( type_07b05ea2_7d0c_420a_a0bf_61c379de2a5f_Person v ) ) (<= ( student_year ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b v )  )  6)))) (and (= aux4 1) true)) (and (= aux4 0) false)))
(assert (and (=> (= aux4 0) (= weight4 9)) (=> (= aux4 1) (= weight4 0))))
(assert (and (>= aux5 0) (<= aux5 1)))
(assert (or (or (forall ((s1 Int)(s2 Int)) (=> (and (and ( type_bb877bd5_7c3e_4639_a23c_1aaa61dcc070_Student s1 )  ( type_07b05ea2_7d0c_420a_a0bf_61c379de2a5f_Person s1 ) ) (and ( type_bb877bd5_7c3e_4639_a23c_1aaa61dcc070_Student s2 )  ( type_07b05ea2_7d0c_420a_a0bf_61c379de2a5f_Person s2 ) )) (=> (not (= ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b s1 )  ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b s2 ) ) ) (not (= ( student_id ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b s1 )  )  ( student_id ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b s2 )  ) ) )))) (and (= aux5 1) true)) (and (= aux5 0) false)))
(assert (and (=> (= aux5 0) (= weight5 12)) (=> (= aux5 1) (= weight5 0))))
(assert (and (>= aux6 0) (<= aux6 1)))
(assert (or (or (forall ((s1 Int)) (=> (and ( type_bb877bd5_7c3e_4639_a23c_1aaa61dcc070_Student s1 )  ( type_07b05ea2_7d0c_420a_a0bf_61c379de2a5f_Person s1 ) ) (forall ((m1 Int)) (=> (and ( type_b89c744d_4764_4249_b5a9_577465523fea_Module m1 )  ( rel_4d40c904_ce33_47b2_ae20_7a00c8812c13_study ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b s1 )   ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b m1 )  ) ) (= ( student_year ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b s1 )  )  ( module_year ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b m1 )  ) ))))) (and (= aux6 1) true)) (and (= aux6 0) false)))
(assert (and (=> (= aux6 0) (= weight6 10)) (=> (= aux6 1) (= weight6 0))))
(assert (and (>= aux7 0) (<= aux7 1)))
(assert (or (or (and (exists ((s Int)) (and (and ( type_bb877bd5_7c3e_4639_a23c_1aaa61dcc070_Student s )  ( type_07b05ea2_7d0c_420a_a0bf_61c379de2a5f_Person s ) ) (= ( student_year ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b s )  )  6))) (exists ((s Int)) (and (and ( type_bb877bd5_7c3e_4639_a23c_1aaa61dcc070_Student s )  ( type_07b05ea2_7d0c_420a_a0bf_61c379de2a5f_Person s ) ) (< ( student_year ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b s )  )  6)))) (and (= aux7 1) true)) (and (= aux7 0) false)))
(assert (and (=> (= aux7 0) (= weight7 13)) (=> (= aux7 1) (= weight7 0))))
(assert (and (>= aux8 0) (<= aux8 1)))
(assert (or (or (forall ((s Int)) (=> (and ( type_bb877bd5_7c3e_4639_a23c_1aaa61dcc070_Student s )  ( type_07b05ea2_7d0c_420a_a0bf_61c379de2a5f_Person s ) ) (exists ((v Int)) (and ( type_b89c744d_4764_4249_b5a9_577465523fea_Module v )  ( rel_4d40c904_ce33_47b2_ae20_7a00c8812c13_study ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b s )   ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b v )  ) )))) (and (= aux8 1) true)) (and (= aux8 0) false)))
(assert (and (=> (= aux8 0) (= weight8 8)) (=> (= aux8 1) (= weight8 0))))
(assert (and (>= aux9 0) (<= aux9 1)))
(assert (and (>= aux10 0) (<= aux10 1)))
(assert (and (>= aux11 0) (<= aux11 1)))
(assert (or (or (exists ((p Int)) ( type_b89c744d_4764_4249_b5a9_577465523fea_Module ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b p )  ) ) (and (= aux9 1) true)) (and (= aux9 0) false)))
(assert (and (=> (= aux9 0) (= weight9 4)) (=> (= aux9 1) (= weight9 0))))
(assert (or (or (exists ((p Int)) ( type_07b05ea2_7d0c_420a_a0bf_61c379de2a5f_Person ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b p )  ) ) (and (= aux10 1) true)) (and (= aux10 0) false)))
(assert (and (=> (= aux10 0) (= weight10 3)) (=> (= aux10 1) (= weight10 0))))
(assert (or (or (exists ((p Int)) (and ( type_bb877bd5_7c3e_4639_a23c_1aaa61dcc070_Student ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b p )  )  ( type_07b05ea2_7d0c_420a_a0bf_61c379de2a5f_Person ( obj_4181e1ab_cb74_4f71_aef8_e1015cae8a0b p )  ) )) (and (= aux11 1) true)) (and (= aux11 0) false)))
(assert (and (=> (= aux11 0) (= weight11 5)) (=> (= aux11 1) (= weight11 0))))
(assert (= (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ weight0 weight1) weight2) weight3) weight4) weight5) weight6) weight7) weight8) weight9) weight10) weight11) 79))

(assert (not (and (and (and (and (and (and (and (and (and (and (and (= weight0 3) (= weight1 9)) (= weight2 11)) (= weight3 0)) (= weight4 9)) (= weight5 12)) (= weight6 10)) (= weight7 13)) (= weight8 0)) (= weight9 4)) (= weight10 3)) (= weight11 5)) ))
