
;this file is automatically generated: Tue Jun 25 11:43:04 CST 2019

;declarations generated

(declare-fun type_b1892351_1103_4f10_9bad_2caee78e5085_Module ( Int) Bool)
(declare-fun oclExcludes ( Int Int) Bool)
(declare-fun type_430ef1ed_d951_4302_966f_0d526d71e3d0_Student ( Int) Bool)
(declare-fun rel_d6f6b898_f308_4888_b43d_cc92c1870047_manage ( Int Int) Bool)
(declare-fun module_credit ( Int) Int)
(declare-fun aux10 () Int)
(declare-fun oclSelect ( Int Bool) Int)
(declare-fun person_mature ( Int) Bool)
(declare-fun Cardinality ( Int) Int)
(declare-fun k2cb14e8c_1b58_47ee_a510_9d1177c90a48 () Int)
(declare-fun rel_7a404f1d_af04_4f18_a1ff_740320d1c4e1_study ( Int Int) Bool)
(declare-fun module_year ( Int) Int)
(declare-fun type_455eed3e_e578_46bb_9af9_108577e255f7_Department ( Int) Bool)
(declare-fun module_code ( Int) Int)
(declare-fun student_year ( Int) Int)
(declare-fun container_ ( Int) Int)
(declare-fun type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person ( Int) Bool)
(declare-fun person_age ( Int) Int)
(declare-fun kbce990d9_070b_4ad8_9fd2_1a1f97cad801 () Int)
(declare-fun rel_d80d96e7_a38b_4be5_82c5_e685be75f874_teach ( Int Int) Bool)
(declare-fun k2a6c4ec1_41c3_487d_a266_e4590ac5c392 () Int)
(declare-fun oclIncludes ( Int Int) Bool)
(declare-fun aux1 () Int)
(declare-fun aux0 () Int)
(declare-fun k4ac2a2af_eb72_4bea_9eb1_e5b9af1f2867 () Int)
(declare-fun module_description ( Int) Int)
(declare-fun aux3 () Int)
(declare-fun aux2 () Int)
(declare-fun obj_db00fd7e_5513_4dc4_84c7_221fdd165308 ( Int) Int)
(declare-fun aux9 () Int)
(declare-fun aux8 () Int)
(declare-fun aux5 () Int)
(declare-fun aux4 () Int)
(declare-fun k4b0e7251_9b2e_41d5_b10e_1d9109b74a45 () Int)
(declare-fun aux7 () Int)
(declare-fun aux6 () Int)
(declare-fun type_628b4223_660b_493a_aeed_0c005c9a89cd_University ( Int) Bool)
(declare-fun weight7 () Int)
(declare-fun student_id ( Int) Int)
(declare-fun weight6 () Int)
(declare-fun weight5 () Int)
(declare-fun weight4 () Int)
(declare-fun kdbf224db_41b7_4c10_a044_235eb796a511 () Int)
(declare-fun weight3 () Int)
(declare-fun ObjAt ( Int Int) Int)
(declare-fun weight2 () Int)
(declare-fun weight1 () Int)
(declare-fun weight0 () Int)

;formula(s) generated
(assert (exists ((x Int)(y Int)) (and (and ( rel_d6f6b898_f308_4888_b43d_cc92c1870047_manage ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 x )   ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 y )  )  (and ( type_628b4223_660b_493a_aeed_0c005c9a89cd_University x )  ( type_455eed3e_e578_46bb_9af9_108577e255f7_Department y ) )) (>= ( Cardinality ( container_ x )  )  1))))
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_d6f6b898_f308_4888_b43d_cc92c1870047_manage ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 x )   ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 y )  )  (and ( type_628b4223_660b_493a_aeed_0c005c9a89cd_University x )  ( type_455eed3e_e578_46bb_9af9_108577e255f7_Department y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k2a6c4ec1_41c3_487d_a266_e4590ac5c392)) (>= k2a6c4ec1_41c3_487d_a266_e4590ac5c392 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k2cb14e8c_1b58_47ee_a510_9d1177c90a48)) (>= k2cb14e8c_1b58_47ee_a510_9d1177c90a48 0))))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_d6f6b898_f308_4888_b43d_cc92c1870047_manage ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 x )   ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 y )  )  (and ( type_628b4223_660b_493a_aeed_0c005c9a89cd_University x )  ( type_455eed3e_e578_46bb_9af9_108577e255f7_Department y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k2a6c4ec1_41c3_487d_a266_e4590ac5c392)) (>= k2a6c4ec1_41c3_487d_a266_e4590ac5c392 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k2cb14e8c_1b58_47ee_a510_9d1177c90a48)) (>= k2cb14e8c_1b58_47ee_a510_9d1177c90a48 0))))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_7a404f1d_af04_4f18_a1ff_740320d1c4e1_study ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 x )   ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 y )  )  (and (and ( type_430ef1ed_d951_4302_966f_0d526d71e3d0_Student x )  ( type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person x ) ) ( type_b1892351_1103_4f10_9bad_2caee78e5085_Module y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k4b0e7251_9b2e_41d5_b10e_1d9109b74a45)) (>= k4b0e7251_9b2e_41d5_b10e_1d9109b74a45 0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kbce990d9_070b_4ad8_9fd2_1a1f97cad801)) (>= kbce990d9_070b_4ad8_9fd2_1a1f97cad801 0))))) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_7a404f1d_af04_4f18_a1ff_740320d1c4e1_study ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 x )   ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 y )  )  (and (and ( type_430ef1ed_d951_4302_966f_0d526d71e3d0_Student x )  ( type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person x ) ) ( type_b1892351_1103_4f10_9bad_2caee78e5085_Module y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k4b0e7251_9b2e_41d5_b10e_1d9109b74a45)) (>= k4b0e7251_9b2e_41d5_b10e_1d9109b74a45 0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kbce990d9_070b_4ad8_9fd2_1a1f97cad801)) (>= kbce990d9_070b_4ad8_9fd2_1a1f97cad801 0))))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_d80d96e7_a38b_4be5_82c5_e685be75f874_teach ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 x )   ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 y )  )  (and ( type_455eed3e_e578_46bb_9af9_108577e255f7_Department x )  (and ( type_430ef1ed_d951_4302_966f_0d526d71e3d0_Student y )  ( type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person y ) ))) (>= ( Cardinality ( container_ x )  )  1))))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_d80d96e7_a38b_4be5_82c5_e685be75f874_teach ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 x )   ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 y )  )  (and ( type_455eed3e_e578_46bb_9af9_108577e255f7_Department x )  (and ( type_430ef1ed_d951_4302_966f_0d526d71e3d0_Student y )  ( type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k4ac2a2af_eb72_4bea_9eb1_e5b9af1f2867)) (>= k4ac2a2af_eb72_4bea_9eb1_e5b9af1f2867 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kdbf224db_41b7_4c10_a044_235eb796a511)) (>= kdbf224db_41b7_4c10_a044_235eb796a511 0))))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_d80d96e7_a38b_4be5_82c5_e685be75f874_teach ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 x )   ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 y )  )  (and ( type_455eed3e_e578_46bb_9af9_108577e255f7_Department x )  (and ( type_430ef1ed_d951_4302_966f_0d526d71e3d0_Student y )  ( type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k4ac2a2af_eb72_4bea_9eb1_e5b9af1f2867)) (>= k4ac2a2af_eb72_4bea_9eb1_e5b9af1f2867 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  kdbf224db_41b7_4c10_a044_235eb796a511)) (>= kdbf224db_41b7_4c10_a044_235eb796a511 0))))))
(assert (and (>= aux3 0) (<= aux3 1)))
(assert (or (or (and (forall ((v Int)) (=> ( type_b1892351_1103_4f10_9bad_2caee78e5085_Module v )  (>= ( module_year ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 v )  )  1))) (forall ((v Int)) (=> ( type_b1892351_1103_4f10_9bad_2caee78e5085_Module v )  (<= ( module_year ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 v )  )  5)))) (and (= aux3 1) true)) (and (= aux3 0) false)))
(assert (and (=> (= aux3 0) (= weight0 1)) (=> (= aux3 1) (= weight0 0))))
(assert (and (>= aux4 0) (<= aux4 1)))
(assert (or (or (forall ((p Int)) (=> ( type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person p )  (and (> ( person_age ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 p )  )  0) (< ( person_age ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 p )  )  18)))) (and (= aux4 1) true)) (and (= aux4 0) false)))
(assert (and (=> (= aux4 0) (= weight1 1)) (=> (= aux4 1) (= weight1 0))))
(assert (and (>= aux5 0) (<= aux5 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_430ef1ed_d951_4302_966f_0d526d71e3d0_Student v )  ( type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person v ) ) (> ( person_age ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 v )  )  18))) (and (= aux5 1) true)) (and (= aux5 0) false)))
(assert (and (=> (= aux5 0) (= weight2 1)) (=> (= aux5 1) (= weight2 0))))
(assert (and (>= aux6 0) (<= aux6 1)))
(assert (or (or (and (forall ((v Int)) (=> (and ( type_430ef1ed_d951_4302_966f_0d526d71e3d0_Student v )  ( type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person v ) ) (>= ( student_year ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 v )  )  1))) (forall ((v Int)) (=> (and ( type_430ef1ed_d951_4302_966f_0d526d71e3d0_Student v )  ( type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person v ) ) (<= ( student_year ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 v )  )  6)))) (and (= aux6 1) true)) (and (= aux6 0) false)))
(assert (and (=> (= aux6 0) (= weight3 1)) (=> (= aux6 1) (= weight3 0))))
(assert (and (>= aux7 0) (<= aux7 1)))
(assert (or (or (forall ((s1 Int)(s2 Int)) (=> (and (and ( type_430ef1ed_d951_4302_966f_0d526d71e3d0_Student s1 )  ( type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person s1 ) ) (and ( type_430ef1ed_d951_4302_966f_0d526d71e3d0_Student s2 )  ( type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person s2 ) )) (=> (not (= ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 s1 )  ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 s2 ) ) ) (not (= ( student_id ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 s1 )  )  ( student_id ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 s2 )  ) ) )))) (and (= aux7 1) true)) (and (= aux7 0) false)))
(assert (and (=> (= aux7 0) (= weight4 1)) (=> (= aux7 1) (= weight4 0))))
(assert (and (>= aux8 0) (<= aux8 1)))
(assert (or (or (forall ((s1 Int)) (=> (and ( type_430ef1ed_d951_4302_966f_0d526d71e3d0_Student s1 )  ( type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person s1 ) ) (forall ((m1 Int)) (=> (and ( type_b1892351_1103_4f10_9bad_2caee78e5085_Module m1 )  ( rel_7a404f1d_af04_4f18_a1ff_740320d1c4e1_study ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 s1 )   ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 m1 )  ) ) (= ( student_year ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 s1 )  )  ( module_year ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 m1 )  ) ))))) (and (= aux8 1) true)) (and (= aux8 0) false)))
(assert (and (=> (= aux8 0) (= weight5 1)) (=> (= aux8 1) (= weight5 0))))
(assert (and (>= aux9 0) (<= aux9 1)))
(assert (or (or (and (exists ((s Int)) (and (and ( type_430ef1ed_d951_4302_966f_0d526d71e3d0_Student s )  ( type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person s ) ) (= ( student_year ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 s )  )  6))) (exists ((s Int)) (and (and ( type_430ef1ed_d951_4302_966f_0d526d71e3d0_Student s )  ( type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person s ) ) (< ( student_year ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 s )  )  6)))) (and (= aux9 1) true)) (and (= aux9 0) false)))
(assert (and (=> (= aux9 0) (= weight6 1)) (=> (= aux9 1) (= weight6 0))))
(assert (and (>= aux10 0) (<= aux10 1)))
(assert (or (or (forall ((s Int)) (=> (and ( type_430ef1ed_d951_4302_966f_0d526d71e3d0_Student s )  ( type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person s ) ) (exists ((v Int)) (and ( type_b1892351_1103_4f10_9bad_2caee78e5085_Module v )  ( rel_7a404f1d_af04_4f18_a1ff_740320d1c4e1_study ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 s )   ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 v )  ) )))) (and (= aux10 1) true)) (and (= aux10 0) false)))
(assert (and (=> (= aux10 0) (= weight7 1)) (=> (= aux10 1) (= weight7 0))))
(assert (exists ((o Int)) ( type_455eed3e_e578_46bb_9af9_108577e255f7_Department ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 o )  ) ))
(assert (exists ((o Int)) ( type_b1892351_1103_4f10_9bad_2caee78e5085_Module ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 o )  ) ))
(assert (exists ((o Int)) ( type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 o )  ) ))
(assert (exists ((o Int)) (and ( type_430ef1ed_d951_4302_966f_0d526d71e3d0_Student ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 o )  )  ( type_2f08a9ec_a400_4808_bd86_b7de75770b52_Person ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 o )  ) )))
(assert (exists ((o Int)) ( type_628b4223_660b_493a_aeed_0c005c9a89cd_University ( obj_db00fd7e_5513_4dc4_84c7_221fdd165308 o )  ) ))
(assert (= (+ (+ (+ (+ (+ (+ (+ weight0 weight1) weight2) weight3) weight4) weight5) weight6) weight7) 6))

(assert (not (and (and (and (and (and (and (and (= weight0 0) (= weight1 1)) (= weight2 0)) (= weight3 1)) (= weight4 1)) (= weight5 1)) (= weight6 1)) (= weight7 1)) ))

(assert (not (and (and (and (and (and (and (and (= weight0 0) (= weight1 0)) (= weight2 1)) (= weight3 1)) (= weight4 1)) (= weight5 1)) (= weight6 1)) (= weight7 1)) ))

(assert (not (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 0)) (= weight3 1)) (= weight4 1)) (= weight5 1)) (= weight6 0)) (= weight7 1)) ))

(assert (not (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 0)) (= weight3 1)) (= weight4 1)) (= weight5 0)) (= weight6 1)) (= weight7 1)) ))

(assert (not (and (and (and (and (and (and (and (= weight0 1) (= weight1 0)) (= weight2 1)) (= weight3 1)) (= weight4 1)) (= weight5 0)) (= weight6 1)) (= weight7 1)) ))

(assert (not (and (and (and (and (and (and (and (= weight0 1) (= weight1 0)) (= weight2 1)) (= weight3 1)) (= weight4 1)) (= weight5 1)) (= weight6 1)) (= weight7 0)) ))

(assert (not (and (and (and (and (and (and (and (= weight0 1) (= weight1 0)) (= weight2 1)) (= weight3 1)) (= weight4 1)) (= weight5 1)) (= weight6 0)) (= weight7 1)) ))

(assert (not (and (and (and (and (and (and (and (= weight0 1) (= weight1 1)) (= weight2 0)) (= weight3 1)) (= weight4 1)) (= weight5 1)) (= weight6 1)) (= weight7 0)) ))
