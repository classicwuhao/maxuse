
;this file is automatically generated: Mon Aug 22 14:52:50 IST 2016

;declarations generated

(declare-fun class10_Class10IntAttr3 ( Int) Int )
(declare-fun class10_Class10IntAttr4 ( Int) Int )
(declare-fun rel_365cdc5d_f77e_48d7_aab8_180dfdba3b5e_Class2_Class9 ( Int Int) Bool )
(declare-fun class10_Class10IntAttr2 ( Int) Int )
(declare-fun k54ed120c_5f7d_44ef_8fe9_d8f187039d8e () Int )
(declare-fun k461f9816_6c41_42f5_aaeb_7fcd4ccd7398 () Int )
(declare-fun type_ea47a2bd_3728_4290_ac1b_c6444fcabbce_Class0 ( Int) Bool )
(declare-fun class11_Class11IntAttr2 ( Int) Int )
(declare-fun class11_Class11IntAttr4 ( Int) Int )
(declare-fun oclExcludes ( Int Int) Bool )
(declare-fun class11_Class11IntAttr3 ( Int) Int )
(declare-fun class8_Class8BoolAttr1 ( Int) Bool )
(declare-fun class8_Class8IntAttr2 ( Int) Int )
(declare-fun class8_Class8BoolAttr0 ( Int) Bool )
(declare-fun class8_Class8IntAttr4 ( Int) Int )
(declare-fun class8_Class8IntAttr3 ( Int) Int )
(declare-fun k8aa5c1e9_1492_4962_bca6_5de7a80b7c38 () Int )
(declare-fun aux19 () Int )
(declare-fun aux16 () Int )
(declare-fun aux15 () Int )
(declare-fun aux18 () Int )
(declare-fun aux17 () Int )
(declare-fun aux12 () Int )
(declare-fun aux11 () Int )
(declare-fun aux14 () Int )
(declare-fun aux13 () Int )
(declare-fun aux10 () Int )
(declare-fun obj_593d74fc_1806_4ffe_8917_993dcb21cd37 ( Int) Int )
(declare-fun oclSelect ( Int Bool) Int )
(declare-fun class1_Class1IntAttr4 ( Int) Int )
(declare-fun rel_a2bd4133_e443_40d5_959c_6eb4e0b67379_Class3_Class8 ( Int Int) Bool )
(declare-fun class1_Class1IntAttr3 ( Int) Int )
(declare-fun type_a952b49e_1ebf_4e44_aaf2_ff778658c43c_Class6 ( Int) Bool )
(declare-fun class9_Class9BoolAttr0 ( Int) Bool )
(declare-fun class9_Class9BoolAttr1 ( Int) Bool )
(declare-fun class12_Class12BoolAttr1 ( Int) Bool )
(declare-fun class12_Class12BoolAttr0 ( Int) Bool )
(declare-fun kd42c9e46_6f54_4981_9700_633fe3ca68ab () Int )
(declare-fun class3_Class3IntAttr4 ( Int) Int )
(declare-fun class3_Class3IntAttr3 ( Int) Int )
(declare-fun Cardinality ( Int) Int )
(declare-fun class0_Class0IntAttr3 ( Int) Int )
(declare-fun class0_Class0IntAttr4 ( Int) Int )
(declare-fun type_604ebfe7_3412_4f13_9f07_c8b07dcd0d2a_Class7 ( Int) Bool )
(declare-fun class9_Class9IntAttr4 ( Int) Int )
(declare-fun class9_Class9IntAttr3 ( Int) Int )
(declare-fun class9_Class9IntAttr2 ( Int) Int )
(declare-fun type_5709cca6_4fde_4c19_9269_63751b332ed6_Class9 ( Int) Bool )
(declare-fun class12_Class12IntAttr4 ( Int) Int )
(declare-fun type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 ( Int) Bool )
(declare-fun class12_Class12IntAttr3 ( Int) Int )
(declare-fun class12_Class12IntAttr2 ( Int) Int )
(declare-fun type_37e7cf43_9a08_4d63_83c9_abc9095777da_Class1 ( Int) Bool )
(declare-fun class6_Class6IntAttr2 ( Int) Int )
(declare-fun class6_Class6IntAttr3 ( Int) Int )
(declare-fun class6_Class6IntAttr4 ( Int) Int )
(declare-fun rel_a0a8a2f2_23e9_482c_b4e1_3c01a630fcc5_Class5_Class7 ( Int Int) Bool )
(declare-fun weight13 () Int )
(declare-fun weight14 () Int )
(declare-fun weight11 () Int )
(declare-fun weight12 () Int )
(declare-fun weight17 () Int )
(declare-fun weight18 () Int )
(declare-fun weight15 () Int )
(declare-fun weight16 () Int )
(declare-fun class4_Class4BoolAttr0 ( Int) Bool )
(declare-fun class4_Class4BoolAttr1 ( Int) Bool )
(declare-fun k7221cecd_b482_46d7_b42c_db50a4adcabc () Int )
(declare-fun weight10 () Int )
(declare-fun rel_94525104_71a0_4b27_92dd_b3e6afe80d9b_Class4_Class10 ( Int Int) Bool )
(declare-fun type_927de51a_626f_43d1_b7ad_f2b2b079c7e7_Class12 ( Int) Bool )
(declare-fun weight19 () Int )
(declare-fun Enum0 ( Int) Int )
(declare-fun Enum1 ( Int) Int )
(declare-fun weight24 () Int )
(declare-fun weight25 () Int )
(declare-fun weight22 () Int )
(declare-fun weight23 () Int )
(declare-fun weight28 () Int )
(declare-fun weight29 () Int )
(declare-fun class5_Class5BoolAttr1 ( Int) Bool )
(declare-fun weight26 () Int )
(declare-fun type_84c23e52_f36c_466d_b37f_296f2cc8ce5f_Class11 ( Int) Bool )
(declare-fun class5_Class5BoolAttr0 ( Int) Bool )
(declare-fun weight27 () Int )
(declare-fun type_7c35563d_c1db_432c_a53f_32802daa4359_Class2 ( Int) Bool )
(declare-fun weight20 () Int )
(declare-fun weight21 () Int )
(declare-fun class10_Class10BoolAttr1 ( Int) Bool )
(declare-fun class10_Class10BoolAttr0 ( Int) Bool )
(declare-fun weight35 () Int )
(declare-fun weight36 () Int )
(declare-fun weight33 () Int )
(declare-fun weight34 () Int )
(declare-fun weight39 () Int )
(declare-fun container_ ( Int) Int )
(declare-fun weight37 () Int )
(declare-fun weight38 () Int )
(declare-fun type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 ( Int) Bool )
(declare-fun weight31 () Int )
(declare-fun weight32 () Int )
(declare-fun weight30 () Int )
(declare-fun class11_Class11BoolAttr0 ( Int) Bool )
(declare-fun class11_Class11BoolAttr1 ( Int) Bool )
(declare-fun kf1e346de_908a_4c5e_9b2a_7dc69a661180 () Int )
(declare-fun type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 ( Int) Bool )
(declare-fun weight46 () Int )
(declare-fun weight44 () Int )
(declare-fun weight45 () Int )
(declare-fun type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 ( Int) Bool )
(declare-fun rel_91a42b1d_f485_4431_908e_17df8a1a0aa7_Class1_Class12 ( Int Int) Bool )
(declare-fun weight42 () Int )
(declare-fun weight43 () Int )
(declare-fun weight40 () Int )
(declare-fun weight41 () Int )
(declare-fun class1_Class1BoolAttr0 ( Int) Bool )
(declare-fun class1_Class1BoolAttr1 ( Int) Bool )
(declare-fun class2_Class2IntAttr4 ( Int) Int )
(declare-fun aux27 () Int )
(declare-fun class2_Class2IntAttr3 ( Int) Int )
(declare-fun aux26 () Int )
(declare-fun aux29 () Int )
(declare-fun aux28 () Int )
(declare-fun aux23 () Int )
(declare-fun aux22 () Int )
(declare-fun aux25 () Int )
(declare-fun aux24 () Int )
(declare-fun class1_Class1BoolAttr2 ( Int) Bool )
(declare-fun aux21 () Int )
(declare-fun aux20 () Int )
(declare-fun class4_Class4IntAttr2 ( Int) Int )
(declare-fun weight9 () Int )
(declare-fun weight8 () Int )
(declare-fun class7_Class7BoolAttr0 ( Int) Bool )
(declare-fun class7_Class7BoolAttr1 ( Int) Bool )
(declare-fun class6_Class6BoolAttr1 ( Int) Bool )
(declare-fun class6_Class6BoolAttr0 ( Int) Bool )
(declare-fun aux38 () Int )
(declare-fun aux37 () Int )
(declare-fun aux39 () Int )
(declare-fun aux34 () Int )
(declare-fun oclIncludes ( Int Int) Bool )
(declare-fun aux33 () Int )
(declare-fun aux36 () Int )
(declare-fun class5_Class5IntAttr2 ( Int) Int )
(declare-fun aux35 () Int )
(declare-fun aux30 () Int )
(declare-fun aux32 () Int )
(declare-fun aux31 () Int )
(declare-fun class7_Class7IntAttr3 ( Int) Int )
(declare-fun class7_Class7IntAttr4 ( Int) Int )
(declare-fun class7_Class7IntAttr2 ( Int) Int )
(declare-fun type_5cd450fa_9764_44b3_9dd5_e0c778e01549_Class3 ( Int) Bool )
(declare-fun aux1 () Int )
(declare-fun aux0 () Int )
(declare-fun aux3 () Int )
(declare-fun aux2 () Int )
(declare-fun aux45 () Int )
(declare-fun aux44 () Int )
(declare-fun aux46 () Int )
(declare-fun aux41 () Int )
(declare-fun aux40 () Int )
(declare-fun aux43 () Int )
(declare-fun aux42 () Int )
(declare-fun class0_Class0BoolAttr1 ( Int) Bool )
(declare-fun class0_Class0BoolAttr0 ( Int) Bool )
(declare-fun aux9 () Int )
(declare-fun class0_Class0BoolAttr2 ( Int) Bool )
(declare-fun aux8 () Int )
(declare-fun aux5 () Int )
(declare-fun aux4 () Int )
(declare-fun aux7 () Int )
(declare-fun aux6 () Int )
(declare-fun class3_Class3BoolAttr2 ( Int) Bool )
(declare-fun weight7 () Int )
(declare-fun weight6 () Int )
(declare-fun weight5 () Int )
(declare-fun weight4 () Int )
(declare-fun class3_Class3BoolAttr1 ( Int) Bool )
(declare-fun weight3 () Int )
(declare-fun ObjAt ( Int Int) Int )
(declare-fun class3_Class3BoolAttr0 ( Int) Bool )
(declare-fun weight2 () Int )
(declare-fun weight1 () Int )
(declare-fun weight0 () Int )
(declare-fun class2_Class2BoolAttr1 ( Int) Bool )
(declare-fun class2_Class2BoolAttr0 ( Int) Bool )
(declare-fun class2_Class2BoolAttr2 ( Int) Bool )

;formula(s) generated
(assert (forall ((p Int)) (=> ( type_ea47a2bd_3728_4290_ac1b_c6444fcabbce_Class0 p )  (and (>= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  2)))))
(assert (forall ((p Int)) (=> ( type_37e7cf43_9a08_4d63_83c9_abc9095777da_Class1 p )  (and (>= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  9)))))
(assert (forall ((p Int)) (=> ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 p )  (and (>= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  9)))))
(assert (forall ((p Int)) (=> ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 p )  (and (>= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  2)))))
(assert (forall ((p Int)) (=> ( type_84c23e52_f36c_466d_b37f_296f2cc8ce5f_Class11 p )  (and (>= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  2)))))
(assert (forall ((p Int)) (=> ( type_84c23e52_f36c_466d_b37f_296f2cc8ce5f_Class11 p )  (and (>= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  2)))))
(assert (forall ((p Int)) (=> ( type_927de51a_626f_43d1_b7ad_f2b2b079c7e7_Class12 p )  (and (>= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  2)))))
(assert (forall ((p Int)) (=> ( type_927de51a_626f_43d1_b7ad_f2b2b079c7e7_Class12 p )  (and (>= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  9)))))
(assert (forall ((p Int)) (=> ( type_7c35563d_c1db_432c_a53f_32802daa4359_Class2 p )  (and (>= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  2)))))
(assert (forall ((p Int)) (=> ( type_5cd450fa_9764_44b3_9dd5_e0c778e01549_Class3 p )  (and (>= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  2)))))
(assert (forall ((p Int)) (=> ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 p )  (and (>= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  9)))))
(assert (forall ((p Int)) (=> ( type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 p )  (and (>= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  2)))))
(assert (forall ((p Int)) (=> ( type_a952b49e_1ebf_4e44_aaf2_ff778658c43c_Class6 p )  (and (>= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  2)))))
(assert (forall ((p Int)) (=> ( type_604ebfe7_3412_4f13_9f07_c8b07dcd0d2a_Class7 p )  (and (>= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  9)))))
(assert (forall ((p Int)) (=> ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 p )  (and (>= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  9)))))
(assert (forall ((p Int)) (=> ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 p )  (and (>= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  2)))))
(assert (forall ((p Int)) (=> ( type_5709cca6_4fde_4c19_9269_63751b332ed6_Class9 p )  (and (>= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  9)))))
(assert (forall ((p Int)) (=> ( type_5709cca6_4fde_4c19_9269_63751b332ed6_Class9 p )  (and (>= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  0) (<= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  9)))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_91a42b1d_f485_4431_908e_17df8a1a0aa7_Class1_Class12 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 x )   ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 y )  )  (and ( type_37e7cf43_9a08_4d63_83c9_abc9095777da_Class1 x )  ( type_927de51a_626f_43d1_b7ad_f2b2b079c7e7_Class12 y ) )) (>= ( Cardinality ( container_ x )  )  1))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_91a42b1d_f485_4431_908e_17df8a1a0aa7_Class1_Class12 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 x )   ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 y )  )  (and ( type_37e7cf43_9a08_4d63_83c9_abc9095777da_Class1 x )  ( type_927de51a_626f_43d1_b7ad_f2b2b079c7e7_Class12 y ) )) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_91a42b1d_f485_4431_908e_17df8a1a0aa7_Class1_Class12 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 x )   ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 y )  )  (and ( type_37e7cf43_9a08_4d63_83c9_abc9095777da_Class1 x )  ( type_927de51a_626f_43d1_b7ad_f2b2b079c7e7_Class12 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_91a42b1d_f485_4431_908e_17df8a1a0aa7_Class1_Class12 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 x )   ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 y )  )  (and ( type_37e7cf43_9a08_4d63_83c9_abc9095777da_Class1 x )  ( type_927de51a_626f_43d1_b7ad_f2b2b079c7e7_Class12 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))))))
(assert (and (=> (= aux0 0) (= weight0 3)) (=> (= aux0 1) (= weight0 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_365cdc5d_f77e_48d7_aab8_180dfdba3b5e_Class2_Class9 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 x )   ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 y )  )  (and ( type_7c35563d_c1db_432c_a53f_32802daa4359_Class2 x )  ( type_5709cca6_4fde_4c19_9269_63751b332ed6_Class9 y ) )) (>= ( Cardinality ( container_ x )  )  1))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_365cdc5d_f77e_48d7_aab8_180dfdba3b5e_Class2_Class9 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 x )   ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 y )  )  (and ( type_7c35563d_c1db_432c_a53f_32802daa4359_Class2 x )  ( type_5709cca6_4fde_4c19_9269_63751b332ed6_Class9 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k8aa5c1e9_1492_4962_bca6_5de7a80b7c38)) (>= k8aa5c1e9_1492_4962_bca6_5de7a80b7c38 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  3))) (and (= (* ( Cardinality ( container_ y )  )  3) (* ( Cardinality ( container_ x )  )  k7221cecd_b482_46d7_b42c_db50a4adcabc)) (>= k7221cecd_b482_46d7_b42c_db50a4adcabc 0))))) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_365cdc5d_f77e_48d7_aab8_180dfdba3b5e_Class2_Class9 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 x )   ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 y )  )  (and ( type_7c35563d_c1db_432c_a53f_32802daa4359_Class2 x )  ( type_5709cca6_4fde_4c19_9269_63751b332ed6_Class9 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k8aa5c1e9_1492_4962_bca6_5de7a80b7c38)) (>= k8aa5c1e9_1492_4962_bca6_5de7a80b7c38 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  3))) (and (= (* ( Cardinality ( container_ y )  )  3) (* ( Cardinality ( container_ x )  )  k7221cecd_b482_46d7_b42c_db50a4adcabc)) (>= k7221cecd_b482_46d7_b42c_db50a4adcabc 0))))))
(assert (and (=> (= aux1 0) (= weight1 2)) (=> (= aux1 1) (= weight1 0))))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_a2bd4133_e443_40d5_959c_6eb4e0b67379_Class3_Class8 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 x )   ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 y )  )  (and ( type_5cd450fa_9764_44b3_9dd5_e0c778e01549_Class3 x )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  0)) (and (= (* ( Cardinality ( container_ y )  )  0) (* ( Cardinality ( container_ x )  )  kf1e346de_908a_4c5e_9b2a_7dc69a661180)) (>= kf1e346de_908a_4c5e_9b2a_7dc69a661180 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  4))) (and (= (* ( Cardinality ( container_ y )  )  4) (* ( Cardinality ( container_ x )  )  kd42c9e46_6f54_4981_9700_633fe3ca68ab)) (>= kd42c9e46_6f54_4981_9700_633fe3ca68ab 0))))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_a2bd4133_e443_40d5_959c_6eb4e0b67379_Class3_Class8 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 x )   ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 y )  )  (and ( type_5cd450fa_9764_44b3_9dd5_e0c778e01549_Class3 x )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  0)) (and (= (* ( Cardinality ( container_ y )  )  0) (* ( Cardinality ( container_ x )  )  kf1e346de_908a_4c5e_9b2a_7dc69a661180)) (>= kf1e346de_908a_4c5e_9b2a_7dc69a661180 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  4))) (and (= (* ( Cardinality ( container_ y )  )  4) (* ( Cardinality ( container_ x )  )  kd42c9e46_6f54_4981_9700_633fe3ca68ab)) (>= kd42c9e46_6f54_4981_9700_633fe3ca68ab 0))))))
(assert (and (=> (= aux2 0) (= weight2 1)) (=> (= aux2 1) (= weight2 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_94525104_71a0_4b27_92dd_b3e6afe80d9b_Class4_Class10 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 x )   ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 y )  )  (and (and ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 x )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 x ) ) (and ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 y )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 y ) ))) (>= ( Cardinality ( container_ x )  )  1))))
(assert (and (>= aux3 0) (<= aux3 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_94525104_71a0_4b27_92dd_b3e6afe80d9b_Class4_Class10 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 x )   ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 y )  )  (and (and ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 x )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 x ) ) (and ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 y )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k54ed120c_5f7d_44ef_8fe9_d8f187039d8e)) (>= k54ed120c_5f7d_44ef_8fe9_d8f187039d8e 0))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  3))) (and (= (* ( Cardinality ( container_ y )  )  3) (* ( Cardinality ( container_ x )  )  k461f9816_6c41_42f5_aaeb_7fcd4ccd7398)) (>= k461f9816_6c41_42f5_aaeb_7fcd4ccd7398 0))))) (and (= aux3 1) true)) (and (= aux3 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_94525104_71a0_4b27_92dd_b3e6afe80d9b_Class4_Class10 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 x )   ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 y )  )  (and (and ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 x )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 x ) ) (and ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 y )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  1)) (and (= (* ( Cardinality ( container_ y )  )  1) (* ( Cardinality ( container_ x )  )  k54ed120c_5f7d_44ef_8fe9_d8f187039d8e)) (>= k54ed120c_5f7d_44ef_8fe9_d8f187039d8e 0))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  3))) (and (= (* ( Cardinality ( container_ y )  )  3) (* ( Cardinality ( container_ x )  )  k461f9816_6c41_42f5_aaeb_7fcd4ccd7398)) (>= k461f9816_6c41_42f5_aaeb_7fcd4ccd7398 0))))))
(assert (and (=> (= aux3 0) (= weight3 13)) (=> (= aux3 1) (= weight3 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_a0a8a2f2_23e9_482c_b4e1_3c01a630fcc5_Class5_Class7 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 x )   ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 y )  )  (and (and (and ( type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 x )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 x ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 x ) ) (and (and (and ( type_604ebfe7_3412_4f13_9f07_c8b07dcd0d2a_Class7 y )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 y ) ) ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 y ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 y ) ))) (>= ( Cardinality ( container_ x )  )  1))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_a0a8a2f2_23e9_482c_b4e1_3c01a630fcc5_Class5_Class7 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 x )   ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 y )  )  (and (and (and ( type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 x )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 x ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 x ) ) (and (and (and ( type_604ebfe7_3412_4f13_9f07_c8b07dcd0d2a_Class7 y )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 y ) ) ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 y ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 y ) ))) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux4 0) (<= aux4 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_a0a8a2f2_23e9_482c_b4e1_3c01a630fcc5_Class5_Class7 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 x )   ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 y )  )  (and (and (and ( type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 x )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 x ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 x ) ) (and (and (and ( type_604ebfe7_3412_4f13_9f07_c8b07dcd0d2a_Class7 y )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 y ) ) ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 y ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))))) (and (= aux4 1) true)) (and (= aux4 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_a0a8a2f2_23e9_482c_b4e1_3c01a630fcc5_Class5_Class7 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 x )   ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 y )  )  (and (and (and ( type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 x )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 x ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 x ) ) (and (and (and ( type_604ebfe7_3412_4f13_9f07_c8b07dcd0d2a_Class7 y )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 y ) ) ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 y ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))))))
(assert (and (=> (= aux4 0) (= weight4 1)) (=> (= aux4 1) (= weight4 0))))
(assert (and (>= aux5 0) (<= aux5 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and (and ( type_ea47a2bd_3728_4290_ac1b_c6444fcabbce_Class0 c1 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c1 ) ) ( type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 c1 ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 c1 ) ) (= ( class0_Class0IntAttr4 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c1 )  )  1))) (and (= aux5 1) true)) (and (= aux5 0) false)))
(assert (and (=> (= aux5 0) (= weight5 6)) (=> (= aux5 1) (= weight5 0))))
(assert (and (>= aux6 0) (<= aux6 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and (and ( type_ea47a2bd_3728_4290_ac1b_c6444fcabbce_Class0 c1 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c1 ) ) ( type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 c1 ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 c1 ) ) (forall ((c4 Int)) (=> (and ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 c4 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c4 ) ) (> ( class4_Class4IntAttr2 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c4 )  )  ( class0_Class0IntAttr4 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c1 )  ) ))))) (and (= aux6 1) true)) (and (= aux6 0) false)))
(assert (and (=> (= aux6 0) (= weight6 9)) (=> (= aux6 1) (= weight6 0))))
(assert (and (>= aux7 0) (<= aux7 1)))
(assert (or (or (exists ((c1 Int)) (and (and ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 c1 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c1 ) ) (= ( class10_Class10IntAttr2 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c1 )  )  5))) (and (= aux7 1) true)) (and (= aux7 0) false)))
(assert (and (=> (= aux7 0) (= weight7 6)) (=> (= aux7 1) (= weight7 0))))
(assert (and (>= aux8 0) (<= aux8 1)))
(assert (or (or (forall ((c_10 Int)) (=> (and ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 c_10 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c_10 ) ) (forall ((c_4 Int)) (=> (and ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 c_4 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c_4 ) ) (forall ((c_8 Int)) (=> ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c_8 )  (and (not (= ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c_4 )  ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c_8 ) ) ) (not (= ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c_10 )  ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c_4 ) ) )))))))) (and (= aux8 1) true)) (and (= aux8 0) false)))
(assert (and (=> (= aux8 0) (= weight8 6)) (=> (= aux8 1) (= weight8 0))))
(assert (and (>= aux9 0) (<= aux9 1)))
(assert (or (or (forall ((c1 Int)(c2 Int)) (=> (and (and (and (and ( type_84c23e52_f36c_466d_b37f_296f2cc8ce5f_Class11 c1 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c1 ) ) ( type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 c1 ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 c1 ) ) (and (and (and ( type_84c23e52_f36c_466d_b37f_296f2cc8ce5f_Class11 c2 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c2 ) ) ( type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 c2 ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 c2 ) )) (and ( class11_Class11BoolAttr1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c1 )  )  ( class11_Class11BoolAttr0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c2 )  ) ))) (and (= aux9 1) true)) (and (= aux9 0) false)))
(assert (and (=> (= aux9 0) (= weight9 7)) (=> (= aux9 1) (= weight9 0))))
(assert (and (>= aux10 0) (<= aux10 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_927de51a_626f_43d1_b7ad_f2b2b079c7e7_Class12 c1 )  (not (= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c1 )  )  0) ))) (and (= aux10 1) true)) (and (= aux10 0) false)))
(assert (and (=> (= aux10 0) (= weight10 2)) (=> (= aux10 1) (= weight10 0))))
(assert (and (>= aux11 0) (<= aux11 1)))
(assert (or (or (forall ((c1 Int)(c2 Int)) (=> (and ( type_37e7cf43_9a08_4d63_83c9_abc9095777da_Class1 c1 )  ( type_37e7cf43_9a08_4d63_83c9_abc9095777da_Class1 c2 ) ) (forall ((v Int)) (=> ( type_37e7cf43_9a08_4d63_83c9_abc9095777da_Class1 v )  (not (= ( class1_Class1IntAttr3 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 v )  )  ( class1_Class1IntAttr4 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c1 )  ) ) ))))) (and (= aux11 1) true)) (and (= aux11 0) false)))
(assert (and (=> (= aux11 0) (= weight11 8)) (=> (= aux11 1) (= weight11 0))))
(assert (and (>= aux12 0) (<= aux12 1)))
(assert (or (or (forall ((c1 Int)(c2 Int)) (=> (and ( type_7c35563d_c1db_432c_a53f_32802daa4359_Class2 c1 )  ( type_7c35563d_c1db_432c_a53f_32802daa4359_Class2 c2 ) ) (or ( class2_Class2BoolAttr1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c1 )  )  ( class2_Class2BoolAttr0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c2 )  ) ))) (and (= aux12 1) true)) (and (= aux12 0) false)))
(assert (and (=> (= aux12 0) (= weight12 10)) (=> (= aux12 1) (= weight12 0))))
(assert (and (>= aux13 0) (<= aux13 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_5cd450fa_9764_44b3_9dd5_e0c778e01549_Class3 c1 )  (= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c1 )  )  1))) (and (= aux13 1) true)) (and (= aux13 0) false)))
(assert (and (=> (= aux13 0) (= weight13 12)) (=> (= aux13 1) (= weight13 0))))
(assert (and (>= aux14 0) (<= aux14 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_5cd450fa_9764_44b3_9dd5_e0c778e01549_Class3 c1 )  (forall ((c2 Int)) (=> (and (and (and ( type_ea47a2bd_3728_4290_ac1b_c6444fcabbce_Class0 c2 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c2 ) ) ( type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 c2 ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 c2 ) ) (not (= ( class3_Class3IntAttr3 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c1 )  )  ( class0_Class0IntAttr4 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c2 )  ) ) ))))) (and (= aux14 1) true)) (and (= aux14 0) false)))
(assert (and (=> (= aux14 0) (= weight14 12)) (=> (= aux14 1) (= weight14 0))))
(assert (and (>= aux15 0) (<= aux15 1)))
(assert (or (or (or (forall ((v Int)) (=> (and ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 v )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 v ) ) (not (= ( class4_Class4IntAttr2 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 v )  )  7) ))) (forall ((v Int)) (=> (and ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 v )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 v ) ) (not (= ( class4_Class4IntAttr2 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 v )  )  5) )))) (and (= aux15 1) true)) (and (= aux15 0) false)))
(assert (and (=> (= aux15 0) (= weight15 5)) (=> (= aux15 1) (= weight15 0))))
(assert (and (>= aux16 0) (<= aux16 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and (and ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 c1 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c1 ) ) (and ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 c2 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c2 ) )) (and ( class4_Class4BoolAttr1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c1 )  )  ( class4_Class4BoolAttr0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c2 )  ) ))) (and (= aux16 1) true)) (and (= aux16 0) false)))
(assert (and (=> (= aux16 0) (= weight16 5)) (=> (= aux16 1) (= weight16 0))))
(assert (and (>= aux17 0) (<= aux17 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and (and (and ( type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 c1 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c1 ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 c1 ) ) (and (and ( type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 c2 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c2 ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 c2 ) )) (or ( class5_Class5BoolAttr0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c1 )  )  ( class5_Class5BoolAttr1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c2 )  ) ))) (and (= aux17 1) true)) (and (= aux17 0) false)))
(assert (and (=> (= aux17 0) (= weight17 6)) (=> (= aux17 1) (= weight17 0))))
(assert (and (>= aux18 0) (<= aux18 1)))
(assert (or (or (or (forall ((v Int)) (=> (and (and ( type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 v )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 v ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 v ) ) ( class5_Class5BoolAttr1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 v )  ) )) (forall ((v Int)) (=> (and (and ( type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 v )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 v ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 v ) ) ( class5_Class5BoolAttr0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 v )  ) ))) (and (= aux18 1) true)) (and (= aux18 0) false)))
(assert (and (=> (= aux18 0) (= weight18 6)) (=> (= aux18 1) (= weight18 0))))
(assert (and (>= aux19 0) (<= aux19 1)))
(assert (or (or (forall ((v Int)) (=> ( type_a952b49e_1ebf_4e44_aaf2_ff778658c43c_Class6 v )  (> ( class6_Class6IntAttr2 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 v )  )  17))) (and (= aux19 1) true)) (and (= aux19 0) false)))
(assert (and (=> (= aux19 0) (= weight19 7)) (=> (= aux19 1) (= weight19 0))))
(assert (and (>= aux20 0) (<= aux20 1)))
(assert (or (or (forall ((c6_1 Int)(c6_2 Int)) (=> (and ( type_a952b49e_1ebf_4e44_aaf2_ff778658c43c_Class6 c6_1 )  ( type_a952b49e_1ebf_4e44_aaf2_ff778658c43c_Class6 c6_2 ) ) (= ( class6_Class6IntAttr4 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c6_1 )  )  ( class6_Class6IntAttr3 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c6_2 )  ) ))) (and (= aux20 1) true)) (and (= aux20 0) false)))
(assert (and (=> (= aux20 0) (= weight20 7)) (=> (= aux20 1) (= weight20 0))))
(assert (and (>= aux21 0) (<= aux21 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_a952b49e_1ebf_4e44_aaf2_ff778658c43c_Class6 c1 )  (= ( class6_Class6IntAttr2 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c1 )  )  17))) (and (= aux21 1) true)) (and (= aux21 0) false)))
(assert (and (=> (= aux21 0) (= weight21 7)) (=> (= aux21 1) (= weight21 0))))
(assert (and (>= aux22 0) (<= aux22 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and ( type_604ebfe7_3412_4f13_9f07_c8b07dcd0d2a_Class7 v )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 v ) ) ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 v ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 v ) ) (<= ( class7_Class7IntAttr3 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 v )  )  2))) (and (= aux22 1) true)) (and (= aux22 0) false)))
(assert (and (=> (= aux22 0) (= weight22 8)) (=> (= aux22 1) (= weight22 0))))
(assert (and (>= aux23 0) (<= aux23 1)))
(assert (or (or (forall ((c7_2 Int)(c7_1 Int)) (=> (and (and (and (and ( type_604ebfe7_3412_4f13_9f07_c8b07dcd0d2a_Class7 c7_1 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c7_1 ) ) ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 c7_1 ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 c7_1 ) ) (and (and (and ( type_604ebfe7_3412_4f13_9f07_c8b07dcd0d2a_Class7 c7_2 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c7_2 ) ) ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 c7_2 ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 c7_2 ) )) (< ( class7_Class7IntAttr3 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c7_1 )  )  ( class7_Class7IntAttr2 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c7_2 )  ) ))) (and (= aux23 1) true)) (and (= aux23 0) false)))
(assert (and (=> (= aux23 0) (= weight23 8)) (=> (= aux23 1) (= weight23 0))))
(assert (and (>= aux24 0) (<= aux24 1)))
(assert (or (or (forall ((c1 Int)(c2 Int)) (=> (and (and (and (and ( type_604ebfe7_3412_4f13_9f07_c8b07dcd0d2a_Class7 c1 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c1 ) ) ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 c1 ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 c1 ) ) (and (and (and ( type_604ebfe7_3412_4f13_9f07_c8b07dcd0d2a_Class7 c2 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c2 ) ) ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 c2 ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 c2 ) )) (forall ((v Int)) (=> (and (and (and ( type_604ebfe7_3412_4f13_9f07_c8b07dcd0d2a_Class7 v )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 v ) ) ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 v ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 v ) ) (= ( class7_Class7IntAttr3 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 v )  )  ( class7_Class7IntAttr2 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c1 )  ) ))))) (and (= aux24 1) true)) (and (= aux24 0) false)))
(assert (and (=> (= aux24 0) (= weight24 8)) (=> (= aux24 1) (= weight24 0))))
(assert (and (>= aux25 0) (<= aux25 1)))
(assert (or (or (forall ((c8_2 Int)(c8_1 Int)) (=> (and ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c8_1 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c8_2 ) ) (< ( class8_Class8IntAttr2 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c8_1 )  )  ( class8_Class8IntAttr3 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c8_2 )  ) ))) (and (= aux25 1) true)) (and (= aux25 0) false)))
(assert (and (=> (= aux25 0) (= weight25 3)) (=> (= aux25 1) (= weight25 0))))
(assert (and (>= aux26 0) (<= aux26 1)))
(assert (or (or (forall ((c8_2 Int)(c8_1 Int)) (=> (and ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c8_1 )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 c8_2 ) ) (< ( class8_Class8IntAttr3 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c8_1 )  )  ( class8_Class8IntAttr4 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c8_2 )  ) ))) (and (= aux26 1) true)) (and (= aux26 0) false)))
(assert (and (=> (= aux26 0) (= weight26 3)) (=> (= aux26 1) (= weight26 0))))
(assert (and (>= aux27 0) (<= aux27 1)))
(assert (or (or (or (forall ((v Int)) (=> ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 v )  ( class8_Class8BoolAttr1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 v )  ) )) (forall ((v Int)) (=> ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 v )  ( class8_Class8BoolAttr0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 v )  ) ))) (and (= aux27 1) true)) (and (= aux27 0) false)))
(assert (and (=> (= aux27 0) (= weight27 3)) (=> (= aux27 1) (= weight27 0))))
(assert (and (>= aux28 0) (<= aux28 1)))
(assert (or (or (forall ((v Int)) (=> ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 v )  (not (= ( Enum0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 v )  )  1) ))) (and (= aux28 1) true)) (and (= aux28 0) false)))
(assert (and (=> (= aux28 0) (= weight28 3)) (=> (= aux28 1) (= weight28 0))))
(assert (and (>= aux29 0) (<= aux29 1)))
(assert (or (or (forall ((c9_2 Int)(c9_1 Int)) (=> (and ( type_5709cca6_4fde_4c19_9269_63751b332ed6_Class9 c9_1 )  ( type_5709cca6_4fde_4c19_9269_63751b332ed6_Class9 c9_2 ) ) (= ( class9_Class9IntAttr2 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c9_1 )  )  ( class9_Class9IntAttr4 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c9_2 )  ) ))) (and (= aux29 1) true)) (and (= aux29 0) false)))
(assert (and (=> (= aux29 0) (= weight29 5)) (=> (= aux29 1) (= weight29 0))))
(assert (and (>= aux30 0) (<= aux30 1)))
(assert (or (or (forall ((c9_2 Int)(c9_1 Int)) (=> (and ( type_5709cca6_4fde_4c19_9269_63751b332ed6_Class9 c9_1 )  ( type_5709cca6_4fde_4c19_9269_63751b332ed6_Class9 c9_2 ) ) (not (= ( class9_Class9IntAttr4 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c9_1 )  )  ( class9_Class9IntAttr2 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 c9_2 )  ) ) ))) (and (= aux30 1) true)) (and (= aux30 0) false)))
(assert (and (=> (= aux30 0) (= weight30 5)) (=> (= aux30 1) (= weight30 0))))
(assert (and (>= aux31 0) (<= aux31 1)))
(assert (or (or (or (forall ((v Int)) (=> ( type_5709cca6_4fde_4c19_9269_63751b332ed6_Class9 v )  ( class9_Class9BoolAttr0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 v )  ) )) (forall ((v Int)) (=> ( type_5709cca6_4fde_4c19_9269_63751b332ed6_Class9 v )  ( class9_Class9BoolAttr1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 v )  ) ))) (and (= aux31 1) true)) (and (= aux31 0) false)))
(assert (and (=> (= aux31 0) (= weight31 5)) (=> (= aux31 1) (= weight31 0))))
(assert (and (>= aux32 0) (<= aux32 1)))
(assert (or (or (forall ((v Int)) (=> ( type_5709cca6_4fde_4c19_9269_63751b332ed6_Class9 v )  (not (= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 v )  )  8) ))) (and (= aux32 1) true)) (and (= aux32 0) false)))
(assert (and (=> (= aux32 0) (= weight32 5)) (=> (= aux32 1) (= weight32 0))))
(assert (and (>= aux33 0) (<= aux33 1)))
(assert (or (or (forall ((v Int)) (=> ( type_5709cca6_4fde_4c19_9269_63751b332ed6_Class9 v )  (= ( Enum1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 v )  )  8))) (and (= aux33 1) true)) (and (= aux33 0) false)))
(assert (and (=> (= aux33 0) (= weight33 5)) (=> (= aux33 1) (= weight33 0))))
(assert (and (>= aux34 0) (<= aux34 1)))
(assert (and (>= aux35 0) (<= aux35 1)))
(assert (and (>= aux36 0) (<= aux36 1)))
(assert (and (>= aux37 0) (<= aux37 1)))
(assert (and (>= aux38 0) (<= aux38 1)))
(assert (and (>= aux39 0) (<= aux39 1)))
(assert (and (>= aux40 0) (<= aux40 1)))
(assert (and (>= aux41 0) (<= aux41 1)))
(assert (and (>= aux42 0) (<= aux42 1)))
(assert (and (>= aux43 0) (<= aux43 1)))
(assert (and (>= aux44 0) (<= aux44 1)))
(assert (and (>= aux45 0) (<= aux45 1)))
(assert (and (>= aux46 0) (<= aux46 1)))
(assert (or (or (exists ((p Int)) (and (and (and ( type_ea47a2bd_3728_4290_ac1b_c6444fcabbce_Class0 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) ) ( type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) )) (and (= aux34 1) true)) (and (= aux34 0) false)))
(assert (and (=> (= aux34 0) (= weight34 2)) (=> (= aux34 1) (= weight34 0))))
(assert (or (or (exists ((p Int)) ( type_37e7cf43_9a08_4d63_83c9_abc9095777da_Class1 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) ) (and (= aux35 1) true)) (and (= aux35 0) false)))
(assert (and (=> (= aux35 0) (= weight35 4)) (=> (= aux35 1) (= weight35 0))))
(assert (or (or (exists ((p Int)) (and ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) )) (and (= aux36 1) true)) (and (= aux36 0) false)))
(assert (and (=> (= aux36 0) (= weight36 6)) (=> (= aux36 1) (= weight36 0))))
(assert (or (or (exists ((p Int)) (and (and (and ( type_84c23e52_f36c_466d_b37f_296f2cc8ce5f_Class11 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) ) ( type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) )) (and (= aux37 1) true)) (and (= aux37 0) false)))
(assert (and (=> (= aux37 0) (= weight37 7)) (=> (= aux37 1) (= weight37 0))))
(assert (or (or (exists ((p Int)) ( type_927de51a_626f_43d1_b7ad_f2b2b079c7e7_Class12 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) ) (and (= aux38 1) true)) (and (= aux38 0) false)))
(assert (and (=> (= aux38 0) (= weight38 2)) (=> (= aux38 1) (= weight38 0))))
(assert (or (or (exists ((p Int)) ( type_7c35563d_c1db_432c_a53f_32802daa4359_Class2 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) ) (and (= aux39 1) true)) (and (= aux39 0) false)))
(assert (and (=> (= aux39 0) (= weight39 6)) (=> (= aux39 1) (= weight39 0))))
(assert (or (or (exists ((p Int)) ( type_5cd450fa_9764_44b3_9dd5_e0c778e01549_Class3 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) ) (and (= aux40 1) true)) (and (= aux40 0) false)))
(assert (and (=> (= aux40 0) (= weight40 3)) (=> (= aux40 1) (= weight40 0))))
(assert (or (or (exists ((p Int)) (and ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) )) (and (= aux41 1) true)) (and (= aux41 0) false)))
(assert (and (=> (= aux41 0) (= weight41 7)) (=> (= aux41 1) (= weight41 0))))
(assert (or (or (exists ((p Int)) (and (and ( type_2e254d92_505f_43da_8cba_c112eae3f5ca_Class5 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) )) (and (= aux42 1) true)) (and (= aux42 0) false)))
(assert (and (=> (= aux42 0) (= weight42 8)) (=> (= aux42 1) (= weight42 0))))
(assert (or (or (exists ((p Int)) ( type_a952b49e_1ebf_4e44_aaf2_ff778658c43c_Class6 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) ) (and (= aux43 1) true)) (and (= aux43 0) false)))
(assert (and (=> (= aux43 0) (= weight43 9)) (=> (= aux43 1) (= weight43 0))))
(assert (or (or (exists ((p Int)) (and (and (and ( type_604ebfe7_3412_4f13_9f07_c8b07dcd0d2a_Class7 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  )  ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) ) ( type_bcd83034_0855_468d_98b5_94f54b214ece_Class4 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) ) ( type_f58e0270_779a_4fe3_976b_6752a92d52da_Class10 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) )) (and (= aux44 1) true)) (and (= aux44 0) false)))
(assert (and (=> (= aux44 0) (= weight44 3)) (=> (= aux44 1) (= weight44 0))))
(assert (or (or (exists ((p Int)) ( type_a93a493e_3389_4bcc_8dd0_7edc42cc3f3c_Class8 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) ) (and (= aux45 1) true)) (and (= aux45 0) false)))
(assert (and (=> (= aux45 0) (= weight45 4)) (=> (= aux45 1) (= weight45 0))))
(assert (or (or (exists ((p Int)) ( type_5709cca6_4fde_4c19_9269_63751b332ed6_Class9 ( obj_593d74fc_1806_4ffe_8917_993dcb21cd37 p )  ) ) (and (= aux46 1) true)) (and (= aux46 0) false)))
(assert (and (=> (= aux46 0) (= weight46 5)) (=> (= aux46 1) (= weight46 0))))
(assert (= (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ weight0 weight1) weight2) weight3) weight4) weight5) weight6) weight7) weight8) weight9) weight10) weight11) weight12) weight13) weight14) weight15) weight16) weight17) weight18) weight19) weight20) weight21) weight22) weight23) weight24) weight25) weight26) weight27) weight28) weight29) weight30) weight31) weight32) weight33) weight34) weight35) weight36) weight37) weight38) weight39) weight40) weight41) weight42) weight43) weight44) weight45) weight46) 237))
(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 3) (= weight1 2)) (= weight2 1)) (= weight3 13)) (= weight4 1)) (= weight5 6)) (= weight6 9)) (= weight7 6)) (= weight8 0)) (= weight9 7)) (= weight10 2)) (= weight11 8)) (= weight12 10)) (= weight13 12)) (= weight14 12)) (= weight15 5)) (= weight16 5)) (= weight17 6)) (= weight18 6)) (= weight19 0)) (= weight20 7)) (= weight21 7)) (= weight22 8)) (= weight23 8)) (= weight24 0)) (= weight25 3)) (= weight26 3)) (= weight27 3)) (= weight28 3)) (= weight29 0)) (= weight30 5)) (= weight31 5)) (= weight32 0)) (= weight33 5)) (= weight34 2)) (= weight35 4)) (= weight36 6)) (= weight37 7)) (= weight38 2)) (= weight39 6)) (= weight40 3)) (= weight41 7)) (= weight42 8)) (= weight43 9)) (= weight44 3)) (= weight45 4)) (= weight46 5)) ))
(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 3) (= weight1 2)) (= weight2 1)) (= weight3 13)) (= weight4 1)) (= weight5 6)) (= weight6 9)) (= weight7 6)) (= weight8 0)) (= weight9 7)) (= weight10 2)) (= weight11 8)) (= weight12 10)) (= weight13 12)) (= weight14 12)) (= weight15 5)) (= weight16 5)) (= weight17 6)) (= weight18 6)) (= weight19 7)) (= weight20 7)) (= weight21 0)) (= weight22 8)) (= weight23 8)) (= weight24 0)) (= weight25 3)) (= weight26 3)) (= weight27 3)) (= weight28 3)) (= weight29 0)) (= weight30 5)) (= weight31 5)) (= weight32 0)) (= weight33 5)) (= weight34 2)) (= weight35 4)) (= weight36 6)) (= weight37 7)) (= weight38 2)) (= weight39 6)) (= weight40 3)) (= weight41 7)) (= weight42 8)) (= weight43 9)) (= weight44 3)) (= weight45 4)) (= weight46 5)) ))
(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 3) (= weight1 2)) (= weight2 1)) (= weight3 13)) (= weight4 1)) (= weight5 6)) (= weight6 9)) (= weight7 6)) (= weight8 0)) (= weight9 7)) (= weight10 2)) (= weight11 8)) (= weight12 10)) (= weight13 12)) (= weight14 12)) (= weight15 5)) (= weight16 5)) (= weight17 6)) (= weight18 6)) (= weight19 0)) (= weight20 7)) (= weight21 7)) (= weight22 8)) (= weight23 0)) (= weight24 8)) (= weight25 3)) (= weight26 3)) (= weight27 3)) (= weight28 3)) (= weight29 5)) (= weight30 0)) (= weight31 5)) (= weight32 5)) (= weight33 0)) (= weight34 2)) (= weight35 4)) (= weight36 6)) (= weight37 7)) (= weight38 2)) (= weight39 6)) (= weight40 3)) (= weight41 7)) (= weight42 8)) (= weight43 9)) (= weight44 3)) (= weight45 4)) (= weight46 5)) ))
(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 3) (= weight1 2)) (= weight2 1)) (= weight3 13)) (= weight4 1)) (= weight5 6)) (= weight6 9)) (= weight7 6)) (= weight8 0)) (= weight9 7)) (= weight10 2)) (= weight11 8)) (= weight12 10)) (= weight13 12)) (= weight14 12)) (= weight15 5)) (= weight16 5)) (= weight17 6)) (= weight18 6)) (= weight19 7)) (= weight20 7)) (= weight21 0)) (= weight22 8)) (= weight23 0)) (= weight24 8)) (= weight25 3)) (= weight26 3)) (= weight27 3)) (= weight28 3)) (= weight29 5)) (= weight30 0)) (= weight31 5)) (= weight32 5)) (= weight33 0)) (= weight34 2)) (= weight35 4)) (= weight36 6)) (= weight37 7)) (= weight38 2)) (= weight39 6)) (= weight40 3)) (= weight41 7)) (= weight42 8)) (= weight43 9)) (= weight44 3)) (= weight45 4)) (= weight46 5)) ))
(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 3) (= weight1 2)) (= weight2 1)) (= weight3 13)) (= weight4 1)) (= weight5 6)) (= weight6 9)) (= weight7 6)) (= weight8 0)) (= weight9 7)) (= weight10 2)) (= weight11 8)) (= weight12 10)) (= weight13 12)) (= weight14 12)) (= weight15 5)) (= weight16 5)) (= weight17 6)) (= weight18 6)) (= weight19 0)) (= weight20 7)) (= weight21 7)) (= weight22 8)) (= weight23 8)) (= weight24 0)) (= weight25 3)) (= weight26 3)) (= weight27 3)) (= weight28 3)) (= weight29 5)) (= weight30 0)) (= weight31 5)) (= weight32 5)) (= weight33 0)) (= weight34 2)) (= weight35 4)) (= weight36 6)) (= weight37 7)) (= weight38 2)) (= weight39 6)) (= weight40 3)) (= weight41 7)) (= weight42 8)) (= weight43 9)) (= weight44 3)) (= weight45 4)) (= weight46 5)) ))
(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 3) (= weight1 2)) (= weight2 1)) (= weight3 13)) (= weight4 1)) (= weight5 6)) (= weight6 9)) (= weight7 6)) (= weight8 0)) (= weight9 7)) (= weight10 2)) (= weight11 8)) (= weight12 10)) (= weight13 12)) (= weight14 12)) (= weight15 5)) (= weight16 5)) (= weight17 6)) (= weight18 6)) (= weight19 7)) (= weight20 7)) (= weight21 0)) (= weight22 8)) (= weight23 8)) (= weight24 0)) (= weight25 3)) (= weight26 3)) (= weight27 3)) (= weight28 3)) (= weight29 5)) (= weight30 0)) (= weight31 5)) (= weight32 5)) (= weight33 0)) (= weight34 2)) (= weight35 4)) (= weight36 6)) (= weight37 7)) (= weight38 2)) (= weight39 6)) (= weight40 3)) (= weight41 7)) (= weight42 8)) (= weight43 9)) (= weight44 3)) (= weight45 4)) (= weight46 5)) ))
(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 3) (= weight1 2)) (= weight2 1)) (= weight3 13)) (= weight4 1)) (= weight5 6)) (= weight6 9)) (= weight7 6)) (= weight8 0)) (= weight9 7)) (= weight10 2)) (= weight11 8)) (= weight12 10)) (= weight13 12)) (= weight14 12)) (= weight15 5)) (= weight16 5)) (= weight17 6)) (= weight18 6)) (= weight19 0)) (= weight20 7)) (= weight21 7)) (= weight22 8)) (= weight23 8)) (= weight24 0)) (= weight25 3)) (= weight26 3)) (= weight27 3)) (= weight28 3)) (= weight29 0)) (= weight30 5)) (= weight31 5)) (= weight32 5)) (= weight33 0)) (= weight34 2)) (= weight35 4)) (= weight36 6)) (= weight37 7)) (= weight38 2)) (= weight39 6)) (= weight40 3)) (= weight41 7)) (= weight42 8)) (= weight43 9)) (= weight44 3)) (= weight45 4)) (= weight46 5)) ))
(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 3) (= weight1 2)) (= weight2 1)) (= weight3 13)) (= weight4 1)) (= weight5 6)) (= weight6 9)) (= weight7 6)) (= weight8 0)) (= weight9 7)) (= weight10 2)) (= weight11 8)) (= weight12 10)) (= weight13 12)) (= weight14 12)) (= weight15 5)) (= weight16 5)) (= weight17 6)) (= weight18 6)) (= weight19 7)) (= weight20 7)) (= weight21 0)) (= weight22 8)) (= weight23 8)) (= weight24 0)) (= weight25 3)) (= weight26 3)) (= weight27 3)) (= weight28 3)) (= weight29 0)) (= weight30 5)) (= weight31 5)) (= weight32 5)) (= weight33 0)) (= weight34 2)) (= weight35 4)) (= weight36 6)) (= weight37 7)) (= weight38 2)) (= weight39 6)) (= weight40 3)) (= weight41 7)) (= weight42 8)) (= weight43 9)) (= weight44 3)) (= weight45 4)) (= weight46 5)) ))
(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 3) (= weight1 2)) (= weight2 1)) (= weight3 13)) (= weight4 1)) (= weight5 6)) (= weight6 9)) (= weight7 6)) (= weight8 0)) (= weight9 7)) (= weight10 2)) (= weight11 8)) (= weight12 10)) (= weight13 12)) (= weight14 12)) (= weight15 5)) (= weight16 5)) (= weight17 6)) (= weight18 6)) (= weight19 0)) (= weight20 7)) (= weight21 7)) (= weight22 8)) (= weight23 0)) (= weight24 8)) (= weight25 3)) (= weight26 3)) (= weight27 3)) (= weight28 3)) (= weight29 0)) (= weight30 5)) (= weight31 5)) (= weight32 0)) (= weight33 5)) (= weight34 2)) (= weight35 4)) (= weight36 6)) (= weight37 7)) (= weight38 2)) (= weight39 6)) (= weight40 3)) (= weight41 7)) (= weight42 8)) (= weight43 9)) (= weight44 3)) (= weight45 4)) (= weight46 5)) ))
(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 3) (= weight1 2)) (= weight2 1)) (= weight3 13)) (= weight4 1)) (= weight5 6)) (= weight6 9)) (= weight7 6)) (= weight8 0)) (= weight9 7)) (= weight10 2)) (= weight11 8)) (= weight12 10)) (= weight13 12)) (= weight14 12)) (= weight15 5)) (= weight16 5)) (= weight17 6)) (= weight18 6)) (= weight19 7)) (= weight20 7)) (= weight21 0)) (= weight22 8)) (= weight23 0)) (= weight24 8)) (= weight25 3)) (= weight26 3)) (= weight27 3)) (= weight28 3)) (= weight29 0)) (= weight30 5)) (= weight31 5)) (= weight32 0)) (= weight33 5)) (= weight34 2)) (= weight35 4)) (= weight36 6)) (= weight37 7)) (= weight38 2)) (= weight39 6)) (= weight40 3)) (= weight41 7)) (= weight42 8)) (= weight43 9)) (= weight44 3)) (= weight45 4)) (= weight46 5)) ))
(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 3) (= weight1 2)) (= weight2 1)) (= weight3 13)) (= weight4 1)) (= weight5 6)) (= weight6 9)) (= weight7 6)) (= weight8 0)) (= weight9 7)) (= weight10 2)) (= weight11 8)) (= weight12 10)) (= weight13 12)) (= weight14 12)) (= weight15 5)) (= weight16 5)) (= weight17 6)) (= weight18 6)) (= weight19 7)) (= weight20 7)) (= weight21 0)) (= weight22 8)) (= weight23 8)) (= weight24 0)) (= weight25 3)) (= weight26 3)) (= weight27 3)) (= weight28 3)) (= weight29 5)) (= weight30 0)) (= weight31 5)) (= weight32 0)) (= weight33 5)) (= weight34 2)) (= weight35 4)) (= weight36 6)) (= weight37 7)) (= weight38 2)) (= weight39 6)) (= weight40 3)) (= weight41 7)) (= weight42 8)) (= weight43 9)) (= weight44 3)) (= weight45 4)) (= weight46 5)) ))
(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 3) (= weight1 2)) (= weight2 1)) (= weight3 13)) (= weight4 1)) (= weight5 6)) (= weight6 9)) (= weight7 6)) (= weight8 0)) (= weight9 7)) (= weight10 2)) (= weight11 8)) (= weight12 10)) (= weight13 12)) (= weight14 12)) (= weight15 5)) (= weight16 5)) (= weight17 6)) (= weight18 6)) (= weight19 0)) (= weight20 7)) (= weight21 7)) (= weight22 8)) (= weight23 8)) (= weight24 0)) (= weight25 3)) (= weight26 3)) (= weight27 3)) (= weight28 3)) (= weight29 5)) (= weight30 0)) (= weight31 5)) (= weight32 0)) (= weight33 5)) (= weight34 2)) (= weight35 4)) (= weight36 6)) (= weight37 7)) (= weight38 2)) (= weight39 6)) (= weight40 3)) (= weight41 7)) (= weight42 8)) (= weight43 9)) (= weight44 3)) (= weight45 4)) (= weight46 5)) ))
