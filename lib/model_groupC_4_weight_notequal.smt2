
;this file is automatically generated: Mon Aug 22 15:29:06 IST 2016

;declarations generated

(declare-fun class10_Class10IntAttr3 ( Int) Int )
(declare-fun class10_Class10IntAttr2 ( Int) Int )
(declare-fun type_c8ea8c7d_3a5f_40ea_8d08_01aea6979063_Class18 ( Int) Bool )
(declare-fun type_2e8b670d_fc20_4ca4_a27d_8314050caa7e_Class22 ( Int) Bool )
(declare-fun type_fef1a83b_fdbe_4c2b_a919_a04e8d5fa0ca_Class16 ( Int) Bool )
(declare-fun class39_Class39BoolAttr1 ( Int) Bool )
(declare-fun class39_Class39BoolAttr0 ( Int) Bool )
(declare-fun type_bcb980dc_d655_4705_9a79_ec702e13347a_Class21 ( Int) Bool )
(declare-fun class11_Class11IntAttr2 ( Int) Int )
(declare-fun oclExcludes ( Int Int) Bool )
(declare-fun class11_Class11IntAttr3 ( Int) Int )
(declare-fun type_f7d0736b_6bc7_486d_a533_f9606dc474c2_Class6 ( Int) Bool )
(declare-fun rel_95131325_389f_4190_b3f5_03cd26ef56d1_Class8_Class12 ( Int Int) Bool )
(declare-fun type_dedbce57_a9dc_4974_90bf_1e9ad4eeb47b_Class31 ( Int) Bool )
(declare-fun class14_Class14BoolAttr0 ( Int) Bool )
(declare-fun class14_Class14BoolAttr1 ( Int) Bool )
(declare-fun class8_Class8IntAttr4 ( Int) Int )
(declare-fun class8_Class8IntAttr3 ( Int) Int )
(declare-fun type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 ( Int) Bool )
(declare-fun type_02f6d14f_2953_485f_b6d8_a3d3dfd837e7_Class20 ( Int) Bool )
(declare-fun class9_Class9BoolAttr2 ( Int) Bool )
(declare-fun class9_Class9BoolAttr0 ( Int) Bool )
(declare-fun class9_Class9BoolAttr1 ( Int) Bool )
(declare-fun class12_Class12BoolAttr1 ( Int) Bool )
(declare-fun class12_Class12BoolAttr0 ( Int) Bool )
(declare-fun aux101 () Int )
(declare-fun type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( Int) Bool )
(declare-fun aux102 () Int )
(declare-fun type_d5c0ab30_b984_49ad_aa40_f21ac942caec_Class1 ( Int) Bool )
(declare-fun type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( Int) Bool )
(declare-fun aux100 () Int )
(declare-fun k03004aa7_d48b_44ff_a8bf_088db36982bb () Int )
(declare-fun class17_Class17IntAttr2 ( Int) Int )
(declare-fun class44_Class44IntAttr1 ( Int) Int )
(declare-fun obj_515bd736_5855_4532_b744_c0c377e1f652 ( Int) Int )
(declare-fun class16_Class16IntAttr2 ( Int) Int )
(declare-fun class16_Class16IntAttr3 ( Int) Int )
(declare-fun class32_Class32BoolAttr0 ( Int) Bool )
(declare-fun aux109 () Int )
(declare-fun class32_Class32BoolAttr1 ( Int) Bool )
(declare-fun aux107 () Int )
(declare-fun aux108 () Int )
(declare-fun aux105 () Int )
(declare-fun aux106 () Int )
(declare-fun type_f4aecd16_2657_4fcf_a03d_3baf334bec8d_Class12 ( Int) Bool )
(declare-fun class3_Class3IntAttr4 ( Int) Int )
(declare-fun aux103 () Int )
(declare-fun class3_Class3IntAttr3 ( Int) Int )
(declare-fun class43_Class43IntAttr1 ( Int) Int )
(declare-fun aux104 () Int )
(declare-fun Cardinality ( Int) Int )
(declare-fun class18_Class18IntAttr2 ( Int) Int )
(declare-fun type_2fc36f77_0903_45ee_8bfc_44603a1240e9_Class30 ( Int) Bool )
(declare-fun class19_Class19IntAttr2 ( Int) Int )
(declare-fun class0_Class0IntAttr3 ( Int) Int )
(declare-fun class45_Class45IntAttr1 ( Int) Int )
(declare-fun class0_Class0IntAttr4 ( Int) Int )
(declare-fun rel_9e5cef00_1809_4ab5_b609_2dfee9da37ab_Class13_Class11 ( Int Int) Bool )
(declare-fun aux123 () Int )
(declare-fun aux124 () Int )
(declare-fun aux121 () Int )
(declare-fun aux122 () Int )
(declare-fun class13_Class13IntAttr3 ( Int) Int )
(declare-fun aux120 () Int )
(declare-fun class13_Class13IntAttr2 ( Int) Int )
(declare-fun class19_Class19BoolAttr1 ( Int) Bool )
(declare-fun type_9f235ff3_0148_4b15_8098_7952d9b857d0_Class40 ( Int) Bool )
(declare-fun class19_Class19BoolAttr0 ( Int) Bool )
(declare-fun rel_7ef7d637_4af0_4730_9fa0_f211426140af_Class12_Class41 ( Int Int) Bool )
(declare-fun class34_Class34BoolAttr0 ( Int) Bool )
(declare-fun class34_Class34BoolAttr1 ( Int) Bool )
(declare-fun class12_Class12IntAttr3 ( Int) Int )
(declare-fun class12_Class12IntAttr2 ( Int) Int )
(declare-fun class37_Class37BoolAttr0 ( Int) Bool )
(declare-fun aux129 () Int )
(declare-fun class37_Class37BoolAttr1 ( Int) Bool )
(declare-fun aux127 () Int )
(declare-fun aux128 () Int )
(declare-fun aux125 () Int )
(declare-fun aux126 () Int )
(declare-fun aux112 () Int )
(declare-fun class15_Class15IntAttr2 ( Int) Int )
(declare-fun aux113 () Int )
(declare-fun aux110 () Int )
(declare-fun aux111 () Int )
(declare-fun class15_Class15IntAttr3 ( Int) Int )
(declare-fun class17_Class17BoolAttr0 ( Int) Bool )
(declare-fun class14_Class14IntAttr3 ( Int) Int )
(declare-fun class17_Class17BoolAttr1 ( Int) Bool )
(declare-fun class14_Class14IntAttr2 ( Int) Int )
(declare-fun class36_Class36BoolAttr1 ( Int) Bool )
(declare-fun class36_Class36BoolAttr0 ( Int) Bool )
(declare-fun type_079620c9_6fe6_4f84_8af3_4d911268a155_Class19 ( Int) Bool )
(declare-fun aux118 () Int )
(declare-fun aux119 () Int )
(declare-fun aux116 () Int )
(declare-fun aux117 () Int )
(declare-fun aux114 () Int )
(declare-fun aux115 () Int )
(declare-fun class33_Class33IntAttr3 ( Int) Int )
(declare-fun aux145 () Int )
(declare-fun class33_Class33IntAttr4 ( Int) Int )
(declare-fun aux146 () Int )
(declare-fun aux143 () Int )
(declare-fun aux144 () Int )
(declare-fun k9d454089_b74b_44bf_8738_139bf3366f46 () Int )
(declare-fun aux141 () Int )
(declare-fun aux142 () Int )
(declare-fun type_351a54b4_c9f6_4636_8930_793e7b099c9d_Class14 ( Int) Bool )
(declare-fun class33_Class33IntAttr2 ( Int) Int )
(declare-fun aux140 () Int )
(declare-fun aux67 () Int )
(declare-fun type_74108e58_c44d_41b4_9ef1_29b96fd053cd_Class5 ( Int) Bool )
(declare-fun aux66 () Int )
(declare-fun class31_Class31BoolAttr0 ( Int) Bool )
(declare-fun aux69 () Int )
(declare-fun class31_Class31BoolAttr1 ( Int) Bool )
(declare-fun aux68 () Int )
(declare-fun aux63 () Int )
(declare-fun aux62 () Int )
(declare-fun aux65 () Int )
(declare-fun aux64 () Int )
(declare-fun aux70 () Int )
(declare-fun aux72 () Int )
(declare-fun aux71 () Int )
(declare-fun class41_Class41BoolAttr0 ( Int) Bool )
(declare-fun aux149 () Int )
(declare-fun class28_Class28IntAttr0 ( Int) Int )
(declare-fun aux147 () Int )
(declare-fun kfe14d574_16a8_43d2_a9b0_57971018d3cc () Int )
(declare-fun aux148 () Int )
(declare-fun aux134 () Int )
(declare-fun aux135 () Int )
(declare-fun aux132 () Int )
(declare-fun aux133 () Int )
(declare-fun aux130 () Int )
(declare-fun type_dd2a5e45_d728_42d4_977e_eefc5f2ccfca_Class28 ( Int) Bool )
(declare-fun aux131 () Int )
(declare-fun class35_Class35IntAttr2 ( Int) Int )
(declare-fun aux78 () Int )
(declare-fun aux77 () Int )
(declare-fun aux79 () Int )
(declare-fun type_a07d6e94_fac1_4e80_ae42_890918efcc93_Class9 ( Int) Bool )
(declare-fun aux74 () Int )
(declare-fun aux73 () Int )
(declare-fun aux76 () Int )
(declare-fun aux75 () Int )
(declare-fun aux81 () Int )
(declare-fun aux80 () Int )
(declare-fun type_999e2e48_7673_4750_802c_d149f09609af_Class41 ( Int) Bool )
(declare-fun aux83 () Int )
(declare-fun aux82 () Int )
(declare-fun aux138 () Int )
(declare-fun aux139 () Int )
(declare-fun aux136 () Int )
(declare-fun aux137 () Int )
(declare-fun type_1c2d69d3_02b8_49b8_bf10_a72663e5b4b1_Class33 ( Int) Bool )
(declare-fun type_e1a35778_a896_4f4f_8375_aa81f455f71e_Class43 ( Int) Bool )
(declare-fun aux89 () Int )
(declare-fun aux88 () Int )
(declare-fun aux85 () Int )
(declare-fun aux84 () Int )
(declare-fun aux87 () Int )
(declare-fun aux86 () Int )
(declare-fun aux92 () Int )
(declare-fun aux91 () Int )
(declare-fun aux94 () Int )
(declare-fun aux93 () Int )
(declare-fun aux90 () Int )
(declare-fun class31_Class31IntAttr2 ( Int) Int )
(declare-fun aux156 () Int )
(declare-fun aux157 () Int )
(declare-fun aux154 () Int )
(declare-fun aux155 () Int )
(declare-fun aux152 () Int )
(declare-fun aux153 () Int )
(declare-fun class31_Class31IntAttr4 ( Int) Int )
(declare-fun aux150 () Int )
(declare-fun class31_Class31IntAttr3 ( Int) Int )
(declare-fun aux151 () Int )
(declare-fun aux99 () Int )
(declare-fun class30_Class30BoolAttr1 ( Int) Bool )
(declare-fun aux96 () Int )
(declare-fun class30_Class30BoolAttr0 ( Int) Bool )
(declare-fun aux95 () Int )
(declare-fun type_f9486d5d_0fb9_4716_92d7_7abaf2f5be10_Class44 ( Int) Bool )
(declare-fun aux98 () Int )
(declare-fun aux97 () Int )
(declare-fun class40_Class40BoolAttr0 ( Int) Bool )
(declare-fun class40_Class40BoolAttr1 ( Int) Bool )
(declare-fun aux158 () Int )
(declare-fun class41_Class41IntAttr1 ( Int) Int )
(declare-fun aux27 () Int )
(declare-fun aux26 () Int )
(declare-fun aux29 () Int )
(declare-fun aux28 () Int )
(declare-fun aux23 () Int )
(declare-fun aux22 () Int )
(declare-fun aux25 () Int )
(declare-fun aux24 () Int )
(declare-fun aux21 () Int )
(declare-fun aux20 () Int )
(declare-fun class4_Class4IntAttr4 ( Int) Int )
(declare-fun class4_Class4IntAttr3 ( Int) Int )
(declare-fun weight9 () Int )
(declare-fun weight8 () Int )
(declare-fun type_6d9bfb78_1fba_4d71_a018_1bbc96d7358e_Class13 ( Int) Bool )
(declare-fun aux38 () Int )
(declare-fun class42_Class42BoolAttr0 ( Int) Bool )
(declare-fun aux37 () Int )
(declare-fun aux39 () Int )
(declare-fun aux34 () Int )
(declare-fun aux33 () Int )
(declare-fun aux36 () Int )
(declare-fun aux35 () Int )
(declare-fun aux30 () Int )
(declare-fun aux32 () Int )
(declare-fun aux31 () Int )
(declare-fun class7_Class7IntAttr3 ( Int) Int )
(declare-fun class7_Class7IntAttr4 ( Int) Int )
(declare-fun type_48fc8824_4306_4532_be6c_7e02632199a9_Class17 ( Int) Bool )
(declare-fun aux1 () Int )
(declare-fun aux0 () Int )
(declare-fun aux3 () Int )
(declare-fun aux2 () Int )
(declare-fun aux49 () Int )
(declare-fun aux48 () Int )
(declare-fun aux45 () Int )
(declare-fun aux44 () Int )
(declare-fun aux47 () Int )
(declare-fun aux46 () Int )
(declare-fun aux41 () Int )
(declare-fun aux40 () Int )
(declare-fun class43_Class43BoolAttr0 ( Int) Bool )
(declare-fun aux43 () Int )
(declare-fun aux42 () Int )
(declare-fun aux50 () Int )
(declare-fun type_6833d213_f5a4_412b_a439_8684521d0f32_Class7 ( Int) Bool )
(declare-fun aux9 () Int )
(declare-fun aux8 () Int )
(declare-fun rel_33d48847_867e_4ef6_83a9_d0eb17db3b64_Class14_Class9 ( Int Int) Bool )
(declare-fun aux5 () Int )
(declare-fun aux4 () Int )
(declare-fun aux7 () Int )
(declare-fun type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 ( Int) Bool )
(declare-fun aux6 () Int )
(declare-fun rel_5906c9fd_1c41_4dee_8fae_1599604b9633_Class9_Class4 ( Int Int) Bool )
(declare-fun aux59 () Int )
(declare-fun class44_Class44BoolAttr0 ( Int) Bool )
(declare-fun weight7 () Int )
(declare-fun aux56 () Int )
(declare-fun weight6 () Int )
(declare-fun aux55 () Int )
(declare-fun weight5 () Int )
(declare-fun aux58 () Int )
(declare-fun weight4 () Int )
(declare-fun aux57 () Int )
(declare-fun weight3 () Int )
(declare-fun aux52 () Int )
(declare-fun weight2 () Int )
(declare-fun aux51 () Int )
(declare-fun weight1 () Int )
(declare-fun aux54 () Int )
(declare-fun weight0 () Int )
(declare-fun aux53 () Int )
(declare-fun aux61 () Int )
(declare-fun aux60 () Int )
(declare-fun rel_fa8cb6ed_606b_45b9_a178_c8b7cc7a24c9_Class6_Class0 ( Int Int) Bool )
(declare-fun type_c0c5f4ed_c616_47b5_8790_e0d1bcf8bc03_Class23 ( Int) Bool )
(declare-fun class45_Class45BoolAttr0 ( Int) Bool )
(declare-fun weight90 () Int )
(declare-fun type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( Int) Bool )
(declare-fun type_ae2b4f6d_4057_4358_a0ae_952c5d73594c_Class29 ( Int) Bool )
(declare-fun rel_d39cc393_cbb0_4d24_8e67_2d4f0077434e_Class3_Class14 ( Int Int) Bool )
(declare-fun weight99 () Int )
(declare-fun weight93 () Int )
(declare-fun weight94 () Int )
(declare-fun class13_Class13BoolAttr1 ( Int) Bool )
(declare-fun weight91 () Int )
(declare-fun class13_Class13BoolAttr0 ( Int) Bool )
(declare-fun weight92 () Int )
(declare-fun weight97 () Int )
(declare-fun rel_48855ce5_0e2f_44fc_a573_b6186da30fdc_Class19_Class17 ( Int Int) Bool )
(declare-fun weight98 () Int )
(declare-fun weight95 () Int )
(declare-fun weight96 () Int )
(declare-fun rel_dd7e6bdc_c79f_401d_b0f8_063a00c7bc01_Class18_Class10 ( Int Int) Bool )
(declare-fun class33_Class33BoolAttr1 ( Int) Bool )
(declare-fun class33_Class33BoolAttr0 ( Int) Bool )
(declare-fun class8_Class8BoolAttr2 ( Int) Bool )
(declare-fun class8_Class8BoolAttr1 ( Int) Bool )
(declare-fun class8_Class8BoolAttr0 ( Int) Bool )
(declare-fun aux19 () Int )
(declare-fun aux16 () Int )
(declare-fun aux15 () Int )
(declare-fun aux18 () Int )
(declare-fun aux17 () Int )
(declare-fun aux12 () Int )
(declare-fun aux11 () Int )
(declare-fun aux14 () Int )
(declare-fun aux13 () Int )
(declare-fun aux10 () Int )
(declare-fun oclSelect ( Int Bool) Int )
(declare-fun class1_Class1IntAttr4 ( Int) Int )
(declare-fun class1_Class1IntAttr3 ( Int) Int )
(declare-fun rel_43936137_e153_4f56_b6bb_aef3c5d5f676_Class1_Class43 ( Int Int) Bool )
(declare-fun class21_Class21IntAttr2 ( Int) Int )
(declare-fun type_a0227fc1_0bad_4057_9dbf_8203cdddd07d_Class10 ( Int) Bool )
(declare-fun k020f5f54_49f2_4dae_96e5_b7a6e0ce57e4 () Int )
(declare-fun weight57 () Int )
(declare-fun weight58 () Int )
(declare-fun weight55 () Int )
(declare-fun weight56 () Int )
(declare-fun class39_Class39IntAttr2 ( Int) Int )
(declare-fun rel_d71e56c7_b035_46bc_b4a8_ea20833e2039_Class2_Class42 ( Int Int) Bool )
(declare-fun weight59 () Int )
(declare-fun weight50 () Int )
(declare-fun weight53 () Int )
(declare-fun rel_e2cbc87d_870a_41d7_ae95_b9afd6c8f710_Class4_Class25 ( Int Int) Bool )
(declare-fun weight54 () Int )
(declare-fun weight51 () Int )
(declare-fun weight52 () Int )
(declare-fun class20_Class20IntAttr2 ( Int) Int )
(declare-fun type_9c38b3cf_660d_496f_9e96_329375e62d98_Class24 ( Int) Bool )
(declare-fun class23_Class23IntAttr0 ( Int) Int )
(declare-fun class15_Class15BoolAttr1 ( Int) Bool )
(declare-fun class15_Class15BoolAttr0 ( Int) Bool )
(declare-fun weight68 () Int )
(declare-fun weight69 () Int )
(declare-fun weight66 () Int )
(declare-fun weight67 () Int )
(declare-fun weight60 () Int )
(declare-fun class22_Class22IntAttr2 ( Int) Int )
(declare-fun weight61 () Int )
(declare-fun class38_Class38BoolAttr1 ( Int) Bool )
(declare-fun class38_Class38BoolAttr0 ( Int) Bool )
(declare-fun weight64 () Int )
(declare-fun type_5a4fb472_fbcd_48d1_b737_76a737c43953_Class39 ( Int) Bool )
(declare-fun weight65 () Int )
(declare-fun weight62 () Int )
(declare-fun weight63 () Int )
(declare-fun type_2e7ffccc_0133_4689_bdd7_613ea248907a_Class3 ( Int) Bool )
(declare-fun class9_Class9IntAttr4 ( Int) Int )
(declare-fun class9_Class9IntAttr3 ( Int) Int )
(declare-fun class25_Class25IntAttr0 ( Int) Int )
(declare-fun type_7fbb9086_5053_48a0_bea1_f02a52920c64_Class45 ( Int) Bool )
(declare-fun class36_Class36IntAttr2 ( Int) Int )
(declare-fun weight79 () Int )
(declare-fun weight152 () Int )
(declare-fun weight153 () Int )
(declare-fun class24_Class24IntAttr0 ( Int) Int )
(declare-fun weight77 () Int )
(declare-fun weight150 () Int )
(declare-fun weight78 () Int )
(declare-fun weight151 () Int )
(declare-fun class18_Class18BoolAttr1 ( Int) Bool )
(declare-fun class18_Class18BoolAttr0 ( Int) Bool )
(declare-fun weight71 () Int )
(declare-fun weight72 () Int )
(declare-fun weight158 () Int )
(declare-fun weight70 () Int )
(declare-fun weight75 () Int )
(declare-fun weight156 () Int )
(declare-fun weight76 () Int )
(declare-fun weight157 () Int )
(declare-fun weight73 () Int )
(declare-fun weight154 () Int )
(declare-fun weight74 () Int )
(declare-fun weight155 () Int )
(declare-fun class6_Class6IntAttr3 ( Int) Int )
(declare-fun class6_Class6IntAttr4 ( Int) Int )
(declare-fun class38_Class38IntAttr2 ( Int) Int )
(declare-fun class27_Class27IntAttr0 ( Int) Int )
(declare-fun class35_Class35BoolAttr0 ( Int) Bool )
(declare-fun class35_Class35BoolAttr1 ( Int) Bool )
(declare-fun weight88 () Int )
(declare-fun weight89 () Int )
(declare-fun class37_Class37IntAttr2 ( Int) Int )
(declare-fun weight82 () Int )
(declare-fun weight83 () Int )
(declare-fun class26_Class26IntAttr0 ( Int) Int )
(declare-fun weight80 () Int )
(declare-fun weight81 () Int )
(declare-fun weight86 () Int )
(declare-fun weight87 () Int )
(declare-fun weight84 () Int )
(declare-fun weight85 () Int )
(declare-fun weight129 () Int )
(declare-fun type_304bfd46_4510_4fc7_9f07_ee64c6139dd7_Class8 ( Int) Bool )
(declare-fun weight13 () Int )
(declare-fun weight130 () Int )
(declare-fun weight14 () Int )
(declare-fun weight131 () Int )
(declare-fun weight11 () Int )
(declare-fun weight12 () Int )
(declare-fun class32_Class32IntAttr2 ( Int) Int )
(declare-fun weight17 () Int )
(declare-fun weight18 () Int )
(declare-fun class16_Class16BoolAttr1 ( Int) Bool )
(declare-fun class32_Class32IntAttr4 ( Int) Int )
(declare-fun class4_Class4BoolAttr2 ( Int) Bool )
(declare-fun weight15 () Int )
(declare-fun class16_Class16BoolAttr0 ( Int) Bool )
(declare-fun class32_Class32IntAttr3 ( Int) Int )
(declare-fun weight16 () Int )
(declare-fun class4_Class4BoolAttr0 ( Int) Bool )
(declare-fun weight138 () Int )
(declare-fun class4_Class4BoolAttr1 ( Int) Bool )
(declare-fun weight139 () Int )
(declare-fun weight136 () Int )
(declare-fun weight137 () Int )
(declare-fun weight134 () Int )
(declare-fun weight10 () Int )
(declare-fun weight135 () Int )
(declare-fun weight132 () Int )
(declare-fun weight133 () Int )
(declare-fun weight19 () Int )
(declare-fun rel_0f589dbe_5a0f_4b96_931d_47694b81f56d_Class17_Class20 ( Int Int) Bool )
(declare-fun Enum0 ( Int) Int )
(declare-fun Enum1 ( Int) Int )
(declare-fun weight24 () Int )
(declare-fun weight141 () Int )
(declare-fun Enum2 ( Int) Int )
(declare-fun class29_Class29IntAttr0 ( Int) Int )
(declare-fun weight25 () Int )
(declare-fun weight142 () Int )
(declare-fun weight22 () Int )
(declare-fun weight23 () Int )
(declare-fun weight140 () Int )
(declare-fun class34_Class34IntAttr3 ( Int) Int )
(declare-fun weight28 () Int )
(declare-fun class34_Class34IntAttr4 ( Int) Int )
(declare-fun weight29 () Int )
(declare-fun class5_Class5BoolAttr1 ( Int) Bool )
(declare-fun weight26 () Int )
(declare-fun type_aaa636f8_74d2_49fa_9a03_3092028299b2_Class0 ( Int) Bool )
(declare-fun class34_Class34IntAttr2 ( Int) Int )
(declare-fun class5_Class5BoolAttr0 ( Int) Bool )
(declare-fun weight27 () Int )
(declare-fun weight149 () Int )
(declare-fun class5_Class5BoolAttr2 ( Int) Bool )
(declare-fun weight147 () Int )
(declare-fun weight148 () Int )
(declare-fun weight20 () Int )
(declare-fun weight145 () Int )
(declare-fun weight21 () Int )
(declare-fun weight146 () Int )
(declare-fun type_04083ce6_efcf_4891_920a_87ff564575c6_Class38 ( Int) Bool )
(declare-fun weight143 () Int )
(declare-fun weight144 () Int )
(declare-fun class30_Class30IntAttr2 ( Int) Int )
(declare-fun weight109 () Int )
(declare-fun class30_Class30IntAttr4 ( Int) Int )
(declare-fun weight107 () Int )
(declare-fun class30_Class30IntAttr3 ( Int) Int )
(declare-fun weight108 () Int )
(declare-fun class10_Class10BoolAttr1 ( Int) Bool )
(declare-fun class10_Class10BoolAttr0 ( Int) Bool )
(declare-fun class42_Class42IntAttr1 ( Int) Int )
(declare-fun class20_Class20BoolAttr0 ( Int) Bool )
(declare-fun weight35 () Int )
(declare-fun class20_Class20BoolAttr1 ( Int) Bool )
(declare-fun weight36 () Int )
(declare-fun weight33 () Int )
(declare-fun weight34 () Int )
(declare-fun weight39 () Int )
(declare-fun container_ ( Int) Int )
(declare-fun weight37 () Int )
(declare-fun weight38 () Int )
(declare-fun weight116 () Int )
(declare-fun weight117 () Int )
(declare-fun weight114 () Int )
(declare-fun weight115 () Int )
(declare-fun weight31 () Int )
(declare-fun weight112 () Int )
(declare-fun weight32 () Int )
(declare-fun weight113 () Int )
(declare-fun weight110 () Int )
(declare-fun weight30 () Int )
(declare-fun weight111 () Int )
(declare-fun class11_Class11BoolAttr0 ( Int) Bool )
(declare-fun class11_Class11BoolAttr1 ( Int) Bool )
(declare-fun weight118 () Int )
(declare-fun weight119 () Int )
(declare-fun type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 ( Int) Bool )
(declare-fun class40_Class40IntAttr2 ( Int) Int )
(declare-fun weight46 () Int )
(declare-fun weight47 () Int )
(declare-fun weight120 () Int )
(declare-fun weight44 () Int )
(declare-fun weight45 () Int )
(declare-fun class21_Class21BoolAttr1 ( Int) Bool )
(declare-fun class21_Class21BoolAttr0 ( Int) Bool )
(declare-fun weight48 () Int )
(declare-fun weight49 () Int )
(declare-fun type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 ( Int) Bool )
(declare-fun weight127 () Int )
(declare-fun weight128 () Int )
(declare-fun weight125 () Int )
(declare-fun weight126 () Int )
(declare-fun weight42 () Int )
(declare-fun weight123 () Int )
(declare-fun weight43 () Int )
(declare-fun weight124 () Int )
(declare-fun weight40 () Int )
(declare-fun weight121 () Int )
(declare-fun weight41 () Int )
(declare-fun weight122 () Int )
(declare-fun rel_be9851aa_7798_4a25_8dc0_564ec8a6e601_Class11_Class27 ( Int Int) Bool )
(declare-fun class1_Class1BoolAttr0 ( Int) Bool )
(declare-fun class1_Class1BoolAttr1 ( Int) Bool )
(declare-fun class2_Class2IntAttr4 ( Int) Int )
(declare-fun class2_Class2IntAttr3 ( Int) Int )
(declare-fun class22_Class22BoolAttr0 ( Int) Bool )
(declare-fun class22_Class22BoolAttr1 ( Int) Bool )
(declare-fun class1_Class1BoolAttr2 ( Int) Bool )
(declare-fun type_49a41773_3da4_488a_ba9e_e56206dbf871_Class25 ( Int) Bool )
(declare-fun class7_Class7BoolAttr2 ( Int) Bool )
(declare-fun rel_25914730_6674_4a20_b867_9465fdd3e6c6_Class20_Class1 ( Int Int) Bool )
(declare-fun class7_Class7BoolAttr0 ( Int) Bool )
(declare-fun class7_Class7BoolAttr1 ( Int) Bool )
(declare-fun type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 ( Int) Bool )
(declare-fun class6_Class6BoolAttr1 ( Int) Bool )
(declare-fun class6_Class6BoolAttr0 ( Int) Bool )
(declare-fun class5_Class5IntAttr3 ( Int) Int )
(declare-fun oclIncludes ( Int Int) Bool )
(declare-fun class5_Class5IntAttr4 ( Int) Int )
(declare-fun class6_Class6BoolAttr2 ( Int) Bool )
(declare-fun weight105 () Int )
(declare-fun type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( Int) Bool )
(declare-fun weight106 () Int )
(declare-fun weight103 () Int )
(declare-fun weight104 () Int )
(declare-fun weight101 () Int )
(declare-fun weight102 () Int )
(declare-fun weight100 () Int )
(declare-fun type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 ( Int) Bool )
(declare-fun class0_Class0BoolAttr1 ( Int) Bool )
(declare-fun class0_Class0BoolAttr0 ( Int) Bool )
(declare-fun class0_Class0BoolAttr2 ( Int) Bool )
(declare-fun class3_Class3BoolAttr2 ( Int) Bool )
(declare-fun type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 ( Int) Bool )
(declare-fun type_e653a43f_30c6_4975_a19a_3110948fba2e_Class2 ( Int) Bool )
(declare-fun class3_Class3BoolAttr1 ( Int) Bool )
(declare-fun ObjAt ( Int Int) Int )
(declare-fun class3_Class3BoolAttr0 ( Int) Bool )
(declare-fun class2_Class2BoolAttr1 ( Int) Bool )
(declare-fun class2_Class2BoolAttr0 ( Int) Bool )
(declare-fun class2_Class2BoolAttr2 ( Int) Bool )

;formula(s) generated
(assert (forall ((p Int)) (=> ( type_aaa636f8_74d2_49fa_9a03_3092028299b2_Class0 p )  (and (>= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_d5c0ab30_b984_49ad_aa40_f21ac942caec_Class1 p )  (and (>= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_a0227fc1_0bad_4057_9dbf_8203cdddd07d_Class10 p )  (and (>= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 p )  (and (>= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_f4aecd16_2657_4fcf_a03d_3baf334bec8d_Class12 p )  (and (>= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_6d9bfb78_1fba_4d71_a018_1bbc96d7358e_Class13 p )  (and (>= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_351a54b4_c9f6_4636_8930_793e7b099c9d_Class14 p )  (and (>= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 p )  (and (>= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_fef1a83b_fdbe_4c2b_a919_a04e8d5fa0ca_Class16 p )  (and (>= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_48fc8824_4306_4532_be6c_7e02632199a9_Class17 p )  (and (>= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_c8ea8c7d_3a5f_40ea_8d08_01aea6979063_Class18 p )  (and (>= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_079620c9_6fe6_4f84_8af3_4d911268a155_Class19 p )  (and (>= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_e653a43f_30c6_4975_a19a_3110948fba2e_Class2 p )  (and (>= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_02f6d14f_2953_485f_b6d8_a3d3dfd837e7_Class20 p )  (and (>= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_bcb980dc_d655_4705_9a79_ec702e13347a_Class21 p )  (and (>= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_2e8b670d_fc20_4ca4_a27d_8314050caa7e_Class22 p )  (and (>= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_2e7ffccc_0133_4689_bdd7_613ea248907a_Class3 p )  (and (>= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 p )  (and (>= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 p )  (and (>= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 p )  (and (>= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 p )  (and (>= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 p )  (and (>= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 p )  (and (>= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_04083ce6_efcf_4891_920a_87ff564575c6_Class38 p )  (and (>= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_04083ce6_efcf_4891_920a_87ff564575c6_Class38 p )  (and (>= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_5a4fb472_fbcd_48d1_b737_76a737c43953_Class39 p )  (and (>= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_5a4fb472_fbcd_48d1_b737_76a737c43953_Class39 p )  (and (>= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 p )  (and (>= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_9f235ff3_0148_4b15_8098_7952d9b857d0_Class40 p )  (and (>= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_9f235ff3_0148_4b15_8098_7952d9b857d0_Class40 p )  (and (>= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_999e2e48_7673_4750_802c_d149f09609af_Class41 p )  (and (>= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 p )  (and (>= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_e1a35778_a896_4f4f_8375_aa81f455f71e_Class43 p )  (and (>= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_f9486d5d_0fb9_4716_92d7_7abaf2f5be10_Class44 p )  (and (>= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_7fbb9086_5053_48a0_bea1_f02a52920c64_Class45 p )  (and (>= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  6)))))
(assert (forall ((p Int)) (=> ( type_74108e58_c44d_41b4_9ef1_29b96fd053cd_Class5 p )  (and (>= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_f7d0736b_6bc7_486d_a533_f9606dc474c2_Class6 p )  (and (>= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_6833d213_f5a4_412b_a439_8684521d0f32_Class7 p )  (and (>= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  13)))))
(assert (forall ((p Int)) (=> ( type_304bfd46_4510_4fc7_9f07_ee64c6139dd7_Class8 p )  (and (>= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_a07d6e94_fac1_4e80_ae42_890918efcc93_Class9 p )  (and (>= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  0) (<= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  6)))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_be9851aa_7798_4a25_8dc0_564ec8a6e601_Class11_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 x )  (and (and (and ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 y )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 y ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 y ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (>= ( Cardinality ( container_ x )  )  1))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_be9851aa_7798_4a25_8dc0_564ec8a6e601_Class11_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 x )  (and (and (and ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 y )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 y ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 y ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_be9851aa_7798_4a25_8dc0_564ec8a6e601_Class11_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 x )  (and (and (and ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 y )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 y ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 y ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  4))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  4))))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_be9851aa_7798_4a25_8dc0_564ec8a6e601_Class11_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 x )  (and (and (and ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 y )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 y ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 y ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  4))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  4))))))
(assert (and (=> (= aux0 0) (= weight0 4)) (=> (= aux0 1) (= weight0 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_7ef7d637_4af0_4730_9fa0_f211426140af_Class12_Class41 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_f4aecd16_2657_4fcf_a03d_3baf334bec8d_Class12 x )  ( type_999e2e48_7673_4750_802c_d149f09609af_Class41 y ) )) (>= ( Cardinality ( container_ x )  )  1))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_7ef7d637_4af0_4730_9fa0_f211426140af_Class12_Class41 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_f4aecd16_2657_4fcf_a03d_3baf334bec8d_Class12 x )  ( type_999e2e48_7673_4750_802c_d149f09609af_Class41 y ) )) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_7ef7d637_4af0_4730_9fa0_f211426140af_Class12_Class41 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_f4aecd16_2657_4fcf_a03d_3baf334bec8d_Class12 x )  ( type_999e2e48_7673_4750_802c_d149f09609af_Class41 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))))) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_7ef7d637_4af0_4730_9fa0_f211426140af_Class12_Class41 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_f4aecd16_2657_4fcf_a03d_3baf334bec8d_Class12 x )  ( type_999e2e48_7673_4750_802c_d149f09609af_Class41 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))))))
(assert (and (=> (= aux1 0) (= weight1 2)) (=> (= aux1 1) (= weight1 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_9e5cef00_1809_4ab5_b609_2dfee9da37ab_Class13_Class11 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_6d9bfb78_1fba_4d71_a018_1bbc96d7358e_Class13 x )  ( type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 y ) )) (>= ( Cardinality ( container_ x )  )  1))))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_9e5cef00_1809_4ab5_b609_2dfee9da37ab_Class13_Class11 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_6d9bfb78_1fba_4d71_a018_1bbc96d7358e_Class13 x )  ( type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2)) (and (= (* ( Cardinality ( container_ y )  )  2) (* ( Cardinality ( container_ x )  )  kfe14d574_16a8_43d2_a9b0_57971018d3cc)) (>= kfe14d574_16a8_43d2_a9b0_57971018d3cc 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  4))) (and (= (* ( Cardinality ( container_ y )  )  4) (* ( Cardinality ( container_ x )  )  k03004aa7_d48b_44ff_a8bf_088db36982bb)) (>= k03004aa7_d48b_44ff_a8bf_088db36982bb 0))))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_9e5cef00_1809_4ab5_b609_2dfee9da37ab_Class13_Class11 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_6d9bfb78_1fba_4d71_a018_1bbc96d7358e_Class13 x )  ( type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2)) (and (= (* ( Cardinality ( container_ y )  )  2) (* ( Cardinality ( container_ x )  )  kfe14d574_16a8_43d2_a9b0_57971018d3cc)) (>= kfe14d574_16a8_43d2_a9b0_57971018d3cc 0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  4))) (and (= (* ( Cardinality ( container_ y )  )  4) (* ( Cardinality ( container_ x )  )  k03004aa7_d48b_44ff_a8bf_088db36982bb)) (>= k03004aa7_d48b_44ff_a8bf_088db36982bb 0))))))
(assert (and (=> (= aux2 0) (= weight2 1)) (=> (= aux2 1) (= weight2 0))))
(assert (and (>= aux3 0) (<= aux3 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_33d48847_867e_4ef6_83a9_d0eb17db3b64_Class14_Class9 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and (and (and (and (and (and ( type_351a54b4_c9f6_4636_8930_793e7b099c9d_Class14 x )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 x ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 x ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 x ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 x ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 x ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) ( type_a07d6e94_fac1_4e80_ae42_890918efcc93_Class9 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))))) (and (= aux3 1) true)) (and (= aux3 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_33d48847_867e_4ef6_83a9_d0eb17db3b64_Class14_Class9 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and (and (and (and (and (and ( type_351a54b4_c9f6_4636_8930_793e7b099c9d_Class14 x )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 x ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 x ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 x ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 x ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 x ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) ( type_a07d6e94_fac1_4e80_ae42_890918efcc93_Class9 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  2))))))
(assert (and (=> (= aux3 0) (= weight3 12)) (=> (= aux3 1) (= weight3 0))))
(assert (and (>= aux4 0) (<= aux4 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_0f589dbe_5a0f_4b96_931d_47694b81f56d_Class17_Class20 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_48fc8824_4306_4532_be6c_7e02632199a9_Class17 x )  ( type_02f6d14f_2953_485f_b6d8_a3d3dfd837e7_Class20 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2))))) (and (= aux4 1) true)) (and (= aux4 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_0f589dbe_5a0f_4b96_931d_47694b81f56d_Class17_Class20 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_48fc8824_4306_4532_be6c_7e02632199a9_Class17 x )  ( type_02f6d14f_2953_485f_b6d8_a3d3dfd837e7_Class20 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2))))))
(assert (and (=> (= aux4 0) (= weight4 2)) (=> (= aux4 1) (= weight4 0))))
(assert (and (>= aux5 0) (<= aux5 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_dd7e6bdc_c79f_401d_b0f8_063a00c7bc01_Class18_Class10 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_c8ea8c7d_3a5f_40ea_8d08_01aea6979063_Class18 x )  (and (and ( type_a0227fc1_0bad_4057_9dbf_8203cdddd07d_Class10 y )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 y ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  4))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  4))))) (and (= aux5 1) true)) (and (= aux5 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_dd7e6bdc_c79f_401d_b0f8_063a00c7bc01_Class18_Class10 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_c8ea8c7d_3a5f_40ea_8d08_01aea6979063_Class18 x )  (and (and ( type_a0227fc1_0bad_4057_9dbf_8203cdddd07d_Class10 y )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 y ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  4))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  4))))))
(assert (and (=> (= aux5 0) (= weight5 3)) (=> (= aux5 1) (= weight5 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_48855ce5_0e2f_44fc_a573_b6186da30fdc_Class19_Class17 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and (and (and (and (and (and ( type_079620c9_6fe6_4f84_8af3_4d911268a155_Class19 x )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 x ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 x ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 x ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 x ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 x ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) ( type_48fc8824_4306_4532_be6c_7e02632199a9_Class17 y ) )) (>= ( Cardinality ( container_ x )  )  1))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_48855ce5_0e2f_44fc_a573_b6186da30fdc_Class19_Class17 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and (and (and (and (and (and ( type_079620c9_6fe6_4f84_8af3_4d911268a155_Class19 x )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 x ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 x ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 x ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 x ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 x ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) ( type_48fc8824_4306_4532_be6c_7e02632199a9_Class17 y ) )) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux6 0) (<= aux6 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_48855ce5_0e2f_44fc_a573_b6186da30fdc_Class19_Class17 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and (and (and (and (and (and ( type_079620c9_6fe6_4f84_8af3_4d911268a155_Class19 x )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 x ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 x ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 x ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 x ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 x ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) ( type_48fc8824_4306_4532_be6c_7e02632199a9_Class17 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1))))) (and (= aux6 1) true)) (and (= aux6 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_48855ce5_0e2f_44fc_a573_b6186da30fdc_Class19_Class17 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and (and (and (and (and (and ( type_079620c9_6fe6_4f84_8af3_4d911268a155_Class19 x )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 x ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 x ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 x ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 x ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 x ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) ( type_48fc8824_4306_4532_be6c_7e02632199a9_Class17 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1))))))
(assert (and (=> (= aux6 0) (= weight6 7)) (=> (= aux6 1) (= weight6 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_43936137_e153_4f56_b6bb_aef3c5d5f676_Class1_Class43 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and (and (and ( type_d5c0ab30_b984_49ad_aa40_f21ac942caec_Class1 x )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 x ) ) ( type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 x ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) ( type_e1a35778_a896_4f4f_8375_aa81f455f71e_Class43 y ) )) (>= ( Cardinality ( container_ x )  )  1))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_43936137_e153_4f56_b6bb_aef3c5d5f676_Class1_Class43 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and (and (and ( type_d5c0ab30_b984_49ad_aa40_f21ac942caec_Class1 x )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 x ) ) ( type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 x ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) ( type_e1a35778_a896_4f4f_8375_aa81f455f71e_Class43 y ) )) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux7 0) (<= aux7 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_43936137_e153_4f56_b6bb_aef3c5d5f676_Class1_Class43 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and (and (and ( type_d5c0ab30_b984_49ad_aa40_f21ac942caec_Class1 x )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 x ) ) ( type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 x ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) ( type_e1a35778_a896_4f4f_8375_aa81f455f71e_Class43 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))))) (and (= aux7 1) true)) (and (= aux7 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_43936137_e153_4f56_b6bb_aef3c5d5f676_Class1_Class43 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and (and (and ( type_d5c0ab30_b984_49ad_aa40_f21ac942caec_Class1 x )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 x ) ) ( type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 x ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) ( type_e1a35778_a896_4f4f_8375_aa81f455f71e_Class43 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))))))
(assert (and (=> (= aux7 0) (= weight7 5)) (=> (= aux7 1) (= weight7 0))))
(assert (and (>= aux8 0) (<= aux8 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_25914730_6674_4a20_b867_9465fdd3e6c6_Class20_Class1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_02f6d14f_2953_485f_b6d8_a3d3dfd837e7_Class20 x )  (and (and (and ( type_d5c0ab30_b984_49ad_aa40_f21ac942caec_Class1 y )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 y ) ) ( type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 y ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  3))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  3))))) (and (= aux8 1) true)) (and (= aux8 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_25914730_6674_4a20_b867_9465fdd3e6c6_Class20_Class1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_02f6d14f_2953_485f_b6d8_a3d3dfd837e7_Class20 x )  (and (and (and ( type_d5c0ab30_b984_49ad_aa40_f21ac942caec_Class1 y )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 y ) ) ( type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 y ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  3))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  3))))))
(assert (and (=> (= aux8 0) (= weight8 1)) (=> (= aux8 1) (= weight8 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_d71e56c7_b035_46bc_b4a8_ea20833e2039_Class2_Class42 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and (and (and (and ( type_e653a43f_30c6_4975_a19a_3110948fba2e_Class2 x )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 x ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 x ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 x ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) (and (and (and (and ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 y )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 y ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 y ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 y ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (>= ( Cardinality ( container_ x )  )  1))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_d71e56c7_b035_46bc_b4a8_ea20833e2039_Class2_Class42 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and (and (and (and ( type_e653a43f_30c6_4975_a19a_3110948fba2e_Class2 x )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 x ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 x ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 x ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) (and (and (and (and ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 y )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 y ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 y ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 y ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux9 0) (<= aux9 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_d71e56c7_b035_46bc_b4a8_ea20833e2039_Class2_Class42 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and (and (and (and ( type_e653a43f_30c6_4975_a19a_3110948fba2e_Class2 x )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 x ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 x ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 x ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) (and (and (and (and ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 y )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 y ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 y ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 y ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  2))))) (and (= aux9 1) true)) (and (= aux9 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_d71e56c7_b035_46bc_b4a8_ea20833e2039_Class2_Class42 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and (and (and (and ( type_e653a43f_30c6_4975_a19a_3110948fba2e_Class2 x )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 x ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 x ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 x ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) (and (and (and (and ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 y )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 y ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 y ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 y ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  3) (* ( Cardinality ( container_ y )  )  2))))))
(assert (and (=> (= aux9 0) (= weight9 1)) (=> (= aux9 1) (= weight9 0))))
(assert (and (>= aux10 0) (<= aux10 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_d39cc393_cbb0_4d24_8e67_2d4f0077434e_Class3_Class14 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_2e7ffccc_0133_4689_bdd7_613ea248907a_Class3 x )  (and (and (and (and (and (and ( type_351a54b4_c9f6_4636_8930_793e7b099c9d_Class14 y )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 y ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 y ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 y ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 y ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 y ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  4))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  4))))) (and (= aux10 1) true)) (and (= aux10 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_d39cc393_cbb0_4d24_8e67_2d4f0077434e_Class3_Class14 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_2e7ffccc_0133_4689_bdd7_613ea248907a_Class3 x )  (and (and (and (and (and (and ( type_351a54b4_c9f6_4636_8930_793e7b099c9d_Class14 y )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 y ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 y ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 y ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 y ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 y ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  4))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  4))))))
(assert (and (=> (= aux10 0) (= weight10 9)) (=> (= aux10 1) (= weight10 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_e2cbc87d_870a_41d7_ae95_b9afd6c8f710_Class4_Class25 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 x )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) ( type_49a41773_3da4_488a_ba9e_e56206dbf871_Class25 y ) )) (>= ( Cardinality ( container_ x )  )  1))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_e2cbc87d_870a_41d7_ae95_b9afd6c8f710_Class4_Class25 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 x )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) ( type_49a41773_3da4_488a_ba9e_e56206dbf871_Class25 y ) )) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux11 0) (<= aux11 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_e2cbc87d_870a_41d7_ae95_b9afd6c8f710_Class4_Class25 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 x )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) ( type_49a41773_3da4_488a_ba9e_e56206dbf871_Class25 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  3)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  3))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  4))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  4))))) (and (= aux11 1) true)) (and (= aux11 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_e2cbc87d_870a_41d7_ae95_b9afd6c8f710_Class4_Class25 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 x )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) ( type_49a41773_3da4_488a_ba9e_e56206dbf871_Class25 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  3)) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  3))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  4))) (= (* ( Cardinality ( container_ x )  )  4) (* ( Cardinality ( container_ y )  )  4))))))
(assert (and (=> (= aux11 0) (= weight11 12)) (=> (= aux11 1) (= weight11 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_fa8cb6ed_606b_45b9_a178_c8b7cc7a24c9_Class6_Class0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_f7d0736b_6bc7_486d_a533_f9606dc474c2_Class6 x )  (and ( type_aaa636f8_74d2_49fa_9a03_3092028299b2_Class0 y )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux12 0) (<= aux12 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_fa8cb6ed_606b_45b9_a178_c8b7cc7a24c9_Class6_Class0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_f7d0736b_6bc7_486d_a533_f9606dc474c2_Class6 x )  (and ( type_aaa636f8_74d2_49fa_9a03_3092028299b2_Class0 y )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))) (and (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  k9d454089_b74b_44bf_8738_139bf3366f46)) (>= k9d454089_b74b_44bf_8738_139bf3366f46 0))) (and (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  k020f5f54_49f2_4dae_96e5_b7a6e0ce57e4)) (>= k020f5f54_49f2_4dae_96e5_b7a6e0ce57e4 0))))) (and (= aux12 1) true)) (and (= aux12 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_fa8cb6ed_606b_45b9_a178_c8b7cc7a24c9_Class6_Class0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_f7d0736b_6bc7_486d_a533_f9606dc474c2_Class6 x )  (and ( type_aaa636f8_74d2_49fa_9a03_3092028299b2_Class0 y )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))) (and (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  k9d454089_b74b_44bf_8738_139bf3366f46)) (>= k9d454089_b74b_44bf_8738_139bf3366f46 0))) (and (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  k020f5f54_49f2_4dae_96e5_b7a6e0ce57e4)) (>= k020f5f54_49f2_4dae_96e5_b7a6e0ce57e4 0))))))
(assert (and (=> (= aux12 0) (= weight12 2)) (=> (= aux12 1) (= weight12 0))))
(assert (and (>= aux13 0) (<= aux13 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_95131325_389f_4190_b3f5_03cd26ef56d1_Class8_Class12 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and (and (and (and (and (and ( type_304bfd46_4510_4fc7_9f07_ee64c6139dd7_Class8 x )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 x ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 x ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 x ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 x ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 x ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) ( type_f4aecd16_2657_4fcf_a03d_3baf334bec8d_Class12 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  0)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  3))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  3))))) (and (= aux13 1) true)) (and (= aux13 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_95131325_389f_4190_b3f5_03cd26ef56d1_Class8_Class12 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and (and (and (and (and (and (and ( type_304bfd46_4510_4fc7_9f07_ee64c6139dd7_Class8 x )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 x ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 x ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 x ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 x ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 x ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 x ) ) ( type_f4aecd16_2657_4fcf_a03d_3baf334bec8d_Class12 y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  0)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  0))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  3))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  3))))))
(assert (and (=> (= aux13 0) (= weight13 1)) (=> (= aux13 1) (= weight13 0))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_5906c9fd_1c41_4dee_8fae_1599604b9633_Class9_Class4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_a07d6e94_fac1_4e80_ae42_890918efcc93_Class9 x )  (and ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 y )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (>= ( Cardinality ( container_ x )  )  1))))
(assert (exists ((x Int)(y Int)) (and (and ( rel_5906c9fd_1c41_4dee_8fae_1599604b9633_Class9_Class4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_a07d6e94_fac1_4e80_ae42_890918efcc93_Class9 x )  (and ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 y )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (>= ( Cardinality ( container_ y )  )  1))))
(assert (and (>= aux14 0) (<= aux14 1)))
(assert (or (or (forall ((x Int)(y Int)) (=> (and ( rel_5906c9fd_1c41_4dee_8fae_1599604b9633_Class9_Class4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_a07d6e94_fac1_4e80_ae42_890918efcc93_Class9 x )  (and ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 y )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  4))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  4))))) (and (= aux14 1) true)) (and (= aux14 0) false)))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_5906c9fd_1c41_4dee_8fae_1599604b9633_Class9_Class4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 x )   ( obj_515bd736_5855_4532_b744_c0c377e1f652 y )  )  (and ( type_a07d6e94_fac1_4e80_ae42_890918efcc93_Class9 x )  (and ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 y )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 y ) ))) (or (or (or (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  2)) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  2))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  4))) (= (* ( Cardinality ( container_ x )  )  2) (* ( Cardinality ( container_ y )  )  4))))))
(assert (and (=> (= aux14 0) (= weight14 5)) (=> (= aux14 1) (= weight14 0))))
(assert (and (>= aux15 0) (<= aux15 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_aaa636f8_74d2_49fa_9a03_3092028299b2_Class0 v )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (< ( class0_Class0IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  13))) (and (= aux15 1) true)) (and (= aux15 0) false)))
(assert (and (=> (= aux15 0) (= weight15 4)) (=> (= aux15 1) (= weight15 0))))
(assert (and (>= aux16 0) (<= aux16 1)))
(assert (or (or (forall ((c0_1 Int)(c0_2 Int)) (=> (and (and ( type_aaa636f8_74d2_49fa_9a03_3092028299b2_Class0 c0_1 )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c0_1 ) ) (and ( type_aaa636f8_74d2_49fa_9a03_3092028299b2_Class0 c0_2 )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c0_2 ) )) (>= ( class0_Class0IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c0_1 )  )  ( class0_Class0IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c0_2 )  ) ))) (and (= aux16 1) true)) (and (= aux16 0) false)))
(assert (and (=> (= aux16 0) (= weight16 8)) (=> (= aux16 1) (= weight16 0))))
(assert (and (>= aux17 0) (<= aux17 1)))
(assert (or (or (forall ((c_0 Int)) (=> (and ( type_aaa636f8_74d2_49fa_9a03_3092028299b2_Class0 c_0 )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c_0 ) ) (forall ((c_26 Int)) (=> (and (and ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c_26 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c_26 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c_26 ) ) (forall ((c_36 Int)) (=> (and ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c_36 )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c_36 ) ) (and (not (= ( obj_515bd736_5855_4532_b744_c0c377e1f652 c_26 )  ( obj_515bd736_5855_4532_b744_c0c377e1f652 c_36 ) ) ) (not (= ( obj_515bd736_5855_4532_b744_c0c377e1f652 c_0 )  ( obj_515bd736_5855_4532_b744_c0c377e1f652 c_26 ) ) )))))))) (and (= aux17 1) true)) (and (= aux17 0) false)))
(assert (and (=> (= aux17 0) (= weight17 13)) (=> (= aux17 1) (= weight17 0))))
(assert (and (>= aux18 0) (<= aux18 1)))
(assert (or (or (forall ((c0_1 Int)(c0_2 Int)) (=> (and (and (and ( type_a0227fc1_0bad_4057_9dbf_8203cdddd07d_Class10 c0_1 )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 c0_1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c0_1 ) ) (and (and ( type_a0227fc1_0bad_4057_9dbf_8203cdddd07d_Class10 c0_2 )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 c0_2 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c0_2 ) )) (> ( class10_Class10IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c0_1 )  )  ( class10_Class10IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c0_2 )  ) ))) (and (= aux18 1) true)) (and (= aux18 0) false)))
(assert (and (=> (= aux18 0) (= weight18 3)) (=> (= aux18 1) (= weight18 0))))
(assert (and (>= aux19 0) (<= aux19 1)))
(assert (or (or (or (forall ((v Int)) (=> (and (and ( type_a0227fc1_0bad_4057_9dbf_8203cdddd07d_Class10 v )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (or (< ( class10_Class10IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  13) (or (forall ((v Int)) (=> (and (and ( type_a0227fc1_0bad_4057_9dbf_8203cdddd07d_Class10 v )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (= ( class10_Class10IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  14))) (forall ((v Int)) (=> (and (and ( type_a0227fc1_0bad_4057_9dbf_8203cdddd07d_Class10 v )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) ( class10_Class10BoolAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  ) )))))) (forall ((v Int)) (=> (and (and ( type_a0227fc1_0bad_4057_9dbf_8203cdddd07d_Class10 v )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) ( class10_Class10BoolAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  ) ))) (and (= aux19 1) true)) (and (= aux19 0) false)))
(assert (and (=> (= aux19 0) (= weight19 3)) (=> (= aux19 1) (= weight19 0))))
(assert (and (>= aux20 0) (<= aux20 1)))
(assert (or (or (forall ((c1_2 Int)(c1_1 Int)) (=> (and ( type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 c1_1 )  ( type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 c1_2 ) ) (< ( class11_Class11IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1_1 )  )  ( class11_Class11IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1_2 )  ) ))) (and (= aux20 1) true)) (and (= aux20 0) false)))
(assert (and (=> (= aux20 0) (= weight20 2)) (=> (= aux20 1) (= weight20 0))))
(assert (and (>= aux21 0) (<= aux21 1)))
(assert (or (or (or (forall ((v Int)) (=> ( type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 v )  ( class11_Class11BoolAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  ) )) (forall ((c1_2 Int)(c1_1 Int)) (=> (and ( type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 c1_1 )  ( type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 c1_2 ) ) (and (not (= ( class11_Class11IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1_1 )  )  ( class11_Class11IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1_2 )  ) ) ) (and (forall ((v Int)) (=> ( type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 v )  ( class11_Class11BoolAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  ) )) (forall ((c1_2 Int)(c1_1 Int)) (=> (and ( type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 c1_1 )  ( type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 c1_2 ) ) (>= ( class11_Class11IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1_1 )  )  ( class11_Class11IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1_2 )  ) )))))))) (and (= aux21 1) true)) (and (= aux21 0) false)))
(assert (and (=> (= aux21 0) (= weight21 2)) (=> (= aux21 1) (= weight21 0))))
(assert (and (>= aux22 0) (<= aux22 1)))
(assert (or (or (forall ((c2_1 Int)(c2_2 Int)) (=> (and ( type_f4aecd16_2657_4fcf_a03d_3baf334bec8d_Class12 c2_1 )  ( type_f4aecd16_2657_4fcf_a03d_3baf334bec8d_Class12 c2_2 ) ) (>= ( class12_Class12IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c2_1 )  )  ( class12_Class12IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c2_2 )  ) ))) (and (= aux22 1) true)) (and (= aux22 0) false)))
(assert (and (=> (= aux22 0) (= weight22 1)) (=> (= aux22 1) (= weight22 0))))
(assert (and (>= aux23 0) (<= aux23 1)))
(assert (or (or (forall ((v Int)) (=> ( type_f4aecd16_2657_4fcf_a03d_3baf334bec8d_Class12 v )  (or (not ( class12_Class12BoolAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  ) (and (forall ((v Int)) (=> ( type_f4aecd16_2657_4fcf_a03d_3baf334bec8d_Class12 v )  (= ( class12_Class12IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  15))) (forall ((c2_1 Int)(c2_2 Int)) (=> (and ( type_f4aecd16_2657_4fcf_a03d_3baf334bec8d_Class12 c2_1 )  ( type_f4aecd16_2657_4fcf_a03d_3baf334bec8d_Class12 c2_2 ) ) (<= ( class12_Class12IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c2_1 )  )  ( class12_Class12IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c2_2 )  ) ))))))) (and (= aux23 1) true)) (and (= aux23 0) false)))
(assert (and (=> (= aux23 0) (= weight23 1)) (=> (= aux23 1) (= weight23 0))))
(assert (and (>= aux24 0) (<= aux24 1)))
(assert (or (or (forall ((c3_2 Int)(c3_1 Int)) (=> (and ( type_6d9bfb78_1fba_4d71_a018_1bbc96d7358e_Class13 c3_1 )  ( type_6d9bfb78_1fba_4d71_a018_1bbc96d7358e_Class13 c3_2 ) ) (< ( class13_Class13IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c3_1 )  )  ( class13_Class13IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c3_2 )  ) ))) (and (= aux24 1) true)) (and (= aux24 0) false)))
(assert (and (=> (= aux24 0) (= weight24 3)) (=> (= aux24 1) (= weight24 0))))
(assert (and (>= aux25 0) (<= aux25 1)))
(assert (or (or (or (forall ((v Int)) (=> ( type_6d9bfb78_1fba_4d71_a018_1bbc96d7358e_Class13 v )  (not (= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  0) ))) (forall ((c3_2 Int)(c3_1 Int)) (=> (and ( type_6d9bfb78_1fba_4d71_a018_1bbc96d7358e_Class13 c3_1 )  ( type_6d9bfb78_1fba_4d71_a018_1bbc96d7358e_Class13 c3_2 ) ) (> ( class13_Class13IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c3_1 )  )  ( class13_Class13IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c3_2 )  ) )))) (and (= aux25 1) true)) (and (= aux25 0) false)))
(assert (and (=> (= aux25 0) (= weight25 3)) (=> (= aux25 1) (= weight25 0))))
(assert (and (>= aux26 0) (<= aux26 1)))
(assert (or (or (forall ((c4_2 Int)(c4_1 Int)) (=> (and (and (and (and (and (and (and ( type_351a54b4_c9f6_4636_8930_793e7b099c9d_Class14 c4_1 )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 c4_1 ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c4_1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c4_1 ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 c4_1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c4_1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c4_1 ) ) (and (and (and (and (and (and ( type_351a54b4_c9f6_4636_8930_793e7b099c9d_Class14 c4_2 )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 c4_2 ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c4_2 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c4_2 ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 c4_2 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c4_2 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c4_2 ) )) (not (= ( class14_Class14IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c4_1 )  )  ( class14_Class14IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c4_2 )  ) ) ))) (and (= aux26 1) true)) (and (= aux26 0) false)))
(assert (and (=> (= aux26 0) (= weight26 5)) (=> (= aux26 1) (= weight26 0))))
(assert (and (>= aux27 0) (<= aux27 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_351a54b4_c9f6_4636_8930_793e7b099c9d_Class14 v )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 v ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (or (>= ( class14_Class14IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  19) (and (forall ((v Int)) (=> (and (and (and (and (and (and ( type_351a54b4_c9f6_4636_8930_793e7b099c9d_Class14 v )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 v ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (not (= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  8) ))) (forall ((v Int)) (=> (and (and (and (and (and (and ( type_351a54b4_c9f6_4636_8930_793e7b099c9d_Class14 v )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 v ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (not ( class14_Class14BoolAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  ))))))) (and (= aux27 1) true)) (and (= aux27 0) false)))
(assert (and (=> (= aux27 0) (= weight27 5)) (=> (= aux27 1) (= weight27 0))))
(assert (and (>= aux28 0) (<= aux28 1)))
(assert (or (or (forall ((c5_2 Int)(c5_1 Int)) (=> (and (and ( type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 c5_1 )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c5_1 ) ) (and ( type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 c5_2 )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c5_2 ) )) (> ( class15_Class15IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c5_1 )  )  ( class15_Class15IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c5_2 )  ) ))) (and (= aux28 1) true)) (and (= aux28 0) false)))
(assert (and (=> (= aux28 0) (= weight28 1)) (=> (= aux28 1) (= weight28 0))))
(assert (and (>= aux29 0) (<= aux29 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 v )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (or (< ( class15_Class15IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  6) (or (forall ((v Int)) (=> (and ( type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 v )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (not ( class15_Class15BoolAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  ))) (forall ((v Int)) (=> (and ( type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 v )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (>= ( class15_Class15IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  19))))))) (and (= aux29 1) true)) (and (= aux29 0) false)))
(assert (and (=> (= aux29 0) (= weight29 1)) (=> (= aux29 1) (= weight29 0))))
(assert (and (>= aux30 0) (<= aux30 1)))
(assert (or (or (forall ((c6_1 Int)(c6_2 Int)) (=> (and (and (and ( type_fef1a83b_fdbe_4c2b_a919_a04e8d5fa0ca_Class16 c6_1 )  ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 c6_1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c6_1 ) ) (and (and ( type_fef1a83b_fdbe_4c2b_a919_a04e8d5fa0ca_Class16 c6_2 )  ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 c6_2 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c6_2 ) )) (<= ( class16_Class16IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c6_1 )  )  ( class16_Class16IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c6_2 )  ) ))) (and (= aux30 1) true)) (and (= aux30 0) false)))
(assert (and (=> (= aux30 0) (= weight30 2)) (=> (= aux30 1) (= weight30 0))))
(assert (and (>= aux31 0) (<= aux31 1)))
(assert (or (or (forall ((v Int)) (=> (and (and ( type_fef1a83b_fdbe_4c2b_a919_a04e8d5fa0ca_Class16 v )  ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (or (not (= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  8) ) (or (forall ((v Int)) (=> (and (and ( type_fef1a83b_fdbe_4c2b_a919_a04e8d5fa0ca_Class16 v )  ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (< ( class16_Class16IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  12))) (forall ((v Int)) (=> (and (and ( type_fef1a83b_fdbe_4c2b_a919_a04e8d5fa0ca_Class16 v )  ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (not (= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  9) ))))))) (and (= aux31 1) true)) (and (= aux31 0) false)))
(assert (and (=> (= aux31 0) (= weight31 2)) (=> (= aux31 1) (= weight31 0))))
(assert (and (>= aux32 0) (<= aux32 1)))
(assert (or (or (forall ((v Int)) (=> ( type_48fc8824_4306_4532_be6c_7e02632199a9_Class17 v )  (not (= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  10) ))) (and (= aux32 1) true)) (and (= aux32 0) false)))
(assert (and (=> (= aux32 0) (= weight32 1)) (=> (= aux32 1) (= weight32 0))))
(assert (and (>= aux33 0) (<= aux33 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_48fc8824_4306_4532_be6c_7e02632199a9_Class17 c1 )  (<= ( class17_Class17IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  3))) (and (= aux33 1) true)) (and (= aux33 0) false)))
(assert (and (=> (= aux33 0) (= weight33 1)) (=> (= aux33 1) (= weight33 0))))
(assert (and (>= aux34 0) (<= aux34 1)))
(assert (or (or (forall ((v Int)) (=> ( type_c8ea8c7d_3a5f_40ea_8d08_01aea6979063_Class18 v )  (= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  4))) (and (= aux34 1) true)) (and (= aux34 0) false)))
(assert (and (=> (= aux34 0) (= weight34 6)) (=> (= aux34 1) (= weight34 0))))
(assert (and (>= aux35 0) (<= aux35 1)))
(assert (or (or (exists ((c1 Int)) (and ( type_c8ea8c7d_3a5f_40ea_8d08_01aea6979063_Class18 c1 )  (= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  4))) (and (= aux35 1) true)) (and (= aux35 0) false)))
(assert (and (=> (= aux35 0) (= weight35 6)) (=> (= aux35 1) (= weight35 0))))
(assert (and (>= aux36 0) (<= aux36 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_079620c9_6fe6_4f84_8af3_4d911268a155_Class19 v )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 v ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  13))) (and (= aux36 1) true)) (and (= aux36 0) false)))
(assert (and (=> (= aux36 0) (= weight36 4)) (=> (= aux36 1) (= weight36 0))))
(assert (and (>= aux37 0) (<= aux37 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and (and (and (and (and ( type_079620c9_6fe6_4f84_8af3_4d911268a155_Class19 c1 )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 c1 ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c1 ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 c1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (not (= ( class19_Class19IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  12) ))) (and (= aux37 1) true)) (and (= aux37 0) false)))
(assert (and (=> (= aux37 0) (= weight37 6)) (=> (= aux37 1) (= weight37 0))))
(assert (and (>= aux38 0) (<= aux38 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and ( type_d5c0ab30_b984_49ad_aa40_f21ac942caec_Class1 v )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 v ) ) ( type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (not (= ( class1_Class1IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  4) ))) (and (= aux38 1) true)) (and (= aux38 0) false)))
(assert (and (=> (= aux38 0) (= weight38 2)) (=> (= aux38 1) (= weight38 0))))
(assert (and (>= aux39 0) (<= aux39 1)))
(assert (or (or (forall ((c1_2 Int)(c1_1 Int)) (=> (and (and (and (and ( type_d5c0ab30_b984_49ad_aa40_f21ac942caec_Class1 c1_1 )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 c1_1 ) ) ( type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 c1_1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1_1 ) ) (and (and (and ( type_d5c0ab30_b984_49ad_aa40_f21ac942caec_Class1 c1_2 )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 c1_2 ) ) ( type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 c1_2 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1_2 ) )) (<= ( class1_Class1IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1_1 )  )  ( class1_Class1IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1_2 )  ) ))) (and (= aux39 1) true)) (and (= aux39 0) false)))
(assert (and (=> (= aux39 0) (= weight39 2)) (=> (= aux39 1) (= weight39 0))))
(assert (and (>= aux40 0) (<= aux40 1)))
(assert (or (or (forall ((v Int)) (=> ( type_02f6d14f_2953_485f_b6d8_a3d3dfd837e7_Class20 v )  (= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  3))) (and (= aux40 1) true)) (and (= aux40 0) false)))
(assert (and (=> (= aux40 0) (= weight40 1)) (=> (= aux40 1) (= weight40 0))))
(assert (and (>= aux41 0) (<= aux41 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_02f6d14f_2953_485f_b6d8_a3d3dfd837e7_Class20 c1 )  (= ( class20_Class20IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  19))) (and (= aux41 1) true)) (and (= aux41 0) false)))
(assert (and (=> (= aux41 0) (= weight41 1)) (=> (= aux41 1) (= weight41 0))))
(assert (and (>= aux42 0) (<= aux42 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_bcb980dc_d655_4705_9a79_ec702e13347a_Class21 v )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 v ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  1))) (and (= aux42 1) true)) (and (= aux42 0) false)))
(assert (and (=> (= aux42 0) (= weight42 1)) (=> (= aux42 1) (= weight42 0))))
(assert (and (>= aux43 0) (<= aux43 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and (and (and (and (and ( type_bcb980dc_d655_4705_9a79_ec702e13347a_Class21 c1 )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 c1 ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c1 ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 c1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (not (= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  0) ))) (and (= aux43 1) true)) (and (= aux43 0) false)))
(assert (and (=> (= aux43 0) (= weight43 1)) (=> (= aux43 1) (= weight43 0))))
(assert (and (>= aux44 0) (<= aux44 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_2e8b670d_fc20_4ca4_a27d_8314050caa7e_Class22 v )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_5a4fb472_fbcd_48d1_b737_76a737c43953_Class39 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 v ) ) (= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  2))) (and (= aux44 1) true)) (and (= aux44 0) false)))
(assert (and (=> (= aux44 0) (= weight44 1)) (=> (= aux44 1) (= weight44 0))))
(assert (and (>= aux45 0) (<= aux45 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and (and (and (and (and (and (and ( type_2e8b670d_fc20_4ca4_a27d_8314050caa7e_Class22 c1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c1 ) ) ( type_5a4fb472_fbcd_48d1_b737_76a737c43953_Class39 c1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 c1 ) ) (and (and (and (and (and (and ( type_2e8b670d_fc20_4ca4_a27d_8314050caa7e_Class22 c2 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c2 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c2 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c2 ) ) ( type_5a4fb472_fbcd_48d1_b737_76a737c43953_Class39 c2 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c2 ) ) ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 c2 ) )) (or ( class22_Class22BoolAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  ( class22_Class22BoolAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c2 )  ) ))) (and (= aux45 1) true)) (and (= aux45 0) false)))
(assert (and (=> (= aux45 0) (= weight45 1)) (=> (= aux45 1) (= weight45 0))))
(assert (and (>= aux46 0) (<= aux46 1)))
(assert (or (or (exists ((c1 Int)) (and (and (and (and (and ( type_c0c5f4ed_c616_47b5_8790_e0d1bcf8bc03_Class23 c1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (= ( class23_Class23IntAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  18))) (and (= aux46 1) true)) (and (= aux46 0) false)))
(assert (and (=> (= aux46 0) (= weight46 3)) (=> (= aux46 1) (= weight46 0))))
(assert (and (>= aux47 0) (<= aux47 1)))
(assert (or (or (forall ((c1 Int)) (=> (and ( type_9c38b3cf_660d_496f_9e96_329375e62d98_Class24 c1 )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (< ( class24_Class24IntAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  5))) (and (= aux47 1) true)) (and (= aux47 0) false)))
(assert (and (=> (= aux47 0) (= weight47 2)) (=> (= aux47 1) (= weight47 0))))
(assert (and (>= aux48 0) (<= aux48 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_49a41773_3da4_488a_ba9e_e56206dbf871_Class25 c1 )  (> ( class25_Class25IntAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  16))) (and (= aux48 1) true)) (and (= aux48 0) false)))
(assert (and (=> (= aux48 0) (= weight48 1)) (=> (= aux48 1) (= weight48 0))))
(assert (and (>= aux49 0) (<= aux49 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (> ( class26_Class26IntAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  7))) (and (= aux49 1) true)) (and (= aux49 0) false)))
(assert (and (=> (= aux49 0) (= weight49 9)) (=> (= aux49 1) (= weight49 0))))
(assert (and (>= aux50 0) (<= aux50 1)))
(assert (or (or (forall ((c_26 Int)) (=> (and (and ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c_26 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c_26 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c_26 ) ) (forall ((c_36 Int)) (=> (and ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c_36 )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c_36 ) ) (forall ((c_0 Int)) (=> (and ( type_aaa636f8_74d2_49fa_9a03_3092028299b2_Class0 c_0 )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c_0 ) ) (and (not (= ( obj_515bd736_5855_4532_b744_c0c377e1f652 c_36 )  ( obj_515bd736_5855_4532_b744_c0c377e1f652 c_0 ) ) ) (not (= ( obj_515bd736_5855_4532_b744_c0c377e1f652 c_26 )  ( obj_515bd736_5855_4532_b744_c0c377e1f652 c_36 ) ) )))))))) (and (= aux50 1) true)) (and (= aux50 0) false)))
(assert (and (=> (= aux50 0) (= weight50 9)) (=> (= aux50 1) (= weight50 0))))
(assert (and (>= aux51 0) (<= aux51 1)))
(assert (or (or (exists ((c1 Int)) (and (and (and (and ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (= ( class27_Class27IntAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  1))) (and (= aux51 1) true)) (and (= aux51 0) false)))
(assert (and (=> (= aux51 0) (= weight51 1)) (=> (= aux51 1) (= weight51 0))))
(assert (and (>= aux52 0) (<= aux52 1)))
(assert (or (or (exists ((c1 Int)) (and ( type_dd2a5e45_d728_42d4_977e_eefc5f2ccfca_Class28 c1 )  (< ( class28_Class28IntAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  8))) (and (= aux52 1) true)) (and (= aux52 0) false)))
(assert (and (=> (= aux52 0) (= weight52 12)) (=> (= aux52 1) (= weight52 0))))
(assert (and (>= aux53 0) (<= aux53 1)))
(assert (or (or (exists ((c1 Int)) (and (and (and (and (and (and (and ( type_ae2b4f6d_4057_4358_a0ae_952c5d73594c_Class29 c1 )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 c1 ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c1 ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 c1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (< ( class29_Class29IntAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  15))) (and (= aux53 1) true)) (and (= aux53 0) false)))
(assert (and (=> (= aux53 0) (= weight53 10)) (=> (= aux53 1) (= weight53 0))))
(assert (and (>= aux54 0) (<= aux54 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and ( type_e653a43f_30c6_4975_a19a_3110948fba2e_Class2 v )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (< ( class2_Class2IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  5))) (and (= aux54 1) true)) (and (= aux54 0) false)))
(assert (and (=> (= aux54 0) (= weight54 3)) (=> (= aux54 1) (= weight54 0))))
(assert (and (>= aux55 0) (<= aux55 1)))
(assert (or (or (forall ((c2_1 Int)(c2_2 Int)) (=> (and (and (and (and (and ( type_e653a43f_30c6_4975_a19a_3110948fba2e_Class2 c2_1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c2_1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c2_1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c2_1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c2_1 ) ) (and (and (and (and ( type_e653a43f_30c6_4975_a19a_3110948fba2e_Class2 c2_2 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c2_2 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c2_2 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c2_2 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c2_2 ) )) (not (= ( class2_Class2IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c2_1 )  )  ( class2_Class2IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c2_2 )  ) ) ))) (and (= aux55 1) true)) (and (= aux55 0) false)))
(assert (and (=> (= aux55 0) (= weight55 3)) (=> (= aux55 1) (= weight55 0))))
(assert (and (>= aux56 0) (<= aux56 1)))
(assert (or (or (forall ((c0_1 Int)(c0_2 Int)) (=> (and (and (and ( type_2fc36f77_0903_45ee_8bfc_44603a1240e9_Class30 c0_1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c0_1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c0_1 ) ) (and (and ( type_2fc36f77_0903_45ee_8bfc_44603a1240e9_Class30 c0_2 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c0_2 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c0_2 ) )) (not (= ( class30_Class30IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c0_1 )  )  ( class30_Class30IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c0_2 )  ) ) ))) (and (= aux56 1) true)) (and (= aux56 0) false)))
(assert (and (=> (= aux56 0) (= weight56 1)) (=> (= aux56 1) (= weight56 0))))
(assert (and (>= aux57 0) (<= aux57 1)))
(assert (or (or (or (forall ((v Int)) (=> (and (and ( type_2fc36f77_0903_45ee_8bfc_44603a1240e9_Class30 v )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (or ( class30_Class30BoolAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  (and (forall ((c0_1 Int)(c0_2 Int)) (=> (and (and (and ( type_2fc36f77_0903_45ee_8bfc_44603a1240e9_Class30 c0_1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c0_1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c0_1 ) ) (and (and ( type_2fc36f77_0903_45ee_8bfc_44603a1240e9_Class30 c0_2 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c0_2 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c0_2 ) )) (= ( class30_Class30IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c0_1 )  )  ( class30_Class30IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c0_2 )  ) ))) (forall ((v Int)) (=> (and (and ( type_2fc36f77_0903_45ee_8bfc_44603a1240e9_Class30 v )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (>= ( class30_Class30IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  12))))))) (forall ((v Int)) (=> (and (and ( type_2fc36f77_0903_45ee_8bfc_44603a1240e9_Class30 v )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) ( class30_Class30BoolAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  ) ))) (and (= aux57 1) true)) (and (= aux57 0) false)))
(assert (and (=> (= aux57 0) (= weight57 1)) (=> (= aux57 1) (= weight57 0))))
(assert (and (>= aux58 0) (<= aux58 1)))
(assert (or (or (forall ((c1 Int)(c2 Int)) (=> (and (and (and ( type_2fc36f77_0903_45ee_8bfc_44603a1240e9_Class30 c1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (and (and ( type_2fc36f77_0903_45ee_8bfc_44603a1240e9_Class30 c2 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c2 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c2 ) )) (forall ((v Int)) (=> (and (and ( type_2fc36f77_0903_45ee_8bfc_44603a1240e9_Class30 v )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (> ( class30_Class30IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  ( class30_Class30IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  ) ))))) (and (= aux58 1) true)) (and (= aux58 0) false)))
(assert (and (=> (= aux58 0) (= weight58 1)) (=> (= aux58 1) (= weight58 0))))
(assert (and (>= aux59 0) (<= aux59 1)))
(assert (or (or (forall ((c1_2 Int)(c1_1 Int)) (=> (and ( type_dedbce57_a9dc_4974_90bf_1e9ad4eeb47b_Class31 c1_1 )  ( type_dedbce57_a9dc_4974_90bf_1e9ad4eeb47b_Class31 c1_2 ) ) (<= ( class31_Class31IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1_1 )  )  ( class31_Class31IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1_2 )  ) ))) (and (= aux59 1) true)) (and (= aux59 0) false)))
(assert (and (=> (= aux59 0) (= weight59 8)) (=> (= aux59 1) (= weight59 0))))
(assert (and (>= aux60 0) (<= aux60 1)))
(assert (or (or (or (forall ((v Int)) (=> ( type_dedbce57_a9dc_4974_90bf_1e9ad4eeb47b_Class31 v )  (< ( class31_Class31IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  18))) (forall ((v Int)) (=> ( type_dedbce57_a9dc_4974_90bf_1e9ad4eeb47b_Class31 v )  (<= ( class31_Class31IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  1)))) (and (= aux60 1) true)) (and (= aux60 0) false)))
(assert (and (=> (= aux60 0) (= weight60 9)) (=> (= aux60 1) (= weight60 0))))
(assert (and (>= aux61 0) (<= aux61 1)))
(assert (or (or (exists ((c1 Int)(c2 Int)) (and (and ( type_dedbce57_a9dc_4974_90bf_1e9ad4eeb47b_Class31 c1 )  ( type_dedbce57_a9dc_4974_90bf_1e9ad4eeb47b_Class31 c2 ) ) (and ( class31_Class31BoolAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  ( class31_Class31BoolAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c2 )  ) ))) (and (= aux61 1) true)) (and (= aux61 0) false)))
(assert (and (=> (= aux61 0) (= weight61 8)) (=> (= aux61 1) (= weight61 0))))
(assert (and (>= aux62 0) (<= aux62 1)))
(assert (or (or (forall ((c2_1 Int)(c2_2 Int)) (=> (and ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c2_1 )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c2_2 ) ) (> ( class32_Class32IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c2_1 )  )  ( class32_Class32IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c2_2 )  ) ))) (and (= aux62 1) true)) (and (= aux62 0) false)))
(assert (and (=> (= aux62 0) (= weight62 2)) (=> (= aux62 1) (= weight62 0))))
(assert (and (>= aux63 0) (<= aux63 1)))
(assert (or (or (forall ((v Int)) (=> ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v )  (or ( class32_Class32BoolAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  (or (forall ((v Int)) (=> ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v )  ( class32_Class32BoolAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  ) )) (forall ((c2_1 Int)(c2_2 Int)) (=> (and ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c2_1 )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c2_2 ) ) (< ( class32_Class32IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c2_1 )  )  ( class32_Class32IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c2_2 )  ) ))))))) (and (= aux63 1) true)) (and (= aux63 0) false)))
(assert (and (=> (= aux63 0) (= weight63 2)) (=> (= aux63 1) (= weight63 0))))
(assert (and (>= aux64 0) (<= aux64 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 )  (> ( class32_Class32IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  4))) (and (= aux64 1) true)) (and (= aux64 0) false)))
(assert (and (=> (= aux64 0) (= weight64 2)) (=> (= aux64 1) (= weight64 0))))
(assert (and (>= aux65 0) (<= aux65 1)))
(assert (or (or (forall ((c3_2 Int)(c3_1 Int)) (=> (and ( type_1c2d69d3_02b8_49b8_bf10_a72663e5b4b1_Class33 c3_1 )  ( type_1c2d69d3_02b8_49b8_bf10_a72663e5b4b1_Class33 c3_2 ) ) (not (= ( class33_Class33IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c3_1 )  )  ( class33_Class33IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c3_2 )  ) ) ))) (and (= aux65 1) true)) (and (= aux65 0) false)))
(assert (and (=> (= aux65 0) (= weight65 3)) (=> (= aux65 1) (= weight65 0))))
(assert (and (>= aux66 0) (<= aux66 1)))
(assert (or (or (or (and (forall ((c3_2 Int)(c3_1 Int)) (=> (and ( type_1c2d69d3_02b8_49b8_bf10_a72663e5b4b1_Class33 c3_1 )  ( type_1c2d69d3_02b8_49b8_bf10_a72663e5b4b1_Class33 c3_2 ) ) (> ( class33_Class33IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c3_1 )  )  ( class33_Class33IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c3_2 )  ) ))) (forall ((v Int)) (=> ( type_1c2d69d3_02b8_49b8_bf10_a72663e5b4b1_Class33 v )  ( class33_Class33BoolAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  ) ))) (and (forall ((v Int)) (=> ( type_1c2d69d3_02b8_49b8_bf10_a72663e5b4b1_Class33 v )  ( class33_Class33BoolAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  ) )) (forall ((v Int)) (=> ( type_1c2d69d3_02b8_49b8_bf10_a72663e5b4b1_Class33 v )  (>= ( class33_Class33IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  13))))) (and (= aux66 1) true)) (and (= aux66 0) false)))
(assert (and (=> (= aux66 0) (= weight66 3)) (=> (= aux66 1) (= weight66 0))))
(assert (and (>= aux67 0) (<= aux67 1)))
(assert (or (or (exists ((c1 Int)) (and ( type_1c2d69d3_02b8_49b8_bf10_a72663e5b4b1_Class33 c1 )  (<= ( class33_Class33IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  19))) (and (= aux67 1) true)) (and (= aux67 0) false)))
(assert (and (=> (= aux67 0) (= weight67 3)) (=> (= aux67 1) (= weight67 0))))
(assert (and (>= aux68 0) (<= aux68 1)))
(assert (or (or (forall ((c4_2 Int)(c4_1 Int)) (=> (and (and (and (and (and (and ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 c4_1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c4_1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c4_1 ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 c4_1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c4_1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c4_1 ) ) (and (and (and (and (and ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 c4_2 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c4_2 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c4_2 ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 c4_2 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c4_2 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c4_2 ) )) (= ( class34_Class34IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c4_1 )  )  ( class34_Class34IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c4_2 )  ) ))) (and (= aux68 1) true)) (and (= aux68 0) false)))
(assert (and (=> (= aux68 0) (= weight68 1)) (=> (= aux68 1) (= weight68 0))))
(assert (and (>= aux69 0) (<= aux69 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 v )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (or (not (= ( class34_Class34IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  17) ) (and (forall ((v Int)) (=> (and (and (and (and (and ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 v )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) ( class34_Class34BoolAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  ) )) (forall ((v Int)) (=> (and (and (and (and (and ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 v )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) ( class34_Class34BoolAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  ) )))))) (and (= aux69 1) true)) (and (= aux69 0) false)))
(assert (and (=> (= aux69 0) (= weight69 1)) (=> (= aux69 1) (= weight69 0))))
(assert (and (>= aux70 0) (<= aux70 1)))
(assert (or (or (forall ((c1 Int)(c2 Int)) (=> (and (and (and (and (and (and ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 c1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c1 ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 c1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (and (and (and (and (and ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 c2 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c2 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c2 ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 c2 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c2 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c2 ) )) (forall ((v Int)) (=> (and (and (and (and (and ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 v )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (< ( class34_Class34IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  ( class34_Class34IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  ) ))))) (and (= aux70 1) true)) (and (= aux70 0) false)))
(assert (and (=> (= aux70 0) (= weight70 1)) (=> (= aux70 1) (= weight70 0))))
(assert (and (>= aux71 0) (<= aux71 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 v )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (not (= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  1) ))) (and (= aux71 1) true)) (and (= aux71 0) false)))
(assert (and (=> (= aux71 0) (= weight71 4)) (=> (= aux71 1) (= weight71 0))))
(assert (and (>= aux72 0) (<= aux72 1)))
(assert (or (or (forall ((c1 Int)) (=> (and ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 c1 )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (< ( class35_Class35IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  14))) (and (= aux72 1) true)) (and (= aux72 0) false)))
(assert (and (=> (= aux72 0) (= weight72 6)) (=> (= aux72 1) (= weight72 0))))
(assert (and (>= aux73 0) (<= aux73 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  1))) (and (= aux73 1) true)) (and (= aux73 0) false)))
(assert (and (=> (= aux73 0) (= weight73 2)) (=> (= aux73 1) (= weight73 0))))
(assert (and (>= aux74 0) (<= aux74 1)))
(assert (or (or (forall ((c1 Int)) (=> (and ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (> ( class36_Class36IntAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  2))) (and (= aux74 1) true)) (and (= aux74 0) false)))
(assert (and (=> (= aux74 0) (= weight74 2)) (=> (= aux74 1) (= weight74 0))))
(assert (and (>= aux75 0) (<= aux75 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 v )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (not (= ( Enum2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  2) ))) (and (= aux75 1) true)) (and (= aux75 0) false)))
(assert (and (=> (= aux75 0) (= weight75 4)) (=> (= aux75 1) (= weight75 0))))
(assert (and (>= aux76 0) (<= aux76 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and (and (and ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 c1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (not (= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  3) ))) (and (= aux76 1) true)) (and (= aux76 0) false)))
(assert (and (=> (= aux76 0) (= weight76 6)) (=> (= aux76 1) (= weight76 0))))
(assert (and (>= aux77 0) (<= aux77 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_04083ce6_efcf_4891_920a_87ff564575c6_Class38 v )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 v ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  2))) (and (= aux77 1) true)) (and (= aux77 0) false)))
(assert (and (=> (= aux77 0) (= weight77 3)) (=> (= aux77 1) (= weight77 0))))
(assert (and (>= aux78 0) (<= aux78 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and (and (and (and (and ( type_04083ce6_efcf_4891_920a_87ff564575c6_Class38 c1 )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 c1 ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c1 ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 c1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  2))) (and (= aux78 1) true)) (and (= aux78 0) false)))
(assert (and (=> (= aux78 0) (= weight78 3)) (=> (= aux78 1) (= weight78 0))))
(assert (and (>= aux79 0) (<= aux79 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and ( type_5a4fb472_fbcd_48d1_b737_76a737c43953_Class39 v )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 v ) ) (= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  5))) (and (= aux79 1) true)) (and (= aux79 0) false)))
(assert (and (=> (= aux79 0) (= weight79 4)) (=> (= aux79 1) (= weight79 0))))
(assert (and (>= aux80 0) (<= aux80 1)))
(assert (or (or (forall ((c1 Int)(c2 Int)) (=> (and (and (and (and (and (and ( type_5a4fb472_fbcd_48d1_b737_76a737c43953_Class39 c1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 c1 ) ) (and (and (and (and (and ( type_5a4fb472_fbcd_48d1_b737_76a737c43953_Class39 c2 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c2 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c2 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c2 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c2 ) ) ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 c2 ) )) (or ( class39_Class39BoolAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  ( class39_Class39BoolAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c2 )  ) ))) (and (= aux80 1) true)) (and (= aux80 0) false)))
(assert (and (=> (= aux80 0) (= weight80 4)) (=> (= aux80 1) (= weight80 0))))
(assert (and (>= aux81 0) (<= aux81 1)))
(assert (or (or (forall ((v Int)) (=> ( type_2e7ffccc_0133_4689_bdd7_613ea248907a_Class3 v )  (<= ( class3_Class3IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  19))) (and (= aux81 1) true)) (and (= aux81 0) false)))
(assert (and (=> (= aux81 0) (= weight81 4)) (=> (= aux81 1) (= weight81 0))))
(assert (and (>= aux82 0) (<= aux82 1)))
(assert (or (or (forall ((c3_2 Int)(c3_1 Int)) (=> (and ( type_2e7ffccc_0133_4689_bdd7_613ea248907a_Class3 c3_1 )  ( type_2e7ffccc_0133_4689_bdd7_613ea248907a_Class3 c3_2 ) ) (>= ( class3_Class3IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c3_1 )  )  ( class3_Class3IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c3_2 )  ) ))) (and (= aux82 1) true)) (and (= aux82 0) false)))
(assert (and (=> (= aux82 0) (= weight82 4)) (=> (= aux82 1) (= weight82 0))))
(assert (and (>= aux83 0) (<= aux83 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and ( type_9f235ff3_0148_4b15_8098_7952d9b857d0_Class40 v )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_aaa636f8_74d2_49fa_9a03_3092028299b2_Class0 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (not (= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  11) ))) (and (= aux83 1) true)) (and (= aux83 0) false)))
(assert (and (=> (= aux83 0) (= weight83 7)) (=> (= aux83 1) (= weight83 0))))
(assert (and (>= aux84 0) (<= aux84 1)))
(assert (or (or (exists ((c1 Int)) (and (and (and (and (and (and ( type_9f235ff3_0148_4b15_8098_7952d9b857d0_Class40 c1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c1 ) ) ( type_aaa636f8_74d2_49fa_9a03_3092028299b2_Class0 c1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (not (= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  9) ))) (and (= aux84 1) true)) (and (= aux84 0) false)))
(assert (and (=> (= aux84 0) (= weight84 7)) (=> (= aux84 1) (= weight84 0))))
(assert (and (>= aux85 0) (<= aux85 1)))
(assert (or (or (forall ((v Int)) (=> ( type_999e2e48_7673_4750_802c_d149f09609af_Class41 v )  (= ( class41_Class41IntAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  14))) (and (= aux85 1) true)) (and (= aux85 0) false)))
(assert (and (=> (= aux85 0) (= weight85 3)) (=> (= aux85 1) (= weight85 0))))
(assert (and (>= aux86 0) (<= aux86 1)))
(assert (or (or (exists ((c1 Int)) (and ( type_999e2e48_7673_4750_802c_d149f09609af_Class41 c1 )  (not (= ( Enum0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  3) ))) (and (= aux86 1) true)) (and (= aux86 0) false)))
(assert (and (=> (= aux86 0) (= weight86 3)) (=> (= aux86 1) (= weight86 0))))
(assert (and (>= aux87 0) (<= aux87 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 v )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (not (= ( class42_Class42IntAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  10) ))) (and (= aux87 1) true)) (and (= aux87 0) false)))
(assert (and (=> (= aux87 0) (= weight87 1)) (=> (= aux87 1) (= weight87 0))))
(assert (and (>= aux88 0) (<= aux88 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 v )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (not ( class42_Class42BoolAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  ))) (and (= aux88 1) true)) (and (= aux88 0) false)))
(assert (and (=> (= aux88 0) (= weight88 1)) (=> (= aux88 1) (= weight88 0))))
(assert (and (>= aux89 0) (<= aux89 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and (and (and ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 c1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (> ( class42_Class42IntAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  19))) (and (= aux89 1) true)) (and (= aux89 0) false)))
(assert (and (=> (= aux89 0) (= weight89 1)) (=> (= aux89 1) (= weight89 0))))
(assert (and (>= aux90 0) (<= aux90 1)))
(assert (or (or (forall ((v Int)) (=> ( type_e1a35778_a896_4f4f_8375_aa81f455f71e_Class43 v )  (< ( class43_Class43IntAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  12))) (and (= aux90 1) true)) (and (= aux90 0) false)))
(assert (and (=> (= aux90 0) (= weight90 3)) (=> (= aux90 1) (= weight90 0))))
(assert (and (>= aux91 0) (<= aux91 1)))
(assert (or (or (exists ((c1 Int)) (and ( type_e1a35778_a896_4f4f_8375_aa81f455f71e_Class43 c1 )  (>= ( class43_Class43IntAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  11))) (and (= aux91 1) true)) (and (= aux91 0) false)))
(assert (and (=> (= aux91 0) (= weight91 3)) (=> (= aux91 1) (= weight91 0))))
(assert (and (>= aux92 0) (<= aux92 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_f9486d5d_0fb9_4716_92d7_7abaf2f5be10_Class44 v )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (> ( class44_Class44IntAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  11))) (and (= aux92 1) true)) (and (= aux92 0) false)))
(assert (and (=> (= aux92 0) (= weight92 1)) (=> (= aux92 1) (= weight92 0))))
(assert (and (>= aux93 0) (<= aux93 1)))
(assert (or (or (forall ((c1 Int)) (=> (and ( type_f9486d5d_0fb9_4716_92d7_7abaf2f5be10_Class44 c1 )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (not (= ( class44_Class44IntAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  14) ))) (and (= aux93 1) true)) (and (= aux93 0) false)))
(assert (and (=> (= aux93 0) (= weight93 1)) (=> (= aux93 1) (= weight93 0))))
(assert (and (>= aux94 0) (<= aux94 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_7fbb9086_5053_48a0_bea1_f02a52920c64_Class45 v )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (>= ( class45_Class45IntAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  18))) (and (= aux94 1) true)) (and (= aux94 0) false)))
(assert (and (=> (= aux94 0) (= weight94 2)) (=> (= aux94 1) (= weight94 0))))
(assert (and (>= aux95 0) (<= aux95 1)))
(assert (or (or (exists ((c1 Int)) (and (and ( type_7fbb9086_5053_48a0_bea1_f02a52920c64_Class45 c1 )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) ( class45_Class45BoolAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  ) )) (and (= aux95 1) true)) (and (= aux95 0) false)))
(assert (and (=> (= aux95 0) (= weight95 2)) (=> (= aux95 1) (= weight95 0))))
(assert (and (>= aux96 0) (<= aux96 1)))
(assert (or (or (forall ((v Int)) (=> (and ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 v )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) (> ( class4_Class4IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  2))) (and (= aux96 1) true)) (and (= aux96 0) false)))
(assert (and (=> (= aux96 0) (= weight96 2)) (=> (= aux96 1) (= weight96 0))))
(assert (and (>= aux97 0) (<= aux97 1)))
(assert (or (or (forall ((c4_2 Int)(c4_1 Int)) (=> (and (and ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 c4_1 )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c4_1 ) ) (and ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 c4_2 )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c4_2 ) )) (not (= ( class4_Class4IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c4_1 )  )  ( class4_Class4IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c4_2 )  ) ) ))) (and (= aux97 1) true)) (and (= aux97 0) false)))
(assert (and (=> (= aux97 0) (= weight97 2)) (=> (= aux97 1) (= weight97 0))))
(assert (and (>= aux98 0) (<= aux98 1)))
(assert (or (or (forall ((c5_2 Int)(c5_1 Int)) (=> (and (and (and (and (and (and (and ( type_74108e58_c44d_41b4_9ef1_29b96fd053cd_Class5 c5_1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c5_1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c5_1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c5_1 ) ) ( type_5a4fb472_fbcd_48d1_b737_76a737c43953_Class39 c5_1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c5_1 ) ) ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 c5_1 ) ) (and (and (and (and (and (and ( type_74108e58_c44d_41b4_9ef1_29b96fd053cd_Class5 c5_2 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c5_2 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c5_2 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c5_2 ) ) ( type_5a4fb472_fbcd_48d1_b737_76a737c43953_Class39 c5_2 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c5_2 ) ) ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 c5_2 ) )) (<= ( class5_Class5IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c5_1 )  )  ( class5_Class5IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c5_2 )  ) ))) (and (= aux98 1) true)) (and (= aux98 0) false)))
(assert (and (=> (= aux98 0) (= weight98 5)) (=> (= aux98 1) (= weight98 0))))
(assert (and (>= aux99 0) (<= aux99 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_74108e58_c44d_41b4_9ef1_29b96fd053cd_Class5 v )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_5a4fb472_fbcd_48d1_b737_76a737c43953_Class39 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 v ) ) ( class5_Class5BoolAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  ) )) (and (= aux99 1) true)) (and (= aux99 0) false)))
(assert (and (=> (= aux99 0) (= weight99 5)) (=> (= aux99 1) (= weight99 0))))
(assert (and (>= aux100 0) (<= aux100 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and (and (and (and (and ( type_74108e58_c44d_41b4_9ef1_29b96fd053cd_Class5 c1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c1 ) ) ( type_5a4fb472_fbcd_48d1_b737_76a737c43953_Class39 c1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 c1 ) ) (> ( class5_Class5IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  6))) (and (= aux100 1) true)) (and (= aux100 0) false)))
(assert (and (=> (= aux100 0) (= weight100 5)) (=> (= aux100 1) (= weight100 0))))
(assert (and (>= aux101 0) (<= aux101 1)))
(assert (or (or (forall ((c6_1 Int)(c6_2 Int)) (=> (and ( type_f7d0736b_6bc7_486d_a533_f9606dc474c2_Class6 c6_1 )  ( type_f7d0736b_6bc7_486d_a533_f9606dc474c2_Class6 c6_2 ) ) (<= ( class6_Class6IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c6_1 )  )  ( class6_Class6IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c6_2 )  ) ))) (and (= aux101 1) true)) (and (= aux101 0) false)))
(assert (and (=> (= aux101 0) (= weight101 6)) (=> (= aux101 1) (= weight101 0))))
(assert (and (>= aux102 0) (<= aux102 1)))
(assert (or (or (and (forall ((v Int)) (=> ( type_f7d0736b_6bc7_486d_a533_f9606dc474c2_Class6 v )  ( class6_Class6BoolAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  ) )) (forall ((v Int)) (=> ( type_f7d0736b_6bc7_486d_a533_f9606dc474c2_Class6 v )  ( class6_Class6BoolAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  ) ))) (and (= aux102 1) true)) (and (= aux102 0) false)))
(assert (and (=> (= aux102 0) (= weight102 6)) (=> (= aux102 1) (= weight102 0))))
(assert (and (>= aux103 0) (<= aux103 1)))
(assert (or (or (forall ((c1 Int)(c2 Int)) (=> (and ( type_f7d0736b_6bc7_486d_a533_f9606dc474c2_Class6 c1 )  ( type_f7d0736b_6bc7_486d_a533_f9606dc474c2_Class6 c2 ) ) (and ( class6_Class6BoolAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  ( class6_Class6BoolAttr2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c2 )  ) ))) (and (= aux103 1) true)) (and (= aux103 0) false)))
(assert (and (=> (= aux103 0) (= weight103 6)) (=> (= aux103 1) (= weight103 0))))
(assert (and (>= aux104 0) (<= aux104 1)))
(assert (or (or (forall ((c7_2 Int)(c7_1 Int)) (=> (and (and (and (and (and ( type_6833d213_f5a4_412b_a439_8684521d0f32_Class7 c7_1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c7_1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c7_1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c7_1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c7_1 ) ) (and (and (and (and ( type_6833d213_f5a4_412b_a439_8684521d0f32_Class7 c7_2 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c7_2 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c7_2 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c7_2 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c7_2 ) )) (not (= ( class7_Class7IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c7_1 )  )  ( class7_Class7IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c7_2 )  ) ) ))) (and (= aux104 1) true)) (and (= aux104 0) false)))
(assert (and (=> (= aux104 0) (= weight104 1)) (=> (= aux104 1) (= weight104 0))))
(assert (and (>= aux105 0) (<= aux105 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and ( type_6833d213_f5a4_412b_a439_8684521d0f32_Class7 v )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) ( class7_Class7BoolAttr1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  ) )) (and (= aux105 1) true)) (and (= aux105 0) false)))
(assert (and (=> (= aux105 0) (= weight105 1)) (=> (= aux105 1) (= weight105 0))))
(assert (and (>= aux106 0) (<= aux106 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and (and (and ( type_6833d213_f5a4_412b_a439_8684521d0f32_Class7 c1 )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (= ( Enum1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  9))) (and (= aux106 1) true)) (and (= aux106 0) false)))
(assert (and (=> (= aux106 0) (= weight106 1)) (=> (= aux106 1) (= weight106 0))))
(assert (and (>= aux107 0) (<= aux107 1)))
(assert (or (or (forall ((c8_2 Int)(c8_1 Int)) (=> (and (and (and (and (and (and (and ( type_304bfd46_4510_4fc7_9f07_ee64c6139dd7_Class8 c8_1 )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 c8_1 ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c8_1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c8_1 ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 c8_1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c8_1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c8_1 ) ) (and (and (and (and (and (and ( type_304bfd46_4510_4fc7_9f07_ee64c6139dd7_Class8 c8_2 )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 c8_2 ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c8_2 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c8_2 ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 c8_2 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c8_2 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c8_2 ) )) (< ( class8_Class8IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c8_1 )  )  ( class8_Class8IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c8_2 )  ) ))) (and (= aux107 1) true)) (and (= aux107 0) false)))
(assert (and (=> (= aux107 0) (= weight107 8)) (=> (= aux107 1) (= weight107 0))))
(assert (and (>= aux108 0) (<= aux108 1)))
(assert (or (or (forall ((v Int)) (=> (and (and (and (and (and (and ( type_304bfd46_4510_4fc7_9f07_ee64c6139dd7_Class8 v )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 v ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 v ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 v ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 v ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 v ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 v ) ) ( class8_Class8BoolAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  ) )) (and (= aux108 1) true)) (and (= aux108 0) false)))
(assert (and (=> (= aux108 0) (= weight108 8)) (=> (= aux108 1) (= weight108 0))))
(assert (and (>= aux109 0) (<= aux109 1)))
(assert (or (or (forall ((c1 Int)) (=> (and (and (and (and (and (and ( type_304bfd46_4510_4fc7_9f07_ee64c6139dd7_Class8 c1 )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 c1 ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 c1 ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 c1 ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 c1 ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 c1 ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 c1 ) ) (>= ( class8_Class8IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  )  13))) (and (= aux109 1) true)) (and (= aux109 0) false)))
(assert (and (=> (= aux109 0) (= weight109 8)) (=> (= aux109 1) (= weight109 0))))
(assert (and (>= aux110 0) (<= aux110 1)))
(assert (or (or (forall ((c9_2 Int)(c9_1 Int)) (=> (and ( type_a07d6e94_fac1_4e80_ae42_890918efcc93_Class9 c9_1 )  ( type_a07d6e94_fac1_4e80_ae42_890918efcc93_Class9 c9_2 ) ) (= ( class9_Class9IntAttr4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c9_1 )  )  ( class9_Class9IntAttr3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c9_2 )  ) ))) (and (= aux110 1) true)) (and (= aux110 0) false)))
(assert (and (=> (= aux110 0) (= weight110 2)) (=> (= aux110 1) (= weight110 0))))
(assert (and (>= aux111 0) (<= aux111 1)))
(assert (or (or (forall ((v Int)) (=> ( type_a07d6e94_fac1_4e80_ae42_890918efcc93_Class9 v )  (not ( class9_Class9BoolAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 v )  )  ))) (and (= aux111 1) true)) (and (= aux111 0) false)))
(assert (and (=> (= aux111 0) (= weight111 2)) (=> (= aux111 1) (= weight111 0))))
(assert (and (>= aux112 0) (<= aux112 1)))
(assert (or (or (forall ((c1 Int)) (=> ( type_a07d6e94_fac1_4e80_ae42_890918efcc93_Class9 c1 )  ( class9_Class9BoolAttr0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 c1 )  ) )) (and (= aux112 1) true)) (and (= aux112 0) false)))
(assert (and (=> (= aux112 0) (= weight112 2)) (=> (= aux112 1) (= weight112 0))))
(assert (and (>= aux113 0) (<= aux113 1)))
(assert (and (>= aux114 0) (<= aux114 1)))
(assert (and (>= aux115 0) (<= aux115 1)))
(assert (and (>= aux116 0) (<= aux116 1)))
(assert (and (>= aux117 0) (<= aux117 1)))
(assert (and (>= aux118 0) (<= aux118 1)))
(assert (and (>= aux119 0) (<= aux119 1)))
(assert (and (>= aux120 0) (<= aux120 1)))
(assert (and (>= aux121 0) (<= aux121 1)))
(assert (and (>= aux122 0) (<= aux122 1)))
(assert (and (>= aux123 0) (<= aux123 1)))
(assert (and (>= aux124 0) (<= aux124 1)))
(assert (and (>= aux125 0) (<= aux125 1)))
(assert (and (>= aux126 0) (<= aux126 1)))
(assert (and (>= aux127 0) (<= aux127 1)))
(assert (and (>= aux128 0) (<= aux128 1)))
(assert (and (>= aux129 0) (<= aux129 1)))
(assert (and (>= aux130 0) (<= aux130 1)))
(assert (and (>= aux131 0) (<= aux131 1)))
(assert (and (>= aux132 0) (<= aux132 1)))
(assert (and (>= aux133 0) (<= aux133 1)))
(assert (and (>= aux134 0) (<= aux134 1)))
(assert (and (>= aux135 0) (<= aux135 1)))
(assert (and (>= aux136 0) (<= aux136 1)))
(assert (and (>= aux137 0) (<= aux137 1)))
(assert (and (>= aux138 0) (<= aux138 1)))
(assert (and (>= aux139 0) (<= aux139 1)))
(assert (and (>= aux140 0) (<= aux140 1)))
(assert (and (>= aux141 0) (<= aux141 1)))
(assert (and (>= aux142 0) (<= aux142 1)))
(assert (and (>= aux143 0) (<= aux143 1)))
(assert (and (>= aux144 0) (<= aux144 1)))
(assert (and (>= aux145 0) (<= aux145 1)))
(assert (and (>= aux146 0) (<= aux146 1)))
(assert (and (>= aux147 0) (<= aux147 1)))
(assert (and (>= aux148 0) (<= aux148 1)))
(assert (and (>= aux149 0) (<= aux149 1)))
(assert (and (>= aux150 0) (<= aux150 1)))
(assert (and (>= aux151 0) (<= aux151 1)))
(assert (and (>= aux152 0) (<= aux152 1)))
(assert (and (>= aux153 0) (<= aux153 1)))
(assert (and (>= aux154 0) (<= aux154 1)))
(assert (and (>= aux155 0) (<= aux155 1)))
(assert (and (>= aux156 0) (<= aux156 1)))
(assert (and (>= aux157 0) (<= aux157 1)))
(assert (and (>= aux158 0) (<= aux158 1)))
(assert (or (or (exists ((p Int)) (and ( type_aaa636f8_74d2_49fa_9a03_3092028299b2_Class0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux113 1) true)) (and (= aux113 0) false)))
(assert (and (=> (= aux113 0) (= weight113 2)) (=> (= aux113 1) (= weight113 0))))
(assert (or (or (exists ((p Int)) (and (and (and ( type_d5c0ab30_b984_49ad_aa40_f21ac942caec_Class1 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux114 1) true)) (and (= aux114 0) false)))
(assert (and (=> (= aux114 0) (= weight114 21)) (=> (= aux114 1) (= weight114 0))))
(assert (or (or (exists ((p Int)) (and (and ( type_a0227fc1_0bad_4057_9dbf_8203cdddd07d_Class10 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux115 1) true)) (and (= aux115 0) false)))
(assert (and (=> (= aux115 0) (= weight115 6)) (=> (= aux115 1) (= weight115 0))))
(assert (or (or (exists ((p Int)) ( type_209b42cc_e4a1_47e0_b4bf_55f0c74120b5_Class11 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) (and (= aux116 1) true)) (and (= aux116 0) false)))
(assert (and (=> (= aux116 0) (= weight116 8)) (=> (= aux116 1) (= weight116 0))))
(assert (or (or (exists ((p Int)) ( type_f4aecd16_2657_4fcf_a03d_3baf334bec8d_Class12 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) (and (= aux117 1) true)) (and (= aux117 0) false)))
(assert (and (=> (= aux117 0) (= weight117 4)) (=> (= aux117 1) (= weight117 0))))
(assert (or (or (exists ((p Int)) ( type_6d9bfb78_1fba_4d71_a018_1bbc96d7358e_Class13 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) (and (= aux118 1) true)) (and (= aux118 0) false)))
(assert (and (=> (= aux118 0) (= weight118 5)) (=> (= aux118 1) (= weight118 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and (and ( type_351a54b4_c9f6_4636_8930_793e7b099c9d_Class14 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux119 1) true)) (and (= aux119 0) false)))
(assert (and (=> (= aux119 0) (= weight119 7)) (=> (= aux119 1) (= weight119 0))))
(assert (or (or (exists ((p Int)) (and ( type_9fb85a5b_6d2a_4764_a583_9ced289281f7_Class15 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux120 1) true)) (and (= aux120 0) false)))
(assert (and (=> (= aux120 0) (= weight120 2)) (=> (= aux120 1) (= weight120 0))))
(assert (or (or (exists ((p Int)) (and (and ( type_fef1a83b_fdbe_4c2b_a919_a04e8d5fa0ca_Class16 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux121 1) true)) (and (= aux121 0) false)))
(assert (and (=> (= aux121 0) (= weight121 1)) (=> (= aux121 1) (= weight121 0))))
(assert (or (or (exists ((p Int)) ( type_48fc8824_4306_4532_be6c_7e02632199a9_Class17 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) (and (= aux122 1) true)) (and (= aux122 0) false)))
(assert (and (=> (= aux122 0) (= weight122 4)) (=> (= aux122 1) (= weight122 0))))
(assert (or (or (exists ((p Int)) ( type_c8ea8c7d_3a5f_40ea_8d08_01aea6979063_Class18 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) (and (= aux123 1) true)) (and (= aux123 0) false)))
(assert (and (=> (= aux123 0) (= weight123 4)) (=> (= aux123 1) (= weight123 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and (and ( type_079620c9_6fe6_4f84_8af3_4d911268a155_Class19 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux124 1) true)) (and (= aux124 0) false)))
(assert (and (=> (= aux124 0) (= weight124 2)) (=> (= aux124 1) (= weight124 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and ( type_e653a43f_30c6_4975_a19a_3110948fba2e_Class2 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux125 1) true)) (and (= aux125 0) false)))
(assert (and (=> (= aux125 0) (= weight125 3)) (=> (= aux125 1) (= weight125 0))))
(assert (or (or (exists ((p Int)) ( type_02f6d14f_2953_485f_b6d8_a3d3dfd837e7_Class20 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) (and (= aux126 1) true)) (and (= aux126 0) false)))
(assert (and (=> (= aux126 0) (= weight126 3)) (=> (= aux126 1) (= weight126 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and (and ( type_bcb980dc_d655_4705_9a79_ec702e13347a_Class21 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux127 1) true)) (and (= aux127 0) false)))
(assert (and (=> (= aux127 0) (= weight127 4)) (=> (= aux127 1) (= weight127 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and (and ( type_2e8b670d_fc20_4ca4_a27d_8314050caa7e_Class22 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_5a4fb472_fbcd_48d1_b737_76a737c43953_Class39 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux128 1) true)) (and (= aux128 0) false)))
(assert (and (=> (= aux128 0) (= weight128 4)) (=> (= aux128 1) (= weight128 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and ( type_c0c5f4ed_c616_47b5_8790_e0d1bcf8bc03_Class23 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux129 1) true)) (and (= aux129 0) false)))
(assert (and (=> (= aux129 0) (= weight129 2)) (=> (= aux129 1) (= weight129 0))))
(assert (or (or (exists ((p Int)) (and ( type_9c38b3cf_660d_496f_9e96_329375e62d98_Class24 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux130 1) true)) (and (= aux130 0) false)))
(assert (and (=> (= aux130 0) (= weight130 1)) (=> (= aux130 1) (= weight130 0))))
(assert (or (or (exists ((p Int)) ( type_49a41773_3da4_488a_ba9e_e56206dbf871_Class25 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) (and (= aux131 1) true)) (and (= aux131 0) false)))
(assert (and (=> (= aux131 0) (= weight131 1)) (=> (= aux131 1) (= weight131 0))))
(assert (or (or (exists ((p Int)) (and (and ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux132 1) true)) (and (= aux132 0) false)))
(assert (and (=> (= aux132 0) (= weight132 1)) (=> (= aux132 1) (= weight132 0))))
(assert (or (or (exists ((p Int)) (and (and (and ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux133 1) true)) (and (= aux133 0) false)))
(assert (and (=> (= aux133 0) (= weight133 2)) (=> (= aux133 1) (= weight133 0))))
(assert (or (or (exists ((p Int)) ( type_dd2a5e45_d728_42d4_977e_eefc5f2ccfca_Class28 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) (and (= aux134 1) true)) (and (= aux134 0) false)))
(assert (and (=> (= aux134 0) (= weight134 2)) (=> (= aux134 1) (= weight134 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and (and ( type_ae2b4f6d_4057_4358_a0ae_952c5d73594c_Class29 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux135 1) true)) (and (= aux135 0) false)))
(assert (and (=> (= aux135 0) (= weight135 4)) (=> (= aux135 1) (= weight135 0))))
(assert (or (or (exists ((p Int)) ( type_2e7ffccc_0133_4689_bdd7_613ea248907a_Class3 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) (and (= aux136 1) true)) (and (= aux136 0) false)))
(assert (and (=> (= aux136 0) (= weight136 2)) (=> (= aux136 1) (= weight136 0))))
(assert (or (or (exists ((p Int)) (and (and ( type_2fc36f77_0903_45ee_8bfc_44603a1240e9_Class30 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux137 1) true)) (and (= aux137 0) false)))
(assert (and (=> (= aux137 0) (= weight137 6)) (=> (= aux137 1) (= weight137 0))))
(assert (or (or (exists ((p Int)) ( type_dedbce57_a9dc_4974_90bf_1e9ad4eeb47b_Class31 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) (and (= aux138 1) true)) (and (= aux138 0) false)))
(assert (and (=> (= aux138 0) (= weight138 5)) (=> (= aux138 1) (= weight138 0))))
(assert (or (or (exists ((p Int)) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) (and (= aux139 1) true)) (and (= aux139 0) false)))
(assert (and (=> (= aux139 0) (= weight139 2)) (=> (= aux139 1) (= weight139 0))))
(assert (or (or (exists ((p Int)) ( type_1c2d69d3_02b8_49b8_bf10_a72663e5b4b1_Class33 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) (and (= aux140 1) true)) (and (= aux140 0) false)))
(assert (and (=> (= aux140 0) (= weight140 3)) (=> (= aux140 1) (= weight140 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux141 1) true)) (and (= aux141 0) false)))
(assert (and (=> (= aux141 0) (= weight141 22)) (=> (= aux141 1) (= weight141 0))))
(assert (or (or (exists ((p Int)) (and ( type_6061051a_cb8e_4d64_bd88_d0669bc232ca_Class35 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux142 1) true)) (and (= aux142 0) false)))
(assert (and (=> (= aux142 0) (= weight142 4)) (=> (= aux142 1) (= weight142 0))))
(assert (or (or (exists ((p Int)) (and ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux143 1) true)) (and (= aux143 0) false)))
(assert (and (=> (= aux143 0) (= weight143 5)) (=> (= aux143 1) (= weight143 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux144 1) true)) (and (= aux144 0) false)))
(assert (and (=> (= aux144 0) (= weight144 5)) (=> (= aux144 1) (= weight144 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and (and ( type_04083ce6_efcf_4891_920a_87ff564575c6_Class38 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux145 1) true)) (and (= aux145 0) false)))
(assert (and (=> (= aux145 0) (= weight145 6)) (=> (= aux145 1) (= weight145 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and ( type_5a4fb472_fbcd_48d1_b737_76a737c43953_Class39 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux146 1) true)) (and (= aux146 0) false)))
(assert (and (=> (= aux146 0) (= weight146 3)) (=> (= aux146 1) (= weight146 0))))
(assert (or (or (exists ((p Int)) (and ( type_486303bc_93f9_4716_9f7b_33e1fdd47c78_Class4 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux147 1) true)) (and (= aux147 0) false)))
(assert (and (=> (= aux147 0) (= weight147 11)) (=> (= aux147 1) (= weight147 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and ( type_9f235ff3_0148_4b15_8098_7952d9b857d0_Class40 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_aaa636f8_74d2_49fa_9a03_3092028299b2_Class0 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux148 1) true)) (and (= aux148 0) false)))
(assert (and (=> (= aux148 0) (= weight148 23)) (=> (= aux148 1) (= weight148 0))))
(assert (or (or (exists ((p Int)) ( type_999e2e48_7673_4750_802c_d149f09609af_Class41 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) (and (= aux149 1) true)) (and (= aux149 0) false)))
(assert (and (=> (= aux149 0) (= weight149 1)) (=> (= aux149 1) (= weight149 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux150 1) true)) (and (= aux150 0) false)))
(assert (and (=> (= aux150 0) (= weight150 1)) (=> (= aux150 1) (= weight150 0))))
(assert (or (or (exists ((p Int)) ( type_e1a35778_a896_4f4f_8375_aa81f455f71e_Class43 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) (and (= aux151 1) true)) (and (= aux151 0) false)))
(assert (and (=> (= aux151 0) (= weight151 2)) (=> (= aux151 1) (= weight151 0))))
(assert (or (or (exists ((p Int)) (and ( type_f9486d5d_0fb9_4716_92d7_7abaf2f5be10_Class44 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux152 1) true)) (and (= aux152 0) false)))
(assert (and (=> (= aux152 0) (= weight152 3)) (=> (= aux152 1) (= weight152 0))))
(assert (or (or (exists ((p Int)) (and ( type_7fbb9086_5053_48a0_bea1_f02a52920c64_Class45 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux153 1) true)) (and (= aux153 0) false)))
(assert (and (=> (= aux153 0) (= weight153 4)) (=> (= aux153 1) (= weight153 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and (and ( type_74108e58_c44d_41b4_9ef1_29b96fd053cd_Class5 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_5a4fb472_fbcd_48d1_b737_76a737c43953_Class39 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a69c0132_be2c_4bee_866e_263ed08c5276_Class42 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux154 1) true)) (and (= aux154 0) false)))
(assert (and (=> (= aux154 0) (= weight154 1)) (=> (= aux154 1) (= weight154 0))))
(assert (or (or (exists ((p Int)) ( type_f7d0736b_6bc7_486d_a533_f9606dc474c2_Class6 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) (and (= aux155 1) true)) (and (= aux155 0) false)))
(assert (and (=> (= aux155 0) (= weight155 3)) (=> (= aux155 1) (= weight155 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and ( type_6833d213_f5a4_412b_a439_8684521d0f32_Class7 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux156 1) true)) (and (= aux156 0) false)))
(assert (and (=> (= aux156 0) (= weight156 7)) (=> (= aux156 1) (= weight156 0))))
(assert (or (or (exists ((p Int)) (and (and (and (and (and (and ( type_304bfd46_4510_4fc7_9f07_ee64c6139dd7_Class8 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  )  ( type_10441a0d_4ceb_4b9a_8d54_db39b94874cf_Class34 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_eadee8f0_735e_4569_9304_97bb56a37a78_Class36 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_a3dc0893_00e0_4fe5_9570_ee008e51ba15_Class27 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_8272afcb_a75a_4301_a9a6_371a38f658f1_Class37 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_b3f28673_a422_4c17_b7c4_086a3d96c043_Class26 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) ( type_9aa86178_5b9f_42e3_9996_a2372d68b919_Class32 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) )) (and (= aux157 1) true)) (and (= aux157 0) false)))
(assert (and (=> (= aux157 0) (= weight157 3)) (=> (= aux157 1) (= weight157 0))))
(assert (or (or (exists ((p Int)) ( type_a07d6e94_fac1_4e80_ae42_890918efcc93_Class9 ( obj_515bd736_5855_4532_b744_c0c377e1f652 p )  ) ) (and (= aux158 1) true)) (and (= aux158 0) false)))
(assert (and (=> (= aux158 0) (= weight158 5)) (=> (= aux158 1) (= weight158 0))))
(assert (= (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ (+ weight0 weight1) weight2) weight3) weight4) weight5) weight6) weight7) weight8) weight9) weight10) weight11) weight12) weight13) weight14) weight15) weight16) weight17) weight18) weight19) weight20) weight21) weight22) weight23) weight24) weight25) weight26) weight27) weight28) weight29) weight30) weight31) weight32) weight33) weight34) weight35) weight36) weight37) weight38) weight39) weight40) weight41) weight42) weight43) weight44) weight45) weight46) weight47) weight48) weight49) weight50) weight51) weight52) weight53) weight54) weight55) weight56) weight57) weight58) weight59) weight60) weight61) weight62) weight63) weight64) weight65) weight66) weight67) weight68) weight69) weight70) weight71) weight72) weight73) weight74) weight75) weight76) weight77) weight78) weight79) weight80) weight81) weight82) weight83) weight84) weight85) weight86) weight87) weight88) weight89) weight90) weight91) weight92) weight93) weight94) weight95) weight96) weight97) weight98) weight99) weight100) weight101) weight102) weight103) weight104) weight105) weight106) weight107) weight108) weight109) weight110) weight111) weight112) weight113) weight114) weight115) weight116) weight117) weight118) weight119) weight120) weight121) weight122) weight123) weight124) weight125) weight126) weight127) weight128) weight129) weight130) weight131) weight132) weight133) weight134) weight135) weight136) weight137) weight138) weight139) weight140) weight141) weight142) weight143) weight144) weight145) weight146) weight147) weight148) weight149) weight150) weight151) weight152) weight153) weight154) weight155) weight156) weight157) weight158) 605))
(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 4) (= weight1 2)) (= weight2 1)) (= weight3 12)) (= weight4 2)) (= weight5 3)) (= weight6 7)) (= weight7 5)) (= weight8 1)) (= weight9 1)) (= weight10 9)) (= weight11 12)) (= weight12 2)) (= weight13 1)) (= weight14 5)) (= weight15 4)) (= weight16 8)) (= weight17 0)) (= weight18 3)) (= weight19 3)) (= weight20 2)) (= weight21 2)) (= weight22 1)) (= weight23 1)) (= weight24 3)) (= weight25 3)) (= weight26 5)) (= weight27 5)) (= weight28 1)) (= weight29 1)) (= weight30 2)) (= weight31 2)) (= weight32 1)) (= weight33 1)) (= weight34 6)) (= weight35 6)) (= weight36 4)) (= weight37 6)) (= weight38 2)) (= weight39 2)) (= weight40 1)) (= weight41 1)) (= weight42 1)) (= weight43 1)) (= weight44 1)) (= weight45 1)) (= weight46 3)) (= weight47 2)) (= weight48 1)) (= weight49 9)) (= weight50 0)) (= weight51 1)) (= weight52 12)) (= weight53 10)) (= weight54 3)) (= weight55 3)) (= weight56 1)) (= weight57 1)) (= weight58 1)) (= weight59 8)) (= weight60 9)) (= weight61 8)) (= weight62 2)) (= weight63 2)) (= weight64 2)) (= weight65 3)) (= weight66 3)) (= weight67 3)) (= weight68 1)) (= weight69 1)) (= weight70 0)) (= weight71 4)) (= weight72 6)) (= weight73 2)) (= weight74 2)) (= weight75 4)) (= weight76 6)) (= weight77 3)) (= weight78 3)) (= weight79 4)) (= weight80 4)) (= weight81 4)) (= weight82 4)) (= weight83 7)) (= weight84 7)) (= weight85 3)) (= weight86 3)) (= weight87 1)) (= weight88 1)) (= weight89 1)) (= weight90 3)) (= weight91 3)) (= weight92 1)) (= weight93 1)) (= weight94 2)) (= weight95 2)) (= weight96 2)) (= weight97 2)) (= weight98 5)) (= weight99 5)) (= weight100 5)) (= weight101 6)) (= weight102 6)) (= weight103 6)) (= weight104 1)) (= weight105 1)) (= weight106 1)) (= weight107 8)) (= weight108 8)) (= weight109 8)) (= weight110 2)) (= weight111 2)) (= weight112 0)) (= weight113 2)) (= weight114 21)) (= weight115 6)) (= weight116 8)) (= weight117 4)) (= weight118 5)) (= weight119 7)) (= weight120 2)) (= weight121 1)) (= weight122 4)) (= weight123 4)) (= weight124 2)) (= weight125 3)) (= weight126 3)) (= weight127 4)) (= weight128 4)) (= weight129 2)) (= weight130 1)) (= weight131 1)) (= weight132 1)) (= weight133 2)) (= weight134 2)) (= weight135 4)) (= weight136 2)) (= weight137 6)) (= weight138 5)) (= weight139 2)) (= weight140 3)) (= weight141 22)) (= weight142 4)) (= weight143 5)) (= weight144 5)) (= weight145 6)) (= weight146 3)) (= weight147 11)) (= weight148 23)) (= weight149 1)) (= weight150 1)) (= weight151 2)) (= weight152 3)) (= weight153 4)) (= weight154 1)) (= weight155 3)) (= weight156 7)) (= weight157 3)) (= weight158 5)) ))
(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 4) (= weight1 2)) (= weight2 1)) (= weight3 12)) (= weight4 2)) (= weight5 3)) (= weight6 7)) (= weight7 5)) (= weight8 1)) (= weight9 1)) (= weight10 9)) (= weight11 12)) (= weight12 2)) (= weight13 1)) (= weight14 5)) (= weight15 4)) (= weight16 8)) (= weight17 0)) (= weight18 3)) (= weight19 3)) (= weight20 2)) (= weight21 2)) (= weight22 1)) (= weight23 1)) (= weight24 3)) (= weight25 3)) (= weight26 5)) (= weight27 5)) (= weight28 1)) (= weight29 1)) (= weight30 2)) (= weight31 2)) (= weight32 1)) (= weight33 1)) (= weight34 6)) (= weight35 6)) (= weight36 4)) (= weight37 6)) (= weight38 2)) (= weight39 2)) (= weight40 1)) (= weight41 1)) (= weight42 1)) (= weight43 1)) (= weight44 1)) (= weight45 1)) (= weight46 3)) (= weight47 2)) (= weight48 1)) (= weight49 9)) (= weight50 0)) (= weight51 1)) (= weight52 12)) (= weight53 10)) (= weight54 3)) (= weight55 3)) (= weight56 1)) (= weight57 1)) (= weight58 1)) (= weight59 8)) (= weight60 9)) (= weight61 8)) (= weight62 2)) (= weight63 2)) (= weight64 2)) (= weight65 3)) (= weight66 3)) (= weight67 3)) (= weight68 0)) (= weight69 1)) (= weight70 1)) (= weight71 4)) (= weight72 6)) (= weight73 2)) (= weight74 2)) (= weight75 4)) (= weight76 6)) (= weight77 3)) (= weight78 3)) (= weight79 4)) (= weight80 4)) (= weight81 4)) (= weight82 4)) (= weight83 7)) (= weight84 7)) (= weight85 3)) (= weight86 3)) (= weight87 1)) (= weight88 1)) (= weight89 1)) (= weight90 3)) (= weight91 3)) (= weight92 1)) (= weight93 1)) (= weight94 2)) (= weight95 2)) (= weight96 2)) (= weight97 2)) (= weight98 5)) (= weight99 5)) (= weight100 5)) (= weight101 6)) (= weight102 6)) (= weight103 6)) (= weight104 1)) (= weight105 1)) (= weight106 1)) (= weight107 8)) (= weight108 8)) (= weight109 8)) (= weight110 2)) (= weight111 0)) (= weight112 2)) (= weight113 2)) (= weight114 21)) (= weight115 6)) (= weight116 8)) (= weight117 4)) (= weight118 5)) (= weight119 7)) (= weight120 2)) (= weight121 1)) (= weight122 4)) (= weight123 4)) (= weight124 2)) (= weight125 3)) (= weight126 3)) (= weight127 4)) (= weight128 4)) (= weight129 2)) (= weight130 1)) (= weight131 1)) (= weight132 1)) (= weight133 2)) (= weight134 2)) (= weight135 4)) (= weight136 2)) (= weight137 6)) (= weight138 5)) (= weight139 2)) (= weight140 3)) (= weight141 22)) (= weight142 4)) (= weight143 5)) (= weight144 5)) (= weight145 6)) (= weight146 3)) (= weight147 11)) (= weight148 23)) (= weight149 1)) (= weight150 1)) (= weight151 2)) (= weight152 3)) (= weight153 4)) (= weight154 1)) (= weight155 3)) (= weight156 7)) (= weight157 3)) (= weight158 5)) ))
(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 4) (= weight1 2)) (= weight2 1)) (= weight3 12)) (= weight4 2)) (= weight5 3)) (= weight6 7)) (= weight7 5)) (= weight8 1)) (= weight9 1)) (= weight10 9)) (= weight11 12)) (= weight12 2)) (= weight13 1)) (= weight14 5)) (= weight15 4)) (= weight16 8)) (= weight17 0)) (= weight18 3)) (= weight19 3)) (= weight20 2)) (= weight21 2)) (= weight22 1)) (= weight23 1)) (= weight24 3)) (= weight25 3)) (= weight26 5)) (= weight27 5)) (= weight28 1)) (= weight29 1)) (= weight30 2)) (= weight31 2)) (= weight32 1)) (= weight33 1)) (= weight34 6)) (= weight35 6)) (= weight36 4)) (= weight37 6)) (= weight38 2)) (= weight39 2)) (= weight40 1)) (= weight41 1)) (= weight42 1)) (= weight43 1)) (= weight44 1)) (= weight45 1)) (= weight46 3)) (= weight47 2)) (= weight48 1)) (= weight49 9)) (= weight50 0)) (= weight51 1)) (= weight52 12)) (= weight53 10)) (= weight54 3)) (= weight55 3)) (= weight56 1)) (= weight57 1)) (= weight58 1)) (= weight59 8)) (= weight60 9)) (= weight61 8)) (= weight62 2)) (= weight63 2)) (= weight64 2)) (= weight65 3)) (= weight66 3)) (= weight67 3)) (= weight68 0)) (= weight69 1)) (= weight70 1)) (= weight71 4)) (= weight72 6)) (= weight73 2)) (= weight74 2)) (= weight75 4)) (= weight76 6)) (= weight77 3)) (= weight78 3)) (= weight79 4)) (= weight80 4)) (= weight81 4)) (= weight82 4)) (= weight83 7)) (= weight84 7)) (= weight85 3)) (= weight86 3)) (= weight87 1)) (= weight88 1)) (= weight89 1)) (= weight90 3)) (= weight91 3)) (= weight92 1)) (= weight93 1)) (= weight94 2)) (= weight95 2)) (= weight96 2)) (= weight97 2)) (= weight98 5)) (= weight99 5)) (= weight100 5)) (= weight101 6)) (= weight102 6)) (= weight103 6)) (= weight104 1)) (= weight105 1)) (= weight106 1)) (= weight107 8)) (= weight108 8)) (= weight109 8)) (= weight110 2)) (= weight111 2)) (= weight112 0)) (= weight113 2)) (= weight114 21)) (= weight115 6)) (= weight116 8)) (= weight117 4)) (= weight118 5)) (= weight119 7)) (= weight120 2)) (= weight121 1)) (= weight122 4)) (= weight123 4)) (= weight124 2)) (= weight125 3)) (= weight126 3)) (= weight127 4)) (= weight128 4)) (= weight129 2)) (= weight130 1)) (= weight131 1)) (= weight132 1)) (= weight133 2)) (= weight134 2)) (= weight135 4)) (= weight136 2)) (= weight137 6)) (= weight138 5)) (= weight139 2)) (= weight140 3)) (= weight141 22)) (= weight142 4)) (= weight143 5)) (= weight144 5)) (= weight145 6)) (= weight146 3)) (= weight147 11)) (= weight148 23)) (= weight149 1)) (= weight150 1)) (= weight151 2)) (= weight152 3)) (= weight153 4)) (= weight154 1)) (= weight155 3)) (= weight156 7)) (= weight157 3)) (= weight158 5)) ))
(assert (not (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= weight0 4) (= weight1 2)) (= weight2 1)) (= weight3 12)) (= weight4 2)) (= weight5 3)) (= weight6 7)) (= weight7 5)) (= weight8 1)) (= weight9 1)) (= weight10 9)) (= weight11 12)) (= weight12 2)) (= weight13 1)) (= weight14 5)) (= weight15 4)) (= weight16 8)) (= weight17 0)) (= weight18 3)) (= weight19 3)) (= weight20 2)) (= weight21 2)) (= weight22 1)) (= weight23 1)) (= weight24 3)) (= weight25 3)) (= weight26 5)) (= weight27 5)) (= weight28 1)) (= weight29 1)) (= weight30 2)) (= weight31 2)) (= weight32 1)) (= weight33 1)) (= weight34 6)) (= weight35 6)) (= weight36 4)) (= weight37 6)) (= weight38 2)) (= weight39 2)) (= weight40 1)) (= weight41 1)) (= weight42 1)) (= weight43 1)) (= weight44 1)) (= weight45 1)) (= weight46 3)) (= weight47 2)) (= weight48 1)) (= weight49 9)) (= weight50 0)) (= weight51 1)) (= weight52 12)) (= weight53 10)) (= weight54 3)) (= weight55 3)) (= weight56 1)) (= weight57 1)) (= weight58 1)) (= weight59 8)) (= weight60 9)) (= weight61 8)) (= weight62 2)) (= weight63 2)) (= weight64 2)) (= weight65 3)) (= weight66 3)) (= weight67 3)) (= weight68 1)) (= weight69 1)) (= weight70 0)) (= weight71 4)) (= weight72 6)) (= weight73 2)) (= weight74 2)) (= weight75 4)) (= weight76 6)) (= weight77 3)) (= weight78 3)) (= weight79 4)) (= weight80 4)) (= weight81 4)) (= weight82 4)) (= weight83 7)) (= weight84 7)) (= weight85 3)) (= weight86 3)) (= weight87 1)) (= weight88 1)) (= weight89 1)) (= weight90 3)) (= weight91 3)) (= weight92 1)) (= weight93 1)) (= weight94 2)) (= weight95 2)) (= weight96 2)) (= weight97 2)) (= weight98 5)) (= weight99 5)) (= weight100 5)) (= weight101 6)) (= weight102 6)) (= weight103 6)) (= weight104 1)) (= weight105 1)) (= weight106 1)) (= weight107 8)) (= weight108 8)) (= weight109 8)) (= weight110 2)) (= weight111 0)) (= weight112 2)) (= weight113 2)) (= weight114 21)) (= weight115 6)) (= weight116 8)) (= weight117 4)) (= weight118 5)) (= weight119 7)) (= weight120 2)) (= weight121 1)) (= weight122 4)) (= weight123 4)) (= weight124 2)) (= weight125 3)) (= weight126 3)) (= weight127 4)) (= weight128 4)) (= weight129 2)) (= weight130 1)) (= weight131 1)) (= weight132 1)) (= weight133 2)) (= weight134 2)) (= weight135 4)) (= weight136 2)) (= weight137 6)) (= weight138 5)) (= weight139 2)) (= weight140 3)) (= weight141 22)) (= weight142 4)) (= weight143 5)) (= weight144 5)) (= weight145 6)) (= weight146 3)) (= weight147 11)) (= weight148 23)) (= weight149 1)) (= weight150 1)) (= weight151 2)) (= weight152 3)) (= weight153 4)) (= weight154 1)) (= weight155 3)) (= weight156 7)) (= weight157 3)) (= weight158 5)) ))
