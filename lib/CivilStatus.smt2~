
;this file is automatically generated: Fri Mar 18 12:22:47 GMT 2016

;declarations generated

(declare-fun person_name ( Int) Int )
(declare-fun Gender ( Int) Int )
(declare-fun container_ ( Int) Int )
(declare-fun obj_af531990_cf38_41c4_8495_0f25988af933 ( Int) Int )
(declare-fun Cardinality ( Int) Int )
(declare-fun rel_1b0949cb_cc51_4e22_a671_2cddad716403_Marriage ( Int Int) Bool )
(declare-fun aux2 () Int )
(declare-fun aux0 () Int )
(declare-fun aux1 () Int )
(declare-fun type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person ( Int) Bool )
(declare-fun CivilStatus ( Int) Int )

;formula(s) generated
(assert (forall ((p Int)) (=> ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person p )  (and (>= ( CivilStatus ( obj_af531990_cf38_41c4_8495_0f25988af933 p )  )  0) (<= ( CivilStatus ( obj_af531990_cf38_41c4_8495_0f25988af933 p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person p )  (and (>= ( Gender ( obj_af531990_cf38_41c4_8495_0f25988af933 p )  )  0) (<= ( Gender ( obj_af531990_cf38_41c4_8495_0f25988af933 p )  )  1)))))
(assert (forall ((a Int)(b Int)) (and (= ( rel_1b0949cb_cc51_4e22_a671_2cddad716403_Marriage ( obj_af531990_cf38_41c4_8495_0f25988af933 a )   ( obj_af531990_cf38_41c4_8495_0f25988af933 b )  )  ( rel_1b0949cb_cc51_4e22_a671_2cddad716403_Marriage ( obj_af531990_cf38_41c4_8495_0f25988af933 b )   ( obj_af531990_cf38_41c4_8495_0f25988af933 a )  ) ) (and ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person ( obj_af531990_cf38_41c4_8495_0f25988af933 a )  )  ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person ( obj_af531990_cf38_41c4_8495_0f25988af933 b )  ) ))))
(assert (exists ((x Int)(y Int)) (and ( rel_1b0949cb_cc51_4e22_a671_2cddad716403_Marriage ( obj_af531990_cf38_41c4_8495_0f25988af933 x )   ( obj_af531990_cf38_41c4_8495_0f25988af933 y )  )  (and ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person x )  ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person y ) ))))
(assert (forall ((x Int)(y Int)) (=> (and ( rel_1b0949cb_cc51_4e22_a671_2cddad716403_Marriage ( obj_af531990_cf38_41c4_8495_0f25988af933 x )   ( obj_af531990_cf38_41c4_8495_0f25988af933 y )  )  (and ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person x )  ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person y ) )) (or (or (or (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  0)) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  0))) (= (* ( Cardinality ( container_ x )  )  0) (* ( Cardinality ( container_ y )  )  1))) (= (* ( Cardinality ( container_ x )  )  1) (* ( Cardinality ( container_ y )  )  1))))))
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall ((p2 Int)(p1 Int)) (=> (and ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person p1 )  ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person p2 ) ) (=> (not (= ( obj_af531990_cf38_41c4_8495_0f25988af933 p1 )  ( obj_af531990_cf38_41c4_8495_0f25988af933 p2 ) ) ) (not (= ( person_name ( obj_af531990_cf38_41c4_8495_0f25988af933 p1 )  )  ( person_name ( obj_af531990_cf38_41c4_8495_0f25988af933 p2 )  ) ) )))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (forall ((p2 Int)(p1 Int)) (=> (and ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person p1 )  ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person p2 ) ) (=> (not (= ( obj_af531990_cf38_41c4_8495_0f25988af933 p1 )  ( obj_af531990_cf38_41c4_8495_0f25988af933 p2 ) ) ) (not (= ( person_name ( obj_af531990_cf38_41c4_8495_0f25988af933 p1 )  )  ( person_name ( obj_af531990_cf38_41c4_8495_0f25988af933 p2 )  ) ) )))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (forall ((p Int)) (=> ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person p )  (=> (= ( Gender ( obj_af531990_cf38_41c4_8495_0f25988af933 p )  )  0) (not (exists ((v Int)) (and ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person v )  ( rel_1b0949cb_cc51_4e22_a671_2cddad716403_Marriage ( obj_af531990_cf38_41c4_8495_0f25988af933 v )   ( obj_af531990_cf38_41c4_8495_0f25988af933 p )  ) )) )))) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (forall ((p Int)) (=> ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person p )  (=> (= ( Gender ( obj_af531990_cf38_41c4_8495_0f25988af933 p )  )  0) (not (exists ((v Int)) (and ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person v )  ( rel_1b0949cb_cc51_4e22_a671_2cddad716403_Marriage ( obj_af531990_cf38_41c4_8495_0f25988af933 v )   ( obj_af531990_cf38_41c4_8495_0f25988af933 p )  ) )) )))))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (forall ((p Int)) (=> ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person p )  (=> (= ( Gender ( obj_af531990_cf38_41c4_8495_0f25988af933 p )  )  1) (not (exists ((v Int)) (and ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person v )  ( rel_1b0949cb_cc51_4e22_a671_2cddad716403_Marriage ( obj_af531990_cf38_41c4_8495_0f25988af933 v )   ( obj_af531990_cf38_41c4_8495_0f25988af933 p )  ) )) )))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (forall ((p Int)) (=> ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person p )  (=> (= ( Gender ( obj_af531990_cf38_41c4_8495_0f25988af933 p )  )  1) (not (exists ((v Int)) (and ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person v )  ( rel_1b0949cb_cc51_4e22_a671_2cddad716403_Marriage ( obj_af531990_cf38_41c4_8495_0f25988af933 v )   ( obj_af531990_cf38_41c4_8495_0f25988af933 p )  ) )) )))))
(assert (exists ((o Int)) ( type_20a9b4ef_8f0a_4ec1_ac6c_1c19f08cdc1b_Person o ) ))
(assert (= (+ (+ aux0 aux1) aux2) 0))

 ;end of formula 
