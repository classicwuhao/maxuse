
;this file is automatically generated: Tue Mar 08 16:46:49 GMT 2016

;declarations generated

(declare-fun rel_1bfbdf0e_16a7_44db_98cc_29c6de5a0e14_Marriage ( Int Int) Bool )
(declare-fun person_name ( Int) Int )
(declare-fun Gender ( Int) Int )
(declare-fun type_5c17741d_cc47_4787_acaf_f974aff54ffb_Person ( Int) Bool )
(declare-fun obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d ( Int) Int )
(declare-fun aux2 () Int )
(declare-fun aux0 () Int )
(declare-fun aux1 () Int )
(declare-fun CivilStatus ( Int) Int )

;formula(s) generated
(assert (forall ((p Int)) (=> ( type_5c17741d_cc47_4787_acaf_f974aff54ffb_Person p )  (and (>= ( CivilStatus ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p )  )  0) (<= ( CivilStatus ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p )  )  3)))))
(assert (forall ((p Int)) (=> ( type_5c17741d_cc47_4787_acaf_f974aff54ffb_Person p )  (and (>= ( Gender ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p )  )  0) (<= ( Gender ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p )  )  1)))))
(assert (forall ((a Int)(b Int)) (= ( rel_1bfbdf0e_16a7_44db_98cc_29c6de5a0e14_Marriage a  b )  ( rel_1bfbdf0e_16a7_44db_98cc_29c6de5a0e14_Marriage b  a ) )))
(assert (and (>= aux0 0) (<= aux0 1)))
(assert (or (or (forall ((p2 Int)(p1 Int)) (=> (and ( type_5c17741d_cc47_4787_acaf_f974aff54ffb_Person p1 )  ( type_5c17741d_cc47_4787_acaf_f974aff54ffb_Person p2 ) ) (=> (not (= ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p1 )  ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p2 ) ) ) (not (= ( person_name ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p1 )  )  ( person_name ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p2 )  ) ) )))) (and (= aux0 1) true)) (and (= aux0 0) false)))
(assert (forall ((p2 Int)(p1 Int)) (=> (and ( type_5c17741d_cc47_4787_acaf_f974aff54ffb_Person p1 )  ( type_5c17741d_cc47_4787_acaf_f974aff54ffb_Person p2 ) ) (=> (not (= ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p1 )  ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p2 ) ) ) (not (= ( person_name ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p1 )  )  ( person_name ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p2 )  ) ) )))))
(assert (and (>= aux1 0) (<= aux1 1)))
(assert (or (or (forall ((p Int)) (=> ( type_5c17741d_cc47_4787_acaf_f974aff54ffb_Person p )  (=> (= ( Gender ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p )  )  0) (not (exists ((v Int)) (and ( type_5c17741d_cc47_4787_acaf_f974aff54ffb_Person v )  ( rel_1bfbdf0e_16a7_44db_98cc_29c6de5a0e14_Marriage ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d v )   ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p )  ) )) )))) (and (= aux1 1) true)) (and (= aux1 0) false)))
(assert (forall ((p Int)) (=> ( type_5c17741d_cc47_4787_acaf_f974aff54ffb_Person p )  (=> (= ( Gender ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p )  )  0) (not (exists ((v Int)) (and ( type_5c17741d_cc47_4787_acaf_f974aff54ffb_Person v )  ( rel_1bfbdf0e_16a7_44db_98cc_29c6de5a0e14_Marriage ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d v )   ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p )  ) )) )))))
(assert (and (>= aux2 0) (<= aux2 1)))
(assert (or (or (forall ((p Int)) (=> ( type_5c17741d_cc47_4787_acaf_f974aff54ffb_Person p )  (=> (= ( Gender ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p )  )  1) (not (exists ((v Int)) (and ( type_5c17741d_cc47_4787_acaf_f974aff54ffb_Person v )  ( rel_1bfbdf0e_16a7_44db_98cc_29c6de5a0e14_Marriage ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d v )   ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p )  ) )) )))) (and (= aux2 1) true)) (and (= aux2 0) false)))
(assert (forall ((p Int)) (=> ( type_5c17741d_cc47_4787_acaf_f974aff54ffb_Person p )  (=> (= ( Gender ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p )  )  1) (not (exists ((v Int)) (and ( type_5c17741d_cc47_4787_acaf_f974aff54ffb_Person v )  ( rel_1bfbdf0e_16a7_44db_98cc_29c6de5a0e14_Marriage ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d v )   ( obj_7ada6f9c_345d_4531_bef9_2fcac183fe8d p )  ) )) )))))
(assert (exists ((o Int)) ( type_5c17741d_cc47_4787_acaf_f974aff54ffb_Person o ) ))
(assert (= (+ (+ aux0 aux1) aux2) 0))

 ;end of formula 
