model AIRPORT

enum Area_Status{occupied, available}
enum Airplane_Status{wait,free,busy,landing,landed,takingoff,takenoff}
enum Command{hold,land,takeoff}

class Airplane
attributes
	id : String
	status : Airplane_Status
	message : Command
	runwayid : Runway
operations
	land(w:Runway)
	takeoff(w:Runway)
	wait(t:Taxiway)
end

class ControlTower
operations
	issue(a:Airplane,c:Command) : Boolean
end

class Area
attributes
	name : String
	status : Area_Status
end

class Runway < Area
end

class Taxiway < Area
end

association ListensTo between
  Airplane[0..*] role airplanes
  ControlTower[1] role control
end

association Check between
	ControlTower[1] role control
	Area [0..*] role area
end

constraints

-- no two airplanes should takeoff/land on the same runway at the same time.
context Airplane
		inv: Airplane.allInstances()->forAll(a1,a2| 
			(a1 <> a2) and (a1.status=#landing and a2.status=#landing) implies a1.runwayid <> a2.runwayid)
					
		inv: Airplane.allInstances()->forAll(a1,a2| 
			(a1 <> a2) and (a1.status=#takingoff and a2.status=#takingoff) implies a1.runwayid <> a2.runwayid)

-- landing airplane on a specific runway w
-- window constructs here allow us to describe a specific time peirod. This is a new feature to add into OCL.
context Airplane::land(w:Runway)
		pre:  self.message=#land and w.status=#available
			--window[duration]
				-- self.status=#landing
				-- w.status=#occupied
				-- self.runwayid=w
			--end window
		post: self.status=#landed
		post: w.status=#available

-- take off from a specific runway w
context Airplane::takeoff(w:Runway)
		pre: self.message=#takeoff and w.status=#available
			--window[duration]
				-- self.status=#takingoff
				-- w.status=#occupied
				-- self.runwayid=w
			--end window
		post: self.status=#takenoff
		post: w.status=#available

-- An airplane waits at a specific taxiway.
context Airplane::wait(t:Taxiway)
	pre: 	self.control.area->forAll(a|a.oclIsTypeOf(Runway) and a.status=#occupied)
	post: 	self.status = #wait

context ControlTower::issue(a:Airplane, c:Command) : Boolean
	post: a.message=c
	post: result=true

