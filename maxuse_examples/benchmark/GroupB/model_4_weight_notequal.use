model model_groupB_4_weight_notequal

enum Enum0 { Enum0Elem0, Enum0Elem1, Enum0Elem2, Enum0Elem3 } 

enum Enum1 { Enum1Elem0, Enum1Elem1, Enum1Elem2, Enum1Elem3, Enum1Elem4, Enum1Elem5, Enum1Elem6, Enum1Elem7, Enum1Elem8, Enum1Elem9, Enum1Elem10, Enum1Elem11, Enum1Elem12, Enum1Elem13 } 

enum Enum2 { Enum2Elem0, Enum2Elem1, Enum2Elem2, Enum2Elem3, Enum2Elem4, Enum2Elem5, Enum2Elem6 } 

@Weight = default
class Class0 < Class22
attributes 
	Class0BoolAttr0 : Boolean 
	Class0BoolAttr1 : Boolean 
	Class0BoolAttr2 : Boolean 
	Class0IntAttr3 : Integer 
	Class0IntAttr4 : Integer 
	Class0EnumAttr5 : Enum0 
end 

@Weight = default
class Class1
attributes 
	Class1BoolAttr0 : Boolean 
	Class1BoolAttr1 : Boolean 
	Class1BoolAttr2 : Boolean 
	Class1IntAttr3 : Integer 
	Class1IntAttr4 : Integer 
	Class1EnumAttr5 : Enum2 
end 

-- hard invariants
class Class2
attributes 
	Class2BoolAttr0 : Boolean 
	Class2BoolAttr1 : Boolean 
	Class2BoolAttr2 : Boolean 
	Class2IntAttr3 : Integer 
	Class2IntAttr4 : Integer 
	Class2EnumAttr5 : Enum1 
end 

@Weight = 10
class Class3
attributes 
	Class3BoolAttr0 : Boolean 
	Class3BoolAttr1 : Boolean 
	Class3BoolAttr2 : Boolean 
	Class3IntAttr3 : Integer 
	Class3IntAttr4 : Integer 
	Class3EnumAttr5 : Enum0 
end 

@Weight = 2
class Class4 < Class33
attributes 
	Class4BoolAttr0 : Boolean 
	Class4BoolAttr1 : Boolean 
	Class4BoolAttr2 : Boolean 
	Class4IntAttr3 : Integer 
	Class4IntAttr4 : Integer 
	Class4EnumAttr5 : Enum1 
end 

@Weight = 3
class Class5
attributes 
	Class5BoolAttr0 : Boolean 
	Class5BoolAttr1 : Boolean 
	Class5BoolAttr2 : Boolean 
	Class5IntAttr3 : Integer 
	Class5IntAttr4 : Integer 
	Class5EnumAttr5 : Enum1 
end 

@Weight = 5
class Class6 < Class42
attributes 
	Class6BoolAttr0 : Boolean 
	Class6BoolAttr1 : Boolean 
	Class6BoolAttr2 : Boolean 
	Class6IntAttr3 : Integer 
	Class6IntAttr4 : Integer 
	Class6EnumAttr5 : Enum2 
end 

@Weight = 11
class Class7
attributes 
	Class7BoolAttr0 : Boolean 
	Class7BoolAttr1 : Boolean 
	Class7BoolAttr2 : Boolean 
	Class7IntAttr3 : Integer 
	Class7IntAttr4 : Integer 
	Class7EnumAttr5 : Enum2 
end 

@Weight = 1
class Class8 < Class10
attributes 
	Class8BoolAttr0 : Boolean 
	Class8BoolAttr1 : Boolean 
	Class8BoolAttr2 : Boolean 
	Class8IntAttr3 : Integer 
	Class8IntAttr4 : Integer 
	Class8EnumAttr5 : Enum2 
end 

@Weight = 1
class Class9 < Class0,Class41
attributes 
	Class9BoolAttr0 : Boolean 
	Class9BoolAttr1 : Boolean 
	Class9BoolAttr2 : Boolean 
	Class9IntAttr3 : Integer 
	Class9IntAttr4 : Integer 
	Class9EnumAttr5 : Enum0 
end 

@Weight = 1
class Class10 < Class41
attributes 
	Class10BoolAttr0 : Boolean 
	Class10BoolAttr1 : Boolean 
	Class10IntAttr2 : Integer 
	Class10IntAttr3 : Integer 
	Class10EnumAttr4 : Enum1 
end 

@Weight = 1
class Class11
attributes 
	Class11BoolAttr0 : Boolean 
	Class11BoolAttr1 : Boolean 
	Class11IntAttr2 : Integer 
	Class11IntAttr3 : Integer 
	Class11EnumAttr4 : Enum1 
end 

@Weight = default
class Class12 < Class0
attributes 
	Class12BoolAttr0 : Boolean 
	Class12BoolAttr1 : Boolean 
	Class12IntAttr2 : Integer 
	Class12IntAttr3 : Integer 
	Class12EnumAttr4 : Enum1 
end 

@Weight = 1
class Class13 < Class16
attributes 
	Class13BoolAttr0 : Boolean 
	Class13BoolAttr1 : Boolean 
	Class13IntAttr2 : Integer 
	Class13IntAttr3 : Integer 
	Class13EnumAttr4 : Enum0 
end 

@Weight = 1
class Class14 < Class4
attributes 
	Class14BoolAttr0 : Boolean 
	Class14BoolAttr1 : Boolean 
	Class14IntAttr2 : Integer 
	Class14IntAttr3 : Integer 
	Class14EnumAttr4 : Enum2 
end 

@Weight = default
class Class15 < Class2
attributes 
	Class15BoolAttr0 : Boolean 
	Class15BoolAttr1 : Boolean 
	Class15IntAttr2 : Integer 
	Class15IntAttr3 : Integer 
	Class15EnumAttr4 : Enum2 
end 

@Weight = 8
class Class16 < Class15
attributes 
	Class16BoolAttr0 : Boolean 
	Class16BoolAttr1 : Boolean 
	Class16IntAttr2 : Integer 
	Class16IntAttr3 : Integer 
	Class16EnumAttr4 : Enum1 
end 

@Weight = 1
class Class17 < Class24
attributes 
	Class17BoolAttr0 : Boolean 
	Class17BoolAttr1 : Boolean 
	Class17IntAttr2 : Integer 
	Class17EnumAttr3 : Enum0 
end 

@Weight = 1
class Class18
attributes 
	Class18BoolAttr0 : Boolean 
	Class18BoolAttr1 : Boolean 
	Class18IntAttr2 : Integer 
	Class18EnumAttr3 : Enum0 
end 

@Weight = 1
class Class19
attributes 
	Class19BoolAttr0 : Boolean 
	Class19BoolAttr1 : Boolean 
	Class19IntAttr2 : Integer 
	Class19EnumAttr3 : Enum0 
end 

@Weight = 4
class Class20 < Class21
attributes 
	Class20BoolAttr0 : Boolean 
	Class20BoolAttr1 : Boolean 
	Class20IntAttr2 : Integer 
	Class20EnumAttr3 : Enum0 
end 

@Weight = 3
class Class21 < Class2
attributes 
	Class21BoolAttr0 : Boolean 
	Class21BoolAttr1 : Boolean 
	Class21IntAttr2 : Integer 
	Class21EnumAttr3 : Enum2 
end 

@Weight = 6
class Class22 < Class35
attributes 
	Class22BoolAttr0 : Boolean 
	Class22BoolAttr1 : Boolean 
	Class22IntAttr2 : Integer 
	Class22EnumAttr3 : Enum1 
end 

@Weight = 3
class Class23 < Class25
attributes 
	Class23IntAttr0 : Integer 
end 

@Weight = default
class Class24 < Class26
attributes 
	Class24IntAttr0 : Integer 
end 

@Weight = 11
class Class25 < Class12
attributes 
	Class25IntAttr0 : Integer 
end 

@Weight = default
class Class26 < Class32
attributes 
	Class26IntAttr0 : Integer 
end 

@Weight = 2
class Class27 < Class2
attributes 
	Class27IntAttr0 : Integer 
end 

@Weight = default
class Class28
attributes 
	Class28IntAttr0 : Integer 
end 

@Weight = 1
class Class29
attributes 
	Class29IntAttr0 : Integer 
end 

@Weight = default
class Class30 < Class2
attributes 
	Class30BoolAttr0 : Boolean 
	Class30BoolAttr1 : Boolean 
	Class30IntAttr2 : Integer 
	Class30IntAttr3 : Integer 
	Class30IntAttr4 : Integer 
end 

@Weight = 5
class Class31 < Class41
attributes 
	Class31BoolAttr0 : Boolean 
	Class31BoolAttr1 : Boolean 
	Class31IntAttr2 : Integer 
	Class31IntAttr3 : Integer 
	Class31IntAttr4 : Integer 
end 

@Weight = 1
class Class32 < Class2
attributes 
	Class32BoolAttr0 : Boolean 
	Class32BoolAttr1 : Boolean 
	Class32IntAttr2 : Integer 
	Class32IntAttr3 : Integer 
	Class32IntAttr4 : Integer 
end 

@Weight = 9
class Class33 < Class13,Class41
attributes 
	Class33BoolAttr0 : Boolean 
	Class33BoolAttr1 : Boolean 
	Class33IntAttr2 : Integer 
	Class33IntAttr3 : Integer 
	Class33IntAttr4 : Integer 
end 

@Weight = 7
class Class34
attributes 
	Class34BoolAttr0 : Boolean 
	Class34BoolAttr1 : Boolean 
	Class34IntAttr2 : Integer 
	Class34IntAttr3 : Integer 
	Class34IntAttr4 : Integer 
end 

@Weight = 2
class Class35 < Class2
attributes 
	Class35BoolAttr0 : Boolean 
	Class35BoolAttr1 : Boolean 
	Class35IntAttr2 : Integer 
	Class35EnumAttr4 : Enum0 
	Class35EnumAttr3 : Enum2 
end 

@Weight = 3
class Class36
attributes 
	Class36BoolAttr0 : Boolean 
	Class36BoolAttr1 : Boolean 
	Class36IntAttr2 : Integer 
	Class36EnumAttr3 : Enum0 
	Class36EnumAttr4 : Enum2 
end 

@Weight = 4
class Class37
attributes 
	Class37BoolAttr0 : Boolean 
	Class37BoolAttr1 : Boolean 
	Class37IntAttr2 : Integer 
	Class37EnumAttr4 : Enum1 
	Class37EnumAttr3 : Enum2 
end 

@Weight = 3
class Class38 < Class2
attributes 
	Class38BoolAttr0 : Boolean 
	Class38BoolAttr1 : Boolean 
	Class38IntAttr2 : Integer 
	Class38EnumAttr4 : Enum1 
	Class38EnumAttr3 : Enum2 
end 

@Weight = default
class Class39
attributes 
	Class39BoolAttr0 : Boolean 
	Class39BoolAttr1 : Boolean 
	Class39IntAttr2 : Integer 
	Class39EnumAttr3 : Enum0 
	Class39EnumAttr4 : Enum2 
end 

@Weight = 10
class Class40 < Class20
attributes 
	Class40BoolAttr0 : Boolean 
	Class40BoolAttr1 : Boolean 
	Class40IntAttr2 : Integer 
	Class40EnumAttr3 : Enum0 
	Class40EnumAttr4 : Enum0 
end 

@Weight = 10
class Class41 < Class16
attributes 
	Class41BoolAttr0 : Boolean 
	Class41IntAttr1 : Integer 
	Class41EnumAttr2 : Enum1 
end 

@Weight = 2
class Class42 < Class22
attributes 
	Class42BoolAttr0 : Boolean 
	Class42IntAttr1 : Integer 
	Class42EnumAttr2 : Enum1 
end 

@Weight = 4
class Class43
attributes 
	Class43BoolAttr0 : Boolean 
	Class43IntAttr1 : Integer 
	Class43EnumAttr2 : Enum2 
end 

@Weight = 1
class Class44 < Class33
attributes 
	Class44BoolAttr0 : Boolean 
	Class44IntAttr1 : Integer 
	Class44EnumAttr2 : Enum1 
end 

@Weight = 6
class Class45
attributes 
	Class45BoolAttr0 : Boolean 
	Class45IntAttr1 : Integer 
	Class45EnumAttr2 : Enum1 
end 

@Weight = 1
association Class0_Class36 between 
	 Class0 [1] role role0
	 Class36 [1..*] role role1
end 

@Weight = 1
association Class1_Class16 between 
	 Class1 [1..*] role role2
	 Class16 [1] role role3
end 

@Weight = default
association Class3_Class40 between 
	 Class3 [1..3] role role6
	 Class40 [1..2] role role7
end 

@Weight = 2
association Class4_Class39 between 
	 Class4 [1] role role8
	 Class39 [1] role role9
end 

@Weight = 4
association Class5_Class34 between 
	 Class5 [1] role role10
	 Class34 [1] role role11
end 

@Weight = 5
association Class7_Class14 between 
	 Class7 [2] role role14
	 Class14 [1] role role15
end 

@Weight = 1
association Class10_Class19 between 
	 Class10 [1] role role20
	 Class19 [3] role role21
end 

@Weight = 2
association Class11_Class10 between 
	 Class11 [1] role role22
	 Class10 [1] role role23
end 

@Weight = 1
association Class12_Class11 between 
	 Class12 [1] role role24
	 Class11 [0..1] role role25
end 

@Weight = 2
association Class13_Class41 between 
	 Class13 [1..*] role role26
	 Class41 [1] role role27
end 

@Weight = 1
association Class17_Class5 between 
	 Class17 [1] role role34
	 Class5 [1] role role35
end 

@Weight = 2
association Class18_Class4 between 
	 Class18 [1] role role36
	 Class4 [2] role role37
end 

@Weight = 1
association Class19_Class7 between 
	 Class19 [1] role role38
	 Class7 [0..1] role role39
end 

@Weight = 3
association Class21_Class30 between 
	 Class21 [0..*] role role42
	 Class30 [1..5] role role43
end 

@Weight = default
association Class22_Class26 between 
	 Class22 [0..*] role role44
	 Class26 [0..*] role role45
end 

constraints 

@Class0{Weight = 10} 
context Class0
	 inv: self.Class0IntAttr3 > 8
	 inv: Class0.allInstances()->forAll( c0_1,c0_2 | c0_1.Class0IntAttr4 <= c0_2.Class0IntAttr3 ) 
	 inv: Class0.allInstances()->forAll(c_0|Class15.allInstances()->forAll(c_15|c_0<>c_15))

@Class1{Weight = 1} 
context Class1
	 inv: self.Class1IntAttr3 <> 0
	 inv: Class1.allInstances()->forAll( c1_1,c1_2 | c1_1.Class1IntAttr4 < c1_2.Class1IntAttr3 ) 

@Class2{Weight = 3} 
context Class2
	 inv: self.Class2IntAttr4 < 11
	 inv: Class2.allInstances()->forAll( c2_1,c2_2 | c2_1.Class2IntAttr3 = c2_2.Class2IntAttr4 ) 

@Class3{Weight = 1} 
context Class3
	 inv: self.Class3IntAttr3 <= 11
	 inv: Class3.allInstances()->forAll( c3_1,c3_2 | c3_1.Class3IntAttr4 <= c3_2.Class3IntAttr3 ) 

@Class4{Weight = 4} 
context Class4
	 inv: self.Class4IntAttr4 <= 14
	 inv: Class4.allInstances()->forAll( c4_1,c4_2 | c4_1.Class4IntAttr4 < c4_2.Class4IntAttr3 ) 

@Class5{Weight = 2} 
context Class5
	 inv: self.Class5IntAttr3 <= 15
	 inv: self.Class5BoolAttr2 xor self.Class5BoolAttr0

@Class6{Weight = 1} 
context Class6
	 inv: self.Class6IntAttr4 < 9
	 inv: not self.Class6BoolAttr0

@Class7{Weight = 1} 
context Class7
	 inv: self.Class7IntAttr4 < 9
	 inv: not self.Class7BoolAttr1

@Class8{Weight = 2} 
context Class8
	 inv: self.Class8IntAttr3 < 7
	 inv: self.Class8BoolAttr2 xor self.Class8BoolAttr1

@Class9{Weight = 1} 
context Class9
	 inv: self.Class9IntAttr3 > 2
	 inv: not self.Class9BoolAttr2

@Class10{Weight = default} 
context Class10
	 inv: self.Class10IntAttr3 < 17
	 inv: Class10.allInstances()->forAll( c0_1,c0_2 | c0_1.Class10IntAttr3 = c0_2.Class10IntAttr2 ) or self.Class10IntAttr3 < 11 or self.Class10IntAttr3 < 0

@Class11{Weight = 1} 
context Class11
	 inv: self.Class11IntAttr3 > 10
	 inv: self.Class11EnumAttr4 = #Enum1Elem3 and self.Class11BoolAttr0

@Class12{Weight = 3} 
context Class12
	 inv: self.Class12IntAttr3 > 15
	 inv: Class12.allInstances()->forAll( c2_1,c2_2 | c2_1.Class12IntAttr2 >= c2_2.Class12IntAttr3 ) and Class12.allInstances()->forAll( c2_1,c2_2 | c2_1.Class12IntAttr2 <= c2_2.Class12IntAttr3 ) xor self.Class12IntAttr3 <> 15

@Class13{Weight = 3} 
context Class13
	 inv: self.Class13IntAttr3 > 9
	 inv: not self.Class13BoolAttr0 or self.Class13EnumAttr4 = #Enum0Elem0

@Class14{Weight = 5} 
context Class14
	 inv: self.Class14IntAttr2 <= 3
	 inv: self.Class14EnumAttr4 <> #Enum2Elem6 and self.Class14EnumAttr4 <> #Enum2Elem0 or not self.Class14BoolAttr0

@Class15{Weight = 1} 
context Class15
	 inv: self.Class15IntAttr3 > 0
	 inv: self.Class15BoolAttr1 or self.Class15BoolAttr0 xor self.Class15EnumAttr4 <> #Enum2Elem1

@Class16{Weight = 2} 
context Class16
	 inv: self.Class16IntAttr3 > 7
	 inv: self.Class16EnumAttr4 <> #Enum1Elem2 and self.Class16IntAttr2 <> 19 and self.Class16BoolAttr1 and self.Class16BoolAttr0

@Class17{Weight = 1} 
context Class17
	 inv: self.Class17BoolAttr1 or self.Class17BoolAttr0

@Class18{Weight = 2} 
context Class18
	 inv: not self.Class18BoolAttr1

@Class19{Weight = 1} 
context Class19
	 inv: self.Class19BoolAttr0

@Class20{Weight = 3} 
context Class20
	 inv: self.Class20BoolAttr1 or self.Class20BoolAttr0

@Class21{Weight = 1} 
context Class21
	 inv: self.Class21BoolAttr1

@Class22{Weight = 1} 
context Class22
	 inv: self.Class22BoolAttr0

@Class23{Weight = default} 
context Class23
	 inv: Class23.allInstances()->exists(c1 | c1.Class23IntAttr0 < 15) 

@Class24{Weight = default} 
context Class24
	 inv: Class24.allInstances()->forAll(c1 | c1.Class24IntAttr0 >= 17) 

-- hard invariants
context Class25
	 inv: Class25.allInstances()->exists(c1 | c1.Class25IntAttr0 > 16) 

@Class26{Weight = 1} 
context Class26
	 inv: Class26.allInstances()->exists(c1 | c1.Class26IntAttr0 <> 5) 

@Class27{Weight = 1} 
context Class27
	 inv: Class27.allInstances()->exists(c1 | c1.Class27IntAttr0 >= 1) 

-- hard invariants
context Class28
	 inv: Class28.allInstances()->exists(c1 | c1.Class28IntAttr0 = 13) 

@Class29{Weight = 1} 
context Class29
	 inv: Class29.allInstances()->forAll(c1 | c1.Class29IntAttr0 >= 4) 

@Class30{Weight = default} 
context Class30
	 inv: self.Class30IntAttr3 < 0
	 inv: not self.Class30BoolAttr1 xor self.Class30IntAttr3 < 7 xor self.Class30IntAttr4 >= 5
	 inv: Class30.allInstances()->exists(c1 | c1.Class30IntAttr3 <> 12) 

@Class31{Weight = 5} 
context Class31
	 inv: self.Class31IntAttr3 > 5
	 inv: self.Class31IntAttr2 >= 16 xor self.Class31BoolAttr1 or self.Class31BoolAttr0 xor self.Class31IntAttr2 <= 10
	 inv: Class31.allInstances()->forAll(c1,c2 | c1.Class31BoolAttr1 and c2.Class31BoolAttr0) 

@Class32{Weight = 1} 
context Class32
	 inv: self.Class32IntAttr3 > 17
	 inv: self.Class32BoolAttr0 or self.Class32BoolAttr1 or self.Class32IntAttr2 <= 8
	 inv: Class32.allInstances()->forAll(c1 | c1.Class32IntAttr2 = 11) 

@Class33{Weight = 1} 
context Class33
	 inv: self.Class33IntAttr3 <= 19
	 inv: Class33.allInstances()->forAll( c3_1,c3_2 | c3_1.Class33IntAttr2 <= c3_2.Class33IntAttr3 ) xor self.Class33IntAttr3 = 18
	 inv: Class33.allInstances()->forAll(c1 | c1.Class33IntAttr3 = 18) 

@Class34{Weight = 10} 
context Class34
	 inv: self.Class34IntAttr3 = 16
	 inv: self.Class34BoolAttr1 or self.Class34BoolAttr0 and self.Class34BoolAttr1 xor self.Class34BoolAttr0 xor self.Class34BoolAttr1
	 inv: Class34.allInstances()->forAll(c1 | c1.Class34BoolAttr0) 

@Class35{Weight = 9} 
context Class35
	 inv: self.Class35EnumAttr4 = #Enum0Elem1
	 inv: self.Class35BoolAttr0 or self.Class35BoolAttr1 and self.Class35IntAttr2 <> 15 or self.Class35BoolAttr0
	 inv: self.Class35BoolAttr0 or self.Class35BoolAttr1 xor self.Class35IntAttr2 <> 3 xor self.Class35IntAttr2 >= 6

@Class36{Weight = 3} 
context Class36
	 inv: self.Class36EnumAttr3 <> #Enum0Elem1
	 inv: self.Class36BoolAttr0 or self.Class36BoolAttr1 or self.Class36IntAttr2 <= 3
	 inv: self.Class36IntAttr2 = 12 xor self.Class36BoolAttr0 xor self.Class36BoolAttr1

@Class37{Weight = 1} 
context Class37
	 inv: self.Class37EnumAttr3 = #Enum2Elem0
	 inv: self.Class37EnumAttr3 = #Enum2Elem2 xor self.Class37BoolAttr1 and self.Class37BoolAttr0
	 inv: self.Class37EnumAttr4 <> #Enum1Elem1 xor self.Class37BoolAttr1 or self.Class37BoolAttr0

@Class38{Weight = default} 
context Class38
	 inv: self.Class38EnumAttr4 <> #Enum1Elem7
	 inv: self.Class38BoolAttr1 xor self.Class38BoolAttr0 or self.Class38IntAttr2 > 2
	 inv: self.Class38EnumAttr4 = #Enum1Elem9 xor self.Class38EnumAttr4 <> #Enum1Elem10 or self.Class38BoolAttr0 and self.Class38BoolAttr1

@Class39{Weight = 1} 
context Class39
	 inv: self.Class39EnumAttr3 = #Enum0Elem1
	 inv: self.Class39BoolAttr0 or self.Class39BoolAttr1 xor self.Class39BoolAttr0
	 inv: self.Class39BoolAttr1 or self.Class39BoolAttr0 and self.Class39IntAttr2 >= 1 xor self.Class39BoolAttr1 xor self.Class39BoolAttr0

@Class40{Weight = 1} 
context Class40
	 inv: self.Class40EnumAttr3 = #Enum0Elem2
	 inv: self.Class40EnumAttr3 <> #Enum0Elem2
	 inv: self.Class40EnumAttr4 = #Enum0Elem1 and self.Class40IntAttr2 < 12
	 inv: self.Class40BoolAttr1 or self.Class40BoolAttr0 and self.Class40IntAttr2 >= 6 xor self.Class40IntAttr2 <> 14

@Class41{Weight = default} 
context Class41
	 inv: self.Class41IntAttr1 > 8

@Class42{Weight = 2} 
context Class42
	 inv: self.Class42IntAttr1 = 2

@Class43{Weight = 1} 
context Class43
	 inv: self.Class43IntAttr1 < 7
	 inv: not self.Class43BoolAttr0

@Class44{Weight = default} 
context Class44
	 inv: self.Class44IntAttr1 < 3
	 inv: self.Class44BoolAttr0

@Class45{Weight = default} 
context Class45
	 inv: self.Class45IntAttr1 >= 8
	 inv: self.Class45BoolAttr0

